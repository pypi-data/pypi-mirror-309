# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['amberelectric', 'amberelectric.api', 'amberelectric.models']

package_data = \
{'': ['*']}

install_requires = \
['aenum>=3.1.11',
 'pydantic>=1.10.5',
 'python-dateutil>=2.8.2',
 'urllib3>=1.25.3']

setup_kwargs = {
    'name': 'amberelectric',
    'version': '2.0.9',
    'description': 'Amber Electric Public API',
    'long_description': '# amberelectric\nAmber is an Australian-based electricity retailer that pass through the real-time wholesale price of energy.\n\nBecause of Amber\'s wholesale power prices, you can save hundreds of dollars a year by automating high power devices like air-conditioners, heat pumps and pool pumps.\n\nThis Python library provides an interface to the API, allowing you to react to current and forecast prices, as well as download your historic usage.\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 2.0.0\n- Package version: 2.0.9\n- Generator version: 7.7.0\n- Build package: org.openapitools.codegen.languages.PythonPydanticV1ClientCodegen\nFor more information, please visit [https://www.amber.com.au](https://www.amber.com.au)\n\n## Requirements.\n\nPython 3.7+\n\n## Installation & Usage\n### pip install\n\nIf the python package is hosted on a repository, you can install directly using:\n\n```sh\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)\n\nThen import the package:\n```python\nimport amberelectric\n```\n\n### Building\n\nBuild via Poetry\n\n```sh\npoetry build\n```\n\n### Tests\n\nExecute `pytest` to run the tests.\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\n\nimport time\nimport amberelectric\nfrom amberelectric.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to https://api.amber.com.au/v1\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = amberelectric.Configuration(\n    host = "https://api.amber.com.au/v1"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure Bearer authorization: apiKey\nconfiguration = amberelectric.Configuration(\n    access_token = os.environ["BEARER_TOKEN"]\n)\n\n\n# Enter a context with an instance of the API client\nwith amberelectric.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = amberelectric.AmberApi(api_client)\n    site_id = \'01J23BAP2SFA218BMV8A73Y9Z9\' # str | ID of the site you are fetching prices for. Can be found using the `/sites` enpoint\n    next = 48 # int | Return the _next_ number of forecast intervals (optional)\n    previous = 48 # int | Return the _previous_ number of actual intervals. (optional)\n    resolution = 56 # int | Specify the required interval duration resolution. Valid options: 5, 30. Default: Your billing interval length. (optional)\n\n    try:\n        api_response = api_instance.get_current_prices(site_id, next=next, previous=previous, resolution=resolution)\n        print("The response of AmberApi->get_current_prices:\\n")\n        pprint(api_response)\n    except ApiException as e:\n        print("Exception when calling AmberApi->get_current_prices: %s\\n" % e)\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.amber.com.au/v1*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*AmberApi* | [**get_current_prices**](docs/AmberApi.md#get_current_prices) | **GET** /sites/{siteId}/prices/current | \n*AmberApi* | [**get_current_renewables**](docs/AmberApi.md#get_current_renewables) | **GET** /state/{state}/renewables/current | \n*AmberApi* | [**get_prices**](docs/AmberApi.md#get_prices) | **GET** /sites/{siteId}/prices | \n*AmberApi* | [**get_sites**](docs/AmberApi.md#get_sites) | **GET** /sites | \n*AmberApi* | [**get_usage**](docs/AmberApi.md#get_usage) | **GET** /sites/{siteId}/usage | \n\n\n## Documentation For Models\n\n - [ActualInterval](docs/ActualInterval.md)\n - [ActualRenewable](docs/ActualRenewable.md)\n - [AdvancedPrice](docs/AdvancedPrice.md)\n - [BaseInterval](docs/BaseInterval.md)\n - [BaseRenewable](docs/BaseRenewable.md)\n - [Channel](docs/Channel.md)\n - [ChannelType](docs/ChannelType.md)\n - [CurrentInterval](docs/CurrentInterval.md)\n - [CurrentRenewable](docs/CurrentRenewable.md)\n - [ForecastInterval](docs/ForecastInterval.md)\n - [ForecastRenewable](docs/ForecastRenewable.md)\n - [Interval](docs/Interval.md)\n - [PriceDescriptor](docs/PriceDescriptor.md)\n - [Range](docs/Range.md)\n - [Renewable](docs/Renewable.md)\n - [RenewableDescriptor](docs/RenewableDescriptor.md)\n - [Site](docs/Site.md)\n - [SiteStatus](docs/SiteStatus.md)\n - [SpikeStatus](docs/SpikeStatus.md)\n - [TariffInformation](docs/TariffInformation.md)\n - [Usage](docs/Usage.md)\n\n\n<a id="documentation-for-authorization"></a>\n## Documentation For Authorization\n\n\nAuthentication schemes defined for the API:\n<a id="apiKey"></a>\n### apiKey\n\n- **Type**: Bearer authentication\n\n\n## Author\n\ndev@amber.com.au\n\n\n',
    'author': 'Amber Electric Development Team',
    'author_email': 'dev@amber.com.au',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/madpilot/amberelectric.py',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7,<4.0',
}


setup(**setup_kwargs)
