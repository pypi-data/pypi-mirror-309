# Testing environments
[tox]
# tox-conda creates environments with conda with the specified version of
# python. The dependencies listed under 'deps' are installed with pip, while
# those specified under 'conda_env' are installed with conda.
requires = tox-conda
envlist =
    lint,
    py3{6,7,8,9,10,11,12,13}-build,
    py3{6,7,8,9,10,11,12,13}-execution-tests-{valid,invalid}-kernel,
    py3{6,7,8,9,10,11,12,13}-reading-tests,
    py3{6,7,8,9,10,11,12,13}-testing-tests,
    py3{6,7,8,9,10,11,12,13}-comparison-tests,
    py3{6,7,8,9,10,11,12,13}-validation-tests-{valid,invalid}-kernel,
    py3{6,7,8,9,10,11,12,13}-validation-tests-cli,

# Common test environment settings
[testenv]
recreate = true

# PyTest configuration
[pytest]
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning

# flake8 configuration
[flake8]
exclude = .env,.venv,venv,.tox,.eggs,.git,__pycache__,
    docs/source/conf.py,old,build,dist
max-line-length = 80
max-complexity = 10

# Lint python code
[testenv:lint]
basepython = python3.11
skip_install = true
deps = flake8
commands = flake8

# Build tests
[testenv:py3{6,7,8,9,10,11,12,13}-build]
deps =
    pytest
    setuptools
    wheel
    papermill
    nbformat
    build
commands = python3 -m build

# Reading, Testing, and Comparison tests
[testenv:py3{6,7,8,9,10,11,12,13}-{reading,testing,comparison}-tests]
deps =
    pytest
    setuptools
    wheel
    papermill
    nbformat
commands =
    reading: pytest tests/test_read_notebook.py
    testing: pytest tests/test_test_notebook.py -k 'not test_ipynb'
    comparison: pytest tests/test_compare_notebook.py

# Environments created with conda_env need to have python versions specified in
# their yaml files

# Execution and Validation tests
[testenv:py3{6,7,8,9,10,11,12,13}-{execution,validation}-tests-valid-kernel]
conda_env =
    py36: tests/hdf5-kernel-env-py36.yml
    py37: tests/hdf5-kernel-env-py37.yml
    py38: tests/hdf5-kernel-env-py38.yml
    py39: tests/hdf5-kernel-env-py39.yml
    py310: tests/hdf5-kernel-env-py310.yml
    py311: tests/hdf5-kernel-env-py311.yml
    py312: tests/hdf5-kernel-env-py312.yml
    py313: tests/hdf5-kernel-env-py313.yml
commands =
    execution: pytest tests/test_execute_notebook.py -k 'not invalid_kernel'
    py36-validation: pytest tests/test_validate_notebook.py -k 'not invalid_kernel and not py3789'
    py3{7,8,9,10,11,12,13}-validation: pytest tests/test_validate_notebook.py -k 'not invalid_kernel and not py36'

[testenv:py3{6,7,8,9,10,11,12,13}-{execution,validation}-tests-invalid-kernel]
conda_env =
    py36: tests/base-kernel-env-py36.yml
    py37: tests/base-kernel-env-py37.yml
    py38: tests/base-kernel-env-py38.yml
    py39: tests/base-kernel-env-py39.yml
    py310: tests/base-kernel-env-py310.yml
    py311: tests/base-kernel-env-py311.yml
    py312: tests/base-kernel-env-py312.yml
    py313: tests/base-kernel-env-py313.yml
commands =
    execution: pytest tests/test_execute_notebook.py -k 'invalid_kernel'
    validation: pytest tests/test_validate_notebook.py -k 'invalid_kernel'

[testenv:py3{6,7,8,9,10,11,12,13}-validation-tests-cli]
conda_env =
    py36: tests/hdf5-kernel-env-py36.yml
    py37: tests/hdf5-kernel-env-py37.yml
    py38: tests/hdf5-kernel-env-py38.yml
    py39: tests/hdf5-kernel-env-py39.yml
    py310: tests/hdf5-kernel-env-py310.yml
    py311: tests/hdf5-kernel-env-py311.yml
    py312: tests/hdf5-kernel-env-py312.yml
    py313: tests/hdf5-kernel-env-py313.yml
commands =
    jnbv -h
    python --version
    jupyter kernelspec list
    jnbv tests/example-hdf5-notebook.ipynb --kernel python3 --validate
