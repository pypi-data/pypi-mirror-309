"use strict";(self.webpackChunk_datalayer_core=self.webpackChunk_datalayer_core||[]).push([[5877],{49703:(e,t,n)=>{n.d(t,{HB:()=>l,Hv:()=>o,dC:()=>u,vJ:()=>c});var a=n(48425),s=n(1228),r=n.n(s),i=n(47963);const o=new i.Token("@jupyterlite/contents:IContents");var c,l;!function(e){e.JSON="application/json",e.PLAIN_TEXT="text/plain",e.OCTET_STREAM="octet/stream"}(c||(c={})),function(e){const t=JSON.parse(a.PageConfig.getOption("fileTypes")||"{}");e.getType=function(e,n=null){e=e.toLowerCase();for(const n of Object.values(t))for(const t of n.extensions||[])if(t===e&&n.mimeTypes&&n.mimeTypes.length)return n.mimeTypes[0];return r().getType(e)||n||c.OCTET_STREAM},e.hasFormat=function(e,n){e=e.toLowerCase();for(const a of Object.values(t))if(a.fileFormat===n)for(const t of a.extensions||[])if(t===e)return!0;return!1}}(l||(l={}));const u=new i.Token("@jupyterlite/contents:IBroadcastChannelWrapper")},15877:(e,t,n)=>{n.r(t),n.d(t,{default:()=>Q});var a=n(48425),s=n(49703),r=n(47963);const i="JupyterLite Storage";class o{constructor(e){this.reduceBytesToString=(e,t)=>e+String.fromCharCode(t),this._serverContents=new Map,this._storageName=i,this._storageDrivers=null,this._localforage=e.localforage,this._storageName=e.storageName||i,this._storageDrivers=e.storageDrivers||null,this._ready=new r.PromiseDelegate}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.createDefaultStorage(),this._counters=this.createDefaultCounters(),this._checkpoints=this.createDefaultCheckpoints()}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}get counters(){return this.ready.then((()=>this._counters))}get checkpoints(){return this.ready.then((()=>this._checkpoints))}get defaultStorageOptions(){const e=this._storageDrivers&&this._storageDrivers.length?this._storageDrivers:null;return{version:1,name:this._storageName,...e?{driver:e}:{}}}createDefaultStorage(){return this._localforage.createInstance({description:"Offline Storage for Notebooks and Files",storeName:"files",...this.defaultStorageOptions})}createDefaultCounters(){return this._localforage.createInstance({description:"Store the current file suffix counters",storeName:"counters",...this.defaultStorageOptions})}createDefaultCheckpoints(){return this._localforage.createInstance({description:"Offline Storage for Checkpoints",storeName:"checkpoints",...this.defaultStorageOptions})}async newUntitled(e){var t,n,r;const i=null!==(t=null==e?void 0:e.path)&&void 0!==t?t:"",o=null!==(n=null==e?void 0:e.type)&&void 0!==n?n:"notebook",l=(new Date).toISOString();let u=a.PathExt.dirname(i);const g=a.PathExt.basename(i),p=a.PathExt.extname(i),d=await this.get(u);let h,f="";switch(i&&!p&&d?(u=`${i}/`,f=""):u&&g?(u=`${u}/`,f=g):(u="",f=i),o){case"directory":f=`Untitled Folder${await this._incrementCounter("directory")||""}`,h={name:f,path:`${u}${f}`,last_modified:l,created:l,format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"};break;case"notebook":{const e=await this._incrementCounter("notebook");f=f||`Untitled${e||""}.ipynb`,h={name:f,path:`${u}${f}`,last_modified:l,created:l,format:"json",mimetype:s.vJ.JSON,content:c.EMPTY_NB,size:JSON.stringify(c.EMPTY_NB).length,writable:!0,type:"notebook"};break}default:{const t=null!==(r=null==e?void 0:e.ext)&&void 0!==r?r:".txt",n=await this._incrementCounter("file"),a=s.HB.getType(t)||s.vJ.OCTET_STREAM;let i;i=s.HB.hasFormat(t,"text")||-1!==a.indexOf("text")?"text":-1!==t.indexOf("json")||-1!==t.indexOf("ipynb")?"json":"base64",f=f||`untitled${n||""}${t}`,h={name:f,path:`${u}${f}`,last_modified:l,created:l,format:i,mimetype:a,content:"",size:0,writable:!0,type:"file"};break}}const y=h.path;return await(await this.storage).setItem(y,h),h}async copy(e,t){let n=a.PathExt.basename(e);for(t=""===t?"":`${t.slice(1)}/`;await this.get(`${t}${n}`,{content:!0});){const e=a.PathExt.extname(n),t=n.replace(e,"");n=`${t} (copy)${e}`}const s=`${t}${n}`;let r=await this.get(e,{content:!0});if(!r)throw Error(`Could not find file with path ${e}`);return r={...r,name:n,path:s},await(await this.storage).setItem(s,r),r}async get(e,t){if(""===(e=decodeURIComponent(e.replace(/^\//,""))))return await this._getFolder(e);const n=await this.storage,r=await n.getItem(e),i=await this._getServerContents(e,t),o=r||i;if(!o)return null;if(!(null==t?void 0:t.content))return{size:0,...o,content:null};if("directory"===o.type){const t=new Map;await n.iterate(((n,a)=>{a===`${e}/${n.name}`&&t.set(n.name,n)}));const r=i?i.content:Array.from((await this._getServerDirectory(e)).values());for(const e of r)t.has(e.name)||t.set(e.name,e);const c=[...t.values()];return{name:a.PathExt.basename(e),path:e,last_modified:o.last_modified,created:o.created,format:"json",mimetype:s.vJ.JSON,content:c,size:0,writable:!0,type:"directory"}}return o}async rename(e,t){const n=decodeURIComponent(e),s=await this.get(n,{content:!0});if(!s)throw Error(`Could not find file with path ${n}`);const r=(new Date).toISOString(),i=a.PathExt.basename(t),o={...s,name:i,path:t,last_modified:r},c=await this.storage;if(await c.setItem(t,o),await c.removeItem(n),await(await this.checkpoints).removeItem(n),"directory"===s.type){let n;for(n of s.content)await this.rename(a.URLExt.join(e,n.name),a.URLExt.join(t,n.name))}return o}async save(e,t={}){var n;e=decodeURIComponent(e);const r=a.PathExt.extname(null!==(n=t.name)&&void 0!==n?n:""),i=t.chunk,o=!!i&&(i>1||-1===i);let c=await this.get(e,{content:o});if(c||(c=await this.newUntitled({path:e,ext:r,type:"file"})),!c)return null;const l=c.content,u=(new Date).toISOString();if(c={...c,...t,last_modified:u},t.content&&"base64"===t.format){const e=!i||-1===i;if(".ipynb"===r){const n=this._handleChunk(t.content,l,o);c={...c,content:e?JSON.parse(n):n,format:"json",type:"notebook",size:n.length}}else if(s.HB.hasFormat(r,"json")){const n=this._handleChunk(t.content,l,o);c={...c,content:e?JSON.parse(n):n,format:"json",type:"file",size:n.length}}else if(s.HB.hasFormat(r,"text")){const e=this._handleChunk(t.content,l,o);c={...c,content:e,format:"text",type:"file",size:e.length}}else{const e=t.content;c={...c,content:e,size:atob(e).length}}}return await(await this.storage).setItem(e,c),c}async delete(e){const t=`${e=decodeURIComponent(e)}/`,n=(await(await this.storage).keys()).filter((n=>n===e||n.startsWith(t)));await Promise.all(n.map(this.forgetPath,this))}async forgetPath(e){await Promise.all([(await this.storage).removeItem(e),(await this.checkpoints).removeItem(e)])}async createCheckpoint(e){var t;const n=await this.checkpoints;e=decodeURIComponent(e);const a=await this.get(e,{content:!0});if(!a)throw Error(`Could not find file with path ${e}`);const s=(null!==(t=await n.getItem(e))&&void 0!==t?t:[]).filter(Boolean);return s.push(a),s.length>5&&s.splice(0,s.length-5),await n.setItem(e,s),{id:""+(s.length-1),last_modified:a.last_modified}}async listCheckpoints(e){return(await(await this.checkpoints).getItem(e)||[]).filter(Boolean).map(this.normalizeCheckpoint,this)}normalizeCheckpoint(e,t){return{id:t.toString(),last_modified:e.last_modified}}async restoreCheckpoint(e,t){e=decodeURIComponent(e);const n=(await(await this.checkpoints).getItem(e)||[])[parseInt(t)];await(await this.storage).setItem(e,n)}async deleteCheckpoint(e,t){e=decodeURIComponent(e);const n=await(await this.checkpoints).getItem(e)||[],a=parseInt(t);n.splice(a,1),await(await this.checkpoints).setItem(e,n)}_handleChunk(e,t,n){const a=decodeURIComponent(escape(atob(e)));return n?t+a:a}async _getFolder(e){const t=new Map,n=await this.storage;await n.iterate(((e,n)=>{n.includes("/")||t.set(e.path,e)}));for(const n of(await this._getServerDirectory(e)).values())t.has(n.path)||t.set(n.path,n);return e&&0===t.size?null:{name:"",path:e,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:s.vJ.JSON,content:Array.from(t.values()),size:0,writable:!0,type:"directory"}}async _getServerContents(e,t){const n=a.PathExt.basename(e);let r=(await this._getServerDirectory(a.URLExt.join(e,".."))).get(n);if(!r)return null;if(r=r||{name:n,path:e,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"text",mimetype:s.vJ.PLAIN_TEXT,type:"file",writable:!0,size:0,content:""},null==t?void 0:t.content)if("directory"===r.type){const t=await this._getServerDirectory(e);r={...r,content:Array.from(t.values())}}else{const t=a.URLExt.join(a.PageConfig.getBaseUrl(),"files",e),i=await fetch(t);if(!i.ok)return null;const o=r.mimetype||i.headers.get("Content-Type"),c=a.PathExt.extname(n);if("notebook"===r.type||s.HB.hasFormat(c,"json")||-1!==(null==o?void 0:o.indexOf("json"))||e.match(/\.(ipynb|[^/]*json[^/]*)$/)){const e=await i.text();r={...r,content:JSON.parse(e),format:"json",mimetype:r.mimetype||s.vJ.JSON,size:e.length}}else if(s.HB.hasFormat(c,"text")||-1!==o.indexOf("text")){const e=await i.text();r={...r,content:e,format:"text",mimetype:o||s.vJ.PLAIN_TEXT,size:e.length}}else{const e=await i.arrayBuffer(),t=new Uint8Array(e);r={...r,content:btoa(t.reduce(this.reduceBytesToString,"")),format:"base64",mimetype:o||s.vJ.OCTET_STREAM,size:t.length}}}return r}async _getServerDirectory(e){const t=this._serverContents.get(e)||new Map;if(!this._serverContents.has(e)){const n=a.URLExt.join(a.PageConfig.getBaseUrl(),"api/contents",e,"all.json");try{const e=await fetch(n),a=JSON.parse(await e.text());for(const e of a.content)t.set(e.name,e)}catch(e){console.warn(`don't worry, about ${e}... nothing's broken. If there had been a\n          file at ${n}, you might see some more files.`)}this._serverContents.set(e,t)}return t}async _incrementCounter(e){var t;const n=await this.counters,a=(null!==(t=await n.getItem(e))&&void 0!==t?t:-1)+1;return await n.setItem(e,a),a}}var c;!function(e){e.EMPTY_NB={metadata:{orig_nbformat:4},nbformat_minor:4,nbformat:4,cells:[]}}(c||(c={}));const l=16895;new TextEncoder,new TextDecoder("utf-8");class u{constructor(e){this.isDisposed=!1,this._onMessage=async e=>{if(!this._channel)return;const{_contents:t}=this,n=e.data,s=null==n?void 0:n.path;if("broadcast.ts"!==(null==n?void 0:n.receiver))return;let r,i=null;switch(null==n?void 0:n.method){case"readdir":r=await t.get(s,{content:!0}),i=[],"directory"===r.type&&r.content&&(i=r.content.map((e=>e.name)));break;case"rmdir":await t.delete(s);break;case"rename":await t.rename(s,n.data.newPath);break;case"getmode":r=await t.get(s),i="directory"===r.type?l:33206;break;case"lookup":try{r=await t.get(s),i={ok:!0,mode:"directory"===r.type?l:33206}}catch(e){i={ok:!1}}break;case"mknod":r=await t.newUntitled({path:a.PathExt.dirname(s),type:Number.parseInt(n.data.mode)===l?"directory":"file",ext:a.PathExt.extname(s)}),await t.rename(r.path,s);break;case"getattr":{r=await t.get(s);const e=new Date(0).toISOString();i={dev:1,nlink:1,uid:0,gid:0,rdev:0,size:r.size||0,blksize:4096,blocks:Math.ceil(r.size||0),atime:r.last_modified||e,mtime:r.last_modified||e,ctime:r.created||e,timestamp:0};break}case"get":if(r=await t.get(s,{content:!0}),"directory"===r.type)break;i={content:"json"===r.format?JSON.stringify(r.content):r.content,format:r.format};break;case"put":await t.save(s,{content:"json"===n.data.format?JSON.parse(n.data.data):n.data.data,type:"file",format:n.data.format});break;default:i=null}this._channel.postMessage(i)},this._channel=null,this._enabled=!1,this._contents=e.contents}get enabled(){return this._enabled}enable(){this._channel?console.warn("BroadcastChannel already created and enabled"):(this._channel=new BroadcastChannel("/api/drive.v1"),this._channel.addEventListener("message",this._onMessage),this._enabled=!0)}disable(){this._channel&&(this._channel.removeEventListener("message",this._onMessage),this._channel=null),this._enabled=!1}dispose(){this.isDisposed||(this.disable(),this.isDisposed=!0)}}var g=n(52416),p=n(73888),d=n(71522);const h="third-party-licenses.json",f=new r.Token("@jupyterlite/licenses:ILicenses"),y=Object.freeze({packages:[]});class w{async get(){return{bundles:{...await this._getFederated(),[this.appName]:await this._getAppLicenses()}}}get appName(){return a.PageConfig.getOption("appName")||"JupyterLite"}get appLicensesUrl(){return a.URLExt.join(a.PageConfig.getBaseUrl(),"build",h)}get labExtensionsUrl(){return a.PageConfig.getOption("fullLabextensionsUrl")}async _getAppLicenses(){let e=y;try{e=(await fetch(this.appLicensesUrl)).json()}catch(e){console.warn("Could not resolve licenses for",this.appName)}return e}async _getFederated(){const e={};let t;try{t=JSON.parse(a.PageConfig.getOption("federated_extensions"))}catch{return e}const n=[];for(const a of t)n.push(this._getOneFederated(a,e));try{await Promise.all(n)}catch(e){console.warn("Error resolving licenses",e)}return e}async _getOneFederated(e,t){try{const n=a.URLExt.join(this.labExtensionsUrl,e.name,"static",h),s=await fetch(n);t[e.name]=await s.json()}catch{console.warn("Could not resolve licenses for",e),t[e.name]=y}}}var m=n(51237),v=n(98209);const S=a.PageConfig.getOption("appVersion");class _{constructor(e){var t;this.unregisterOldServiceWorkers=async e=>{const t=`${e}-version`,n=localStorage.getItem(t);if(n&&n!==S||!n){console.info("New version, unregistering existing service workers.");const e=await navigator.serviceWorker.getRegistrations();await Promise.all(e.map((e=>e.unregister()))),console.info("All existing service workers have been unregistered.")}localStorage.setItem(t,S)},this._pingServiceWorker=async()=>{const e=await fetch("/api/service-worker-heartbeat");"ok"===await e.text()&&setTimeout(this._pingServiceWorker,2e4)},this._registration=null,this._registrationChanged=new v.Signal(this),this._ready=new r.PromiseDelegate;const n=null!==(t=null==e?void 0:e.workerUrl)&&void 0!==t?t:a.URLExt.join(a.PageConfig.getBaseUrl(),m.o),s=new URL(n,window.location.href),i=a.PageConfig.getOption("enableServiceWorkerCache")||"false";s.searchParams.set("enableCache",i),this.initialize(s.href).catch(console.warn)}get registrationChanged(){return this._registrationChanged}get enabled(){return null!==this._registration}get ready(){return this._ready.promise}async initialize(e){const{serviceWorker:t}=navigator;let n=null;if(t){if(t.controller){const e=t.controller.scriptURL;await this.unregisterOldServiceWorkers(e),n=await t.getRegistration(e)||null,console.info("JupyterLite ServiceWorker was already registered")}}else console.warn("ServiceWorkers not supported in this browser");if(!n&&t)try{console.info("Registering new JupyterLite ServiceWorker",e),n=await t.register(e),console.info("JupyterLite ServiceWorker was sucessfully registered")}catch(e){console.warn(e),console.warn(`JupyterLite ServiceWorker registration unexpectedly failed: ${e}`)}this._setRegistration(n),n?(this._ready.resolve(void 0),setTimeout(this._pingServiceWorker,2e4)):this._ready.reject(void 0)}_setRegistration(e){this._registration=e,this._registrationChanged.emit(this._registration)}}var k=n(2357),b=n(36928);const O=new r.Token("@jupyterlite/settings:ISettings");var x=n(42824);const C="JupyterLite Storage";class N{constructor(e){this._storageName=C,this._storageDrivers=null,this._localforage=e.localforage,this._storageName=e.storageName||C,this._storageDrivers=e.storageDrivers||null,this._ready=new r.PromiseDelegate}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.defaultSettingsStorage()}get defaultStorageOptions(){var e;const t=(null===(e=this._storageDrivers)||void 0===e?void 0:e.length)?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}defaultSettingsStorage(){return this._localforage.createInstance({description:"Offline Storage for Settings",storeName:"settings",...this.defaultStorageOptions})}async get(e){return(await this.getAll()).settings.find((t=>t.id===e))}async getAll(){const e=await this._getAll("all.json");let t=[];try{t=await this._getAll("all_federated.json")}catch{}const n=e.concat(t),a=await this.storage;return{settings:await Promise.all(n.map((async e=>{var t;const{id:n}=e,s=null!==(t=await a.getItem(n))&&void 0!==t?t:e.raw;return{...j.override(e),raw:s,settings:x.parse(s)}})))}}async save(e,t){await(await this.storage).setItem(e,t)}async _getAll(e){var t;const n=null!==(t=a.PageConfig.getOption("settingsUrl"))&&void 0!==t?t:"/";return await(await fetch(a.URLExt.join(n,e))).json()}}var j;!function(e){const t=JSON.parse(a.PageConfig.getOption("settingsOverrides")||"{}");e.override=function(e){if(t[e.id]){e.schema.properties||(e.schema.properties={});for(const[n,a]of Object.entries(t[e.id]||{}))e.schema.properties[n].default=a}return e}}(j||(j={}));const R=new r.Token("@jupyterlite/translation:ITranslation");class J{constructor(){this._prevLocale=""}async get(e){const t=a.URLExt.join(a.PageConfig.getBaseUrl(),`api/translations/${e}.json`);try{const n=await fetch(t),a=JSON.parse(await n.text());if("all"!==this._prevLocale&&"all"===e){const e=this._prevLocale;a.data[e].displayName=a.data[e].nativeName,"en"!==e&&(a.data.en.displayName=`${a.data.en.nativeName} (default)`)}return this._prevLocale=e,a}catch(t){return e?{data:{},message:`Language pack '${e}' not installed!`}:{data:{en:{displayName:"English",nativeName:"English"}},message:""}}}}var I=n(80872),P=n(62243),E=n.n(P);const L={id:"@jupyterlite/server-extension:localforage",autoStart:!0,provides:I.A,activate:e=>({localforage:E()})},T={id:"@jupyterlite/server-extension:localforage-memory-storage",autoStart:!0,requires:[I.A],activate:async(e,t)=>{JSON.parse(a.PageConfig.getOption("enableMemoryStorage")||"false")&&(console.warn("Memory storage fallback enabled: contents and settings may not be saved"),await(0,I.$)(t.localforage))}},D={id:"@jupyterlite/server-extension:config-section-routes",autoStart:!0,activate:e=>{const t={};e.router.get("/api/config/(.*)",(async(e,n)=>{var a;const s=null!==(a=t[n])&&void 0!==a?a:JSON.stringify({});return new Response(s)})),e.router.patch("/api/config/(.*)",(async(e,n)=>{const a=e.body;return t[n]=a,new Response(a)}))}},U={id:"@jupyterlite/server-extension:contents",requires:[I.A],autoStart:!0,provides:s.Hv,activate:(e,t)=>{const n=a.PageConfig.getOption("contentsStorageName"),s=JSON.parse(a.PageConfig.getOption("contentsStorageDrivers")||"null"),{localforage:r}=t,i=new o({storageName:n,storageDrivers:s,localforage:r});return e.started.then((()=>i.initialize().catch(console.warn))),i}},$={id:"@jupyterlite/server-extension:contents-routes",autoStart:!0,requires:[s.Hv],activate:(e,t)=>{e.router.get("/api/contents/(.+)/checkpoints",(async(e,n)=>{const a=await t.listCheckpoints(n);return new Response(JSON.stringify(a))})),e.router.post("/api/contents/(.+)/checkpoints/(.*)",(async(e,n,a)=>{const s=await t.restoreCheckpoint(n,a);return new Response(JSON.stringify(s),{status:204})})),e.router.post("/api/contents/(.+)/checkpoints",(async(e,n)=>{const a=await t.createCheckpoint(n);return new Response(JSON.stringify(a),{status:201})})),e.router.delete("/api/contents/(.+)/checkpoints/(.*)",(async(e,n,a)=>{const s=await t.deleteCheckpoint(n,a);return new Response(JSON.stringify(s),{status:204})})),e.router.get("/api/contents(.*)",(async(e,n)=>{var a;const s={content:"1"===(null===(a=e.query)||void 0===a?void 0:a.content)},r=await t.get(n,s);return r?new Response(JSON.stringify(r)):new Response(null,{status:404})})),e.router.post("/api/contents(.*)",(async(e,n)=>{const a=e.body,s=null==a?void 0:a.copy_from;let r;return r=s?await t.copy(s,n):await t.newUntitled(a),r?new Response(JSON.stringify(r),{status:201}):new Response(null,{status:400})})),e.router.patch("/api/contents(.*)",(async(e,n)=>{var a,s;const r=null!==(s=null===(a=e.body)||void 0===a?void 0:a.path)&&void 0!==s?s:"";n="/"===n[0]?n.slice(1):n;const i=await t.rename(n,r);return new Response(JSON.stringify(i))})),e.router.put("/api/contents/(.+)",(async(e,n)=>{const a=e.body,s=await t.save(n,a);return new Response(JSON.stringify(s))})),e.router.delete("/api/contents/(.+)",(async(e,n)=>(await t.delete(n),new Response(null,{status:204}))))}},z={id:"@jupyterlite/server-extension:service-worker",autoStart:!0,provides:m.f,activate:e=>new _},A={id:"@jupyterlite/server-extension:emscripten-filesystem",autoStart:!0,optional:[m.f],provides:s.dC,activate:(e,t)=>{const{contents:n}=e.serviceManager,a=new u({contents:n}),s="Kernel filesystem and JupyterLite contents";function r(e,t){t&&console.warn(t),e&&console.warn(e),t||e?console.warn(`${s} will NOT be synced`):console.info(`${s} will be synced`)}return t?t.ready.then((()=>{a.enable(),r()})).catch((e=>{r("JupyterLite ServiceWorker failed to become available",e)})):r("JupyterLite ServiceWorker not available"),a}},B={id:"@jupyterlite/server-extension:kernels",autoStart:!0,provides:g.Ll,requires:[g.qP],activate:(e,t)=>new p.x({kernelspecs:t})},M={id:"@jupyterlite/server-extension:kernels-routes",autoStart:!0,requires:[g.Ll],activate:(e,t)=>{e.router.get("/api/kernels",(async e=>{const n=await t.list();return new Response(JSON.stringify(n))})),e.router.post("/api/kernels/(.*)/restart",(async(e,n)=>{const a=await t.restart(n);return new Response(JSON.stringify(a))})),e.router.delete("/api/kernels/(.*)",(async(e,n)=>{const a=await t.shutdown(n);return new Response(JSON.stringify(a),{status:204})}))}},W={id:"@jupyterlite/server-extension:kernelspec",autoStart:!0,provides:g.qP,activate:e=>new d.X},q={id:"@jupyterlite/server-extension:kernelspec-routes",autoStart:!0,requires:[g.qP],activate:(e,t)=>{e.router.get("/api/kernelspecs",(async e=>{const{specs:n}=t;if(!n)return new Response(null);const a={},s=n.kernelspecs;Object.keys(s).forEach((e=>{const t=s[e],{resources:n}=null!=t?t:{};a[e]={name:e,spec:t,resources:n}}));const r={default:n.default,kernelspecs:a};return new Response(JSON.stringify(r))}))}},F={id:"@jupyterlite/server-extension:licenses",autoStart:!0,provides:f,activate:e=>new w},H={id:"@jupyterlite/server-extension:licenses-routes",autoStart:!0,requires:[f],activate(e,t){e.router.get("/api/licenses",(async e=>{const n=await t.get();return new Response(JSON.stringify(n))}))}},X={id:"@jupyterlite/server-extension:lsp-routes",autoStart:!0,activate:e=>{e.router.get("/lsp/status",(async e=>new Response(JSON.stringify({version:2,sessions:{},specs:{}}))))}},Y={id:"@jupyterlite/server-extension:nbconvert-routes",autoStart:!0,activate:e=>{e.router.get("/api/nbconvert",(async e=>new Response(JSON.stringify({}))))}},K={id:"@jupyterlite/server-extension:sessions",autoStart:!0,provides:k.R,requires:[g.Ll],activate:(e,t)=>new b.R({kernels:t})},V={id:"@jupyterlite/server-extension:sessions-routes",autoStart:!0,requires:[k.R],activate:(e,t)=>{e.router.get("/api/sessions/(.+)",(async(e,n)=>{const a=await t.get(n);return new Response(JSON.stringify(a),{status:200})})),e.router.get("/api/sessions",(async e=>{const n=await t.list();return new Response(JSON.stringify(n),{status:200})})),e.router.patch("/api/sessions(.*)",(async(e,n)=>{const a=e.body,s=await t.patch(a);return new Response(JSON.stringify(s),{status:200})})),e.router.delete("/api/sessions/(.+)",(async(e,n)=>(await t.shutdown(n),new Response(null,{status:204})))),e.router.post("/api/sessions",(async e=>{const n=e.body,a=await t.startNew(n);return new Response(JSON.stringify(a),{status:201})}))}},G={id:"@jupyterlite/server-extension:settings",autoStart:!0,requires:[I.A],provides:O,activate:(e,t)=>{const n=a.PageConfig.getOption("settingsStorageName"),s=JSON.parse(a.PageConfig.getOption("settingsStorageDrivers")||"null"),{localforage:r}=t,i=new N({storageName:n,storageDrivers:s,localforage:r});return e.started.then((()=>i.initialize().catch(console.warn))),i}},Q=[D,U,$,A,B,M,W,q,F,H,T,L,X,Y,z,K,V,G,{id:"@jupyterlite/server-extension:settings-routes",autoStart:!0,requires:[O],activate:(e,t)=>{const n="/api/settings/((?:@([^/]+?)[/])?([^/]+?):([^:]+))$";e.router.get(n,(async(e,n)=>{const a=await t.get(n);return new Response(JSON.stringify(a))})),e.router.put(n,(async(e,n)=>{const a=e.body,{raw:s}=a;return await t.save(n,s),new Response(null,{status:204})})),e.router.get("/api/settings",(async e=>{const n=await t.getAll();return new Response(JSON.stringify(n))}))}},{id:"@jupyterlite/server-extension:translation",autoStart:!0,provides:R,activate:e=>{const t=new J;return e.router.get("/api/translations/?(.*)",(async(e,n)=>{"default"===n&&(n="en");const a=await t.get(n||"all");return new Response(JSON.stringify(a))})),t}},{id:"@jupyterlite/server-extension:translation-routes",autoStart:!0,requires:[R],activate:(e,t)=>{e.router.get("/api/translations/?(.*)",(async(e,n)=>{const a=await t.get(n||"all");return new Response(JSON.stringify(a))}))}}]}}]);