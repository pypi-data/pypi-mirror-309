# coding: utf-8

"""
    Maneuver Planning API

    Maneuver Planning API

    The version of the OpenAPI document: 1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_maneuver_planning_python_client.models.maneuver_strategy import ManeuverStrategy

class TestManeuverStrategy(unittest.TestCase):
    """ManeuverStrategy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManeuverStrategy:
        """Test ManeuverStrategy
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManeuverStrategy`
        """
        model = ManeuverStrategy()
        if include_optional:
            return ManeuverStrategy(
                thrust_pattern_configuration = spacetower_maneuver_planning_python_client.models.thrust_pattern_configuration.ThrustPatternConfiguration(
                    thrust_arcs_number = 'ONE', 
                    mean_longitude_shift_from_thrust_arc_center = 1.337, 
                    number_of_thrust_orbits = 56, 
                    number_of_rest_orbits = 56, ),
                thrust_arcs_length = spacetower_maneuver_planning_python_client.models.thrust_arcs_length.ThrustArcsLength(
                    thrust_arc_definition = 'THRUST_DURATION', ),
                no_thrust_during_eclipse = True,
                no_thrust_intervals = [
                    spacetower_maneuver_planning_python_client.models.maneuver_strategy_no_thrust_intervals_inner.ManeuverStrategy_noThrustIntervals_inner(
                        start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return ManeuverStrategy(
                thrust_pattern_configuration = spacetower_maneuver_planning_python_client.models.thrust_pattern_configuration.ThrustPatternConfiguration(
                    thrust_arcs_number = 'ONE', 
                    mean_longitude_shift_from_thrust_arc_center = 1.337, 
                    number_of_thrust_orbits = 56, 
                    number_of_rest_orbits = 56, ),
                thrust_arcs_length = spacetower_maneuver_planning_python_client.models.thrust_arcs_length.ThrustArcsLength(
                    thrust_arc_definition = 'THRUST_DURATION', ),
        )
        """

    def testManeuverStrategy(self):
        """Test ManeuverStrategy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
