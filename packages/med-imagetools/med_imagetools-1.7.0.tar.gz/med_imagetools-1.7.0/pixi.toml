[project]
authors = ["Jermiah Joseph <jermiahjoseph98@gmail.com>"]
channels = ["conda-forge"]
description = "Add a short description here"
name = "med-imagetools"
platforms = ["linux-64", "osx-arm64"]

[pypi-dependencies]
med-imagetools = { path = ".", editable = true }

[environments]
default = { features = [
  "test",
  "quality",
  "build",
  "dev",
], solve-group = "default" }
py310 = ["py310", "test"]
py311 = ["py311", "test"]
py312 = ["py312", "test"]

############################################## DEV ###############################################
[feature.dev.dependencies]
python = "3.12.*"
ipython = "*"
ipykernel = "*"
jupyterlab = "*"


############################################## PYTHON ###############################################

[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"

############################################## TEST ################################################

[feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"

[feature.test.tasks.test]
cmd = [
  "pytest",
  # "--numprocesses=auto", 
  # "-s",
  # "--verbose",
  "--cov=imgtools",
  "--cov-report=xml:coverage-report/coverage.xml",
  "--cov-config=config/coverage.toml",
]
inputs = ["src", "tests", "config/coverage.toml"]
outputs = ["coverage-report/coverage.xml"]
description = "Run pytest (Note: run `coverage` task to do both)"

[feature.test.tasks.coverage]
cmd = "coverage report --rcfile=config/coverage.toml"
inputs = ["coverage-report/coverage.xml", "config/coverage.toml"]
depends-on = ["test"]
description = "Run pytest and generate coverage report"

############################################## QUALITY ###############################################
# See config/ruff.toml for the configuration
[feature.quality.dependencies]
ruff = ">=0.4.4"
pre-commit = ">=3.7.1,<3.8"
mypy = ">=1.13.0,<2"
types-pytz = ">=2024.2.0.20241003,<2025"
types-tqdm = ">=4.66.0.20240417,<5"

[feature.quality.tasks]
ruff-check.cmd = ["ruff", "--config", "config/ruff.toml", "check", "src"]
ruff-check.inputs = ["config/ruff.toml", "src"]
ruff-check.description = "Run ruff check"

ruff-format.cmd = ["ruff", "--config", "config/ruff.toml", "format", "src"]
ruff-format.inputs = ["config/ruff.toml", "src"]
ruff-format.depends_on = ["ruff-check"]
ruff-format.description = "Run ruff format, run check first"

lint.depends_on = ["ruff-format", "ruff-check"]
lint.description = "Run ruff check and format"

type-check.cmd = ["mypy", "--config-file", "config/mypy.ini"]
type-check.inputs = ["config/mypy.ini", "src"]
type-check.description = "Run mypy type check."

#################################### RELEASE & BUILD ###############################################


[feature.build.dependencies]
python-semantic-release = ">=9.14"
hatch = ">=1.13"

[feature.build.tasks]
semver = 'echo "Next Version is: $(semantic-release version --print)"'

build = { cmd = [
  "hatch",
  "build",
  "--clean",
], inputs = [
  "src",
  "pyproject.toml",
], outputs = [
  "dist/*",
], description = "Build the package" }
