import{c}from"./index.BSNtggoa.js";const i=async(a="")=>{let n=null;const o=await fetch(`${c}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t,console.log(t),null));if(n)throw n;return o},h=async(a="")=>{let n=null;const o=await fetch(`${c}/models/base`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t,console.log(t),null));if(n)throw n;return o},p=async(a,n)=>{let o=null;const t=await fetch(`${c}/models/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify(n)}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(o=r.detail,console.log(r),null));if(o)throw o;return t},u=async(a,n)=>{let o=null;new URLSearchParams().append("id",n);const r=await fetch(`${c}/models/id/${n}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(o=e,console.log(e),null));if(o)throw o;return r},d=async(a,n)=>{let o=null;new URLSearchParams().append("id",n);const r=await fetch(`${c}/models/id/${n}/toggle`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(o=e,console.log(e),null));if(o)throw o;return r},w=async(a,n,o)=>{let t=null;new URLSearchParams().append("id",n);const e=await fetch(`${c}/models/id/${n}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify(o)}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).then(s=>s).catch(s=>(t=s,console.log(s),null));if(t)throw t;return e},j=async(a,n)=>{let o=null;new URLSearchParams().append("id",n);const r=await fetch(`${c}/models/id/${n}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(o=e,console.log(e),null));if(o)throw o;return r},y=async a=>{let n=null;const o=await fetch(`${c}/models/delete/all`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t,console.log(t),null));if(n)throw n;return o};export{i as a,h as b,p as c,j as d,y as e,u as g,d as t,w as u};
//# sourceMappingURL=index.DIM0Omii.js.map
