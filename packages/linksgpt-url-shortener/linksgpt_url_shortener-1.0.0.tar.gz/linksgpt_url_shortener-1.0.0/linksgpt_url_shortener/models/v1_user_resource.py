# coding: utf-8

"""
    LinksGPT URL Shortener SDK

    LinksGPT URL Shortener SDK  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: service@linksgpt.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1UserResource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'name': 'str',
        'email': 'str',
        'default_workspace_id': 'str',
        'timezone': 'str',
        'language': 'str',
        'email_verified': 'bool',
        'email_verified_at': 'str',
        'created_at': 'str',
        'updated_at': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'email': 'email',
        'default_workspace_id': 'defaultWorkspaceId',
        'timezone': 'timezone',
        'language': 'language',
        'email_verified': 'emailVerified',
        'email_verified_at': 'emailVerifiedAt',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }

    def __init__(self, id=None, name=None, email=None, default_workspace_id=None, timezone=None, language=None, email_verified=None, email_verified_at=None, created_at=None, updated_at=None):  # noqa: E501
        """V1UserResource - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._email = None
        self._default_workspace_id = None
        self._timezone = None
        self._language = None
        self._email_verified = None
        self._email_verified_at = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if email is not None:
            self.email = email
        if default_workspace_id is not None:
            self.default_workspace_id = default_workspace_id
        if timezone is not None:
            self.timezone = timezone
        if language is not None:
            self.language = language
        if email_verified is not None:
            self.email_verified = email_verified
        if email_verified_at is not None:
            self.email_verified_at = email_verified_at
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def id(self):
        """Gets the id of this V1UserResource.  # noqa: E501

        user id  # noqa: E501

        :return: The id of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1UserResource.

        user id  # noqa: E501

        :param id: The id of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this V1UserResource.  # noqa: E501

        user name  # noqa: E501

        :return: The name of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1UserResource.

        user name  # noqa: E501

        :param name: The name of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def email(self):
        """Gets the email of this V1UserResource.  # noqa: E501

        email  # noqa: E501

        :return: The email of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this V1UserResource.

        email  # noqa: E501

        :param email: The email of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def default_workspace_id(self):
        """Gets the default_workspace_id of this V1UserResource.  # noqa: E501

        default workspace id  # noqa: E501

        :return: The default_workspace_id of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._default_workspace_id

    @default_workspace_id.setter
    def default_workspace_id(self, default_workspace_id):
        """Sets the default_workspace_id of this V1UserResource.

        default workspace id  # noqa: E501

        :param default_workspace_id: The default_workspace_id of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._default_workspace_id = default_workspace_id

    @property
    def timezone(self):
        """Gets the timezone of this V1UserResource.  # noqa: E501

        timezone id  # noqa: E501

        :return: The timezone of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this V1UserResource.

        timezone id  # noqa: E501

        :param timezone: The timezone of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._timezone = timezone

    @property
    def language(self):
        """Gets the language of this V1UserResource.  # noqa: E501

        language code  # noqa: E501

        :return: The language of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this V1UserResource.

        language code  # noqa: E501

        :param language: The language of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._language = language

    @property
    def email_verified(self):
        """Gets the email_verified of this V1UserResource.  # noqa: E501

        whether the mailbox has been verified  # noqa: E501

        :return: The email_verified of this V1UserResource.  # noqa: E501
        :rtype: bool
        """
        return self._email_verified

    @email_verified.setter
    def email_verified(self, email_verified):
        """Sets the email_verified of this V1UserResource.

        whether the mailbox has been verified  # noqa: E501

        :param email_verified: The email_verified of this V1UserResource.  # noqa: E501
        :type: bool
        """

        self._email_verified = email_verified

    @property
    def email_verified_at(self):
        """Gets the email_verified_at of this V1UserResource.  # noqa: E501

        email verified at  # noqa: E501

        :return: The email_verified_at of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._email_verified_at

    @email_verified_at.setter
    def email_verified_at(self, email_verified_at):
        """Sets the email_verified_at of this V1UserResource.

        email verified at  # noqa: E501

        :param email_verified_at: The email_verified_at of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._email_verified_at = email_verified_at

    @property
    def created_at(self):
        """Gets the created_at of this V1UserResource.  # noqa: E501

        created at  # noqa: E501

        :return: The created_at of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this V1UserResource.

        created at  # noqa: E501

        :param created_at: The created_at of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this V1UserResource.  # noqa: E501

        updated at  # noqa: E501

        :return: The updated_at of this V1UserResource.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this V1UserResource.

        updated at  # noqa: E501

        :param updated_at: The updated_at of this V1UserResource.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1UserResource, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1UserResource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
