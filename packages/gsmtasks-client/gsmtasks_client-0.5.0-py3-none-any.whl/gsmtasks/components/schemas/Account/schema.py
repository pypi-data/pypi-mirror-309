# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import lapidary.runtime
import pydantic
import typing_extensions as typing
import gsmtasks.components.schemas.Account.properties.auto_assign_rotate.schema
import gsmtasks.components.schemas.Account.properties.task_expiry_duration_from_complete_after.schema
import gsmtasks.components.schemas.Account.properties.task_expiry_duration_from_complete_before.schema
import gsmtasks.components.schemas.NestedAddress.schema
import uuid


class Account(lapidary.runtime.ModelBase):
    name: typing.Annotated[
        str,
        pydantic.Field(
            max_length=100,
        )
    ]

    id: typing.Union[None, uuid.UUID] = None

    url: typing.Union[None, str] = None

    state: typing.Union[None, str] = None

    type: typing.Union[None, str, typing.Any] = None

    slug: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            pattern=r'^[-a-zA-Z0-9_]+$',
        )
    ] = None

    owner: typing.Union[None, str] = None

    email: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=254,
        )
    ] = None

    notification_emails: typing.Union[None, list[str]] = None

    review_emails: typing.Union[None, list[str]] = None

    review_emails_to_assignee: typing.Union[None, bool] = None

    website: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=200,
        )
    ] = None

    registry_code: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=20,
        )
    ] = None

    vatin: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=20,
        )
    ] = None

    language: typing.Union[None, str] = None

    timezone: typing.Union[None, str] = None

    country_code: typing.Union[None, str, typing.Any] = None

    address: typing.Union[None, gsmtasks.components.schemas.NestedAddress.schema.NestedAddress] = None

    custom_integration_url: typing.Union[None, str] = None

    route_default_state: typing.Union[None, str] = None

    distance_units: typing.Union[None, str] = None

    task_duration: typing.Union[None, int, str] = None

    task_expiry_duration_from_complete_after: typing.Union[None, gsmtasks.components.schemas.Account.properties.task_expiry_duration_from_complete_after.schema.task_expiry_duration_from_complete_after] = None

    task_expiry_duration_from_complete_before: typing.Union[None, gsmtasks.components.schemas.Account.properties.task_expiry_duration_from_complete_before.schema.task_expiry_duration_from_complete_before] = None

    task_expiry_state: typing.Union[None, str] = None

    assignee_proximity_radius: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=0,
            le=2147483647,
        )
    ] = None

    date_format: typing.Union[None, str] = None

    time_format: typing.Union[None, str] = None

    route_start_address: typing.Union[None, gsmtasks.components.schemas.NestedAddress.schema.NestedAddress] = None

    route_end_address: typing.Union[None, gsmtasks.components.schemas.NestedAddress.schema.NestedAddress] = None

    optimize_after_create: typing.Union[None, bool] = None

    optimization_objective: typing.Union[None, str] = None

    reference_autogenerate: typing.Union[None, bool] = None

    reference_offset: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=-2147483648,
            le=2147483647,
        )
    ] = None

    reference_prefix: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=50,
        )
    ] = None

    reference_length: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=-2147483648,
            le=2147483647,
        )
    ] = None

    feature_show_unassigned_to_workers: typing.Union[None, bool] = None

    feature_task_created_sound: typing.Union[None, bool] = None

    feature_change_task_account: typing.Union[None, bool] = None

    feature_show_tutorial: typing.Union[None, bool] = None

    feature_navigation_app_selection: typing.Union[None, bool] = None

    feature_navigation_use_address: typing.Union[None, bool] = None

    feature_task_accept: typing.Union[None, bool] = None

    feature_task_reject: typing.Union[None, bool] = None

    feature_app_task_search: typing.Union[None, bool] = None

    feature_address_autosuggest_provider: typing.Union[None, str] = None

    feature_geocoding_country_code: typing.Union[None, str, typing.Any] = None

    feature_document_signing: typing.Union[None, bool] = None

    feature_tracker_reviews_allowed: typing.Union[None, bool] = None

    feature_tracker_url: typing.Union[None, str] = None

    feature_route_folders: typing.Union[None, bool] = None

    feature_route_auto_archive: typing.Union[None, bool] = None

    feature_signature_required: typing.Union[None, bool] = None

    feature_signature_required_task_category: typing.Union[None, list[str]] = None

    feature_picture_required: typing.Union[None, bool] = None

    feature_picture_required_task_category: typing.Union[None, list[str]] = None

    auto_assign_orders: typing.Union[None, bool] = None

    auto_assign_max_tasks: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=-2147483648,
            le=2147483647,
        )
    ] = None

    auto_assign_max_distance: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            ge=-2147483648,
            le=2147483647,
        )
    ] = None

    auto_assign_time_before: typing.Union[None, str] = None

    auto_assign_rotate: typing.Union[None, gsmtasks.components.schemas.Account.properties.auto_assign_rotate.schema.auto_assign_rotate] = None

    auto_assign_optimize: typing.Union[None, bool] = None

    dashboard_task_template: typing.Union[None, str] = None

    calendar_task_template: typing.Union[None, str] = None

    dashboard_worker_limit: typing.Union[None, int] = None

    stripe_customer_id: typing.Union[None, str] = None

    stripe_payment_method_id: typing.Union[None, str] = None

    billing_method: typing.Union[None, str] = None

    billing_name: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    billing_company: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    billing_address: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=200,
        )
    ] = None

    billing_country: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    billing_email: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=254,
        )
    ] = None

    billing_phone: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=20,
        )
    ] = None

    billing_vatin: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=20,
        )
    ] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
