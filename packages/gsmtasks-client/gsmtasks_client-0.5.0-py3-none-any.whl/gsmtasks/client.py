# This file is automatically @generated by Lapidary and should not be changed by hand.


__all__ = [
    'ApiClient',
]

import typing_extensions as typing
from lapidary.runtime import *

import datetime
import gsmtasks.components.schemas.Account.schema
import gsmtasks.components.schemas.AccountOwnerChange.schema
import gsmtasks.components.schemas.AccountRole.schema
import gsmtasks.components.schemas.AccountRoleActivation.schema
import gsmtasks.components.schemas.AccountRoleToken.schema
import gsmtasks.components.schemas.AccountStripePaymentMethodAttach.schema
import gsmtasks.components.schemas.AccountStripePaymentMethodDetach.schema
import gsmtasks.components.schemas.AccountStripePaymentMethodSetDefault.schema
import gsmtasks.components.schemas.AccountStripeSetupAttemptGet.schema
import gsmtasks.components.schemas.AccountStripeSetupIntentCreate.schema
import gsmtasks.components.schemas.AccountStripeSetupIntentsGet.schema
import gsmtasks.components.schemas.Addon.schema
import gsmtasks.components.schemas.AuthToken.schema
import gsmtasks.components.schemas.AuthenticatedUserCreate.schema
import gsmtasks.components.schemas.AuthenticatedUserUpdate.schema
import gsmtasks.components.schemas.BraintreeCustomer.schema
import gsmtasks.components.schemas.BraintreeTransaction.schema
import gsmtasks.components.schemas.Client.schema
import gsmtasks.components.schemas.ClientRole.schema
import gsmtasks.components.schemas.ConfigurationSerializerV2.schema
import gsmtasks.components.schemas.ContactAddress.schema
import gsmtasks.components.schemas.ContactAddressBackgroundImport.schema
import gsmtasks.components.schemas.ContactAddressExport.schema
import gsmtasks.components.schemas.Device.schema
import gsmtasks.components.schemas.Document.schema
import gsmtasks.components.schemas.DocumentDeleteAction.schema
import gsmtasks.components.schemas.Email.schema
import gsmtasks.components.schemas.Export.schema
import gsmtasks.components.schemas.FormRule.schema
import gsmtasks.components.schemas.GSMTasksError.schema
import gsmtasks.components.schemas.ImportMapping.schema
import gsmtasks.components.schemas.IntegrationRequest.schema
import gsmtasks.components.schemas.Invoice.schema
import gsmtasks.components.schemas.InvoicePayment.schema
import gsmtasks.components.schemas.Metafield.schema
import gsmtasks.components.schemas.Notification.schema
import gsmtasks.components.schemas.NotificationTemplate.schema
import gsmtasks.components.schemas.OnDuty.schema
import gsmtasks.components.schemas.OrderSerializerV2.schema
import gsmtasks.components.schemas.PasswordChange.schema
import gsmtasks.components.schemas.PasswordReset.schema
import gsmtasks.components.schemas.PasswordResetConfirm.schema
import gsmtasks.components.schemas.PatchedAccount.schema
import gsmtasks.components.schemas.PatchedAccountRole.schema
import gsmtasks.components.schemas.PatchedAuthenticatedUserUpdate.schema
import gsmtasks.components.schemas.PatchedBraintreeCustomer.schema
import gsmtasks.components.schemas.PatchedClient.schema
import gsmtasks.components.schemas.PatchedClientRole.schema
import gsmtasks.components.schemas.PatchedContactAddress.schema
import gsmtasks.components.schemas.PatchedEmail.schema
import gsmtasks.components.schemas.PatchedExport.schema
import gsmtasks.components.schemas.PatchedFormRule.schema
import gsmtasks.components.schemas.PatchedInvoice.schema
import gsmtasks.components.schemas.PatchedMetafield.schema
import gsmtasks.components.schemas.PatchedNotificationTemplate.schema
import gsmtasks.components.schemas.PatchedOrderSerializerV2.schema
import gsmtasks.components.schemas.PatchedPushNotification.schema
import gsmtasks.components.schemas.PatchedRecurrence.schema
import gsmtasks.components.schemas.PatchedRoute.schema
import gsmtasks.components.schemas.PatchedSMS.schema
import gsmtasks.components.schemas.PatchedTaskForm.schema
import gsmtasks.components.schemas.PatchedTaskSerializerV2.schema
import gsmtasks.components.schemas.PatchedTimeLocationFeature.schema
import gsmtasks.components.schemas.PatchedTracker.schema
import gsmtasks.components.schemas.PatchedWebhook.schema
import gsmtasks.components.schemas.PushNotification.schema
import gsmtasks.components.schemas.ReadableUser.schema
import gsmtasks.components.schemas.Recurrence.schema
import gsmtasks.components.schemas.Registration.schema
import gsmtasks.components.schemas.RenderRequest.schema
import gsmtasks.components.schemas.RenderResponse.schema
import gsmtasks.components.schemas.Review.schema
import gsmtasks.components.schemas.Route.schema
import gsmtasks.components.schemas.RouteArchive.schema
import gsmtasks.components.schemas.RouteOptimizationResultSerializerV2.schema
import gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema
import gsmtasks.components.schemas.S3FileUpload.schema
import gsmtasks.components.schemas.SMS.schema
import gsmtasks.components.schemas.Signature.schema
import gsmtasks.components.schemas.SignatureDeleteAction.schema
import gsmtasks.components.schemas.StripePayment.schema
import gsmtasks.components.schemas.Task.schema
import gsmtasks.components.schemas.TaskAccountChange.schema
import gsmtasks.components.schemas.TaskAction.schema
import gsmtasks.components.schemas.TaskAddressFeature.schema
import gsmtasks.components.schemas.TaskAddressFeatureList.schema
import gsmtasks.components.schemas.TaskAssign.schema
import gsmtasks.components.schemas.TaskCommand.schema
import gsmtasks.components.schemas.TaskEvent.schema
import gsmtasks.components.schemas.TaskEventSerializerV2.schema
import gsmtasks.components.schemas.TaskEventTrack.schema
import gsmtasks.components.schemas.TaskEventTrackList.schema
import gsmtasks.components.schemas.TaskExport.schema
import gsmtasks.components.schemas.TaskForm.schema
import gsmtasks.components.schemas.TaskListExt.schema
import gsmtasks.components.schemas.TaskListReorderRequest.schema
import gsmtasks.components.schemas.TaskListReorderResponseTask.schema
import gsmtasks.components.schemas.TaskMetadata.schema
import gsmtasks.components.schemas.TaskSerializerV2.schema
import gsmtasks.components.schemas.TasksBackgroundImport.schema
import gsmtasks.components.schemas.TasksStatesCountResponse.schema
import gsmtasks.components.schemas.TimeLocation.schema
import gsmtasks.components.schemas.TimeLocationFeature.schema
import gsmtasks.components.schemas.TimeLocationFeatureList.schema
import gsmtasks.components.schemas.Tracker.schema
import gsmtasks.components.schemas.TrackerPublic.schema
import gsmtasks.components.schemas.UserActivation.schema
import gsmtasks.components.schemas.ValidationError.schema
import gsmtasks.components.schemas.Webhook.schema
import gsmtasks.components.schemas.WorkerFeature.schema
import gsmtasks.components.schemas.WorkerFeatureList.schema
import gsmtasks.components.schemas.WorkerTrackList.schema
import gsmtasks.components.schemas.WorkingState.schema
import gsmtasks.paths.u_laccount_rolesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_laccountsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_laddonsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lbillingu_lcustomersu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lbillingu_linvoicesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lbillingu_lstripe_paymentsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lbillingu_ltransactionsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lclient_rolesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lclientsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lconfigurationsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lcontact_address_exportsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lcontact_address_importu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lcontact_addressesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ldevicesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ldocsu_lschemau_l.get.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema
import gsmtasks.paths.u_ldocumentsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lemailsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lexportsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lfile_uploadsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lform_rulesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lmetafieldsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lnotification_templatesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lnotificationsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lordersu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lpush_notificationsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lrecurrencesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lreviewsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lroute_optimizationsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lroute_optimizationsu_lu_1zidu_21u_lroutesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lroutesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lsignaturesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lsmsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_address_featuresu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_commandsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_event_tracksu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_eventsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_exportsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_formsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_import_mappingu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_importu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltask_metadatasu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltasksu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltasksu_lu_1zidu_21u_ldocumentsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltasksu_lu_1zidu_21u_leventsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltasksu_lu_1zidu_21u_lsignaturesu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltime_location_featuresu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltime_locationsu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_ltrackersu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lusers_on_duty_logu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lusersu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lusersu_lu_1zidu_21u_lactivateu_l.post.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema
import gsmtasks.paths.u_lwebhooksu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lworker_featuresu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lworker_tracksu_l.get.responses.u_o00.headers
import gsmtasks.paths.u_lworking_stateu_l.get.responses.u_o00.headers
import uuid


class ApiClient(ClientBase):
    def __init__(
        self,
        *,
        base_url: str = 'https://api.gsmtasks.com/',
        **kwargs,
    ) -> None:
        super().__init__(
            base_url=base_url,
            **kwargs,
        )

    @get('/account_roles/', security=[{'tokenAuth': []}])
    async def account_roles_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        activated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at', )] = None,
        activated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('activated_at__date', )] = None,
        activated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('activated_at__date_or_isnull', )] = None,
        activated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__gt', )] = None,
        activated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__gt_or_isnull', )] = None,
        activated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__gte', )] = None,
        activated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__gte_or_isnull', )] = None,
        activated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__lt', )] = None,
        activated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__lt_or_isnull', )] = None,
        activated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__lte', )] = None,
        activated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('activated_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        deleted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at', )] = None,
        deleted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('deleted_at__date', )] = None,
        deleted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('deleted_at__date_or_isnull', )] = None,
        deleted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__gt', )] = None,
        deleted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__gt_or_isnull', )] = None,
        deleted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__gte', )] = None,
        deleted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__gte_or_isnull', )] = None,
        deleted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__lt', )] = None,
        deleted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__lt_or_isnull', )] = None,
        deleted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__lte', )] = None,
        deleted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('deleted_at__lte_or_isnull', )] = None,
        display_name_q: typing.Annotated[typing.Union[None, str], Query('display_name', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_active_q: typing.Annotated[typing.Union[None, bool], Query('is_active', )] = None,
        is_admin_q: typing.Annotated[typing.Union[None, str], Query('is_admin', )] = None,
        is_integration_q: typing.Annotated[typing.Union[None, str], Query('is_integration', )] = None,
        is_manager_q: typing.Annotated[typing.Union[None, str], Query('is_manager', )] = None,
        is_worker_q: typing.Annotated[typing.Union[None, str], Query('is_worker', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.AccountRole.schema.AccountRole], gsmtasks.paths.u_laccount_rolesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.AccountRole.schema.AccountRole],
                }),
                gsmtasks.paths.u_laccount_rolesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/account_roles/', security=[{'tokenAuth': []}])
    async def account_roles_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountRole.schema.AccountRole,
            Body({
                'application/json': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRole.schema.AccountRole, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/account_roles/{id}/', security=[{'tokenAuth': []}])
    async def account_roles_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRole.schema.AccountRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/account_roles/{id}/', security=[{'tokenAuth': []}])
    async def account_roles_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountRole.schema.AccountRole,
            Body({
                'application/json': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRole.schema.AccountRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/account_roles/{id}/', security=[{'tokenAuth': []}])
    async def account_roles_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/account_roles/{id}/', security=[{'tokenAuth': []}])
    async def account_roles_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedAccountRole.schema.PatchedAccountRole,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedAccountRole.schema.PatchedAccountRole,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRole.schema.AccountRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/account_roles/{id}/activate/', security=[{'tokenAuth': []}])
    async def account_roles_activate_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountRoleActivation.schema.AccountRoleActivation,
            Body({
                'application/json': gsmtasks.components.schemas.AccountRoleActivation.schema.AccountRoleActivation,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[str, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': str,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/account_roles/{id}/notify/', security=[{'tokenAuth': []}])
    async def account_roles_notify_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRole.schema.AccountRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRole.schema.AccountRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/account_roles/{id}/resend_token/', security=[{'tokenAuth': []}])
    async def account_roles_resend_token_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[str, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': str,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/account_roles/{id}/token/', security=[{'tokenAuth': []}])
    async def account_roles_token_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountRoleToken.schema.AccountRoleToken, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountRoleToken.schema.AccountRoleToken,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/', security=[{'tokenAuth': []}])
    async def accounts_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Account.schema.Account], gsmtasks.paths.u_laccountsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Account.schema.Account],
                }),
                gsmtasks.paths.u_laccountsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/', security=[{'tokenAuth': []}])
    async def accounts_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Account.schema.Account, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Account.schema.Account,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/accounts/{id}/', security=[{'tokenAuth': []}])
    async def accounts_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Account.schema.Account,
            Body({
                'application/json': gsmtasks.components.schemas.Account.schema.Account,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Account.schema.Account, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Account.schema.Account,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/accounts/{id}/', security=[{'tokenAuth': []}])
    async def accounts_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedAccount.schema.PatchedAccount,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedAccount.schema.PatchedAccount,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Account.schema.Account, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Account.schema.Account,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/braintree_customer/', security=[{'tokenAuth': []}])
    async def accounts_braintree_customer_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/accounts/{id}/change_owner/', security=[{'tokenAuth': []}])
    async def accounts_change_owner_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountOwnerChange.schema.AccountOwnerChange,
            Body({
                'application/json': gsmtasks.components.schemas.AccountOwnerChange.schema.AccountOwnerChange,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountOwnerChange.schema.AccountOwnerChange, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountOwnerChange.schema.AccountOwnerChange,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/accounts/{id}/stripe_attach_payment_method/', security=[{'tokenAuth': []}])
    async def accounts_stripe_attach_payment_method_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountStripePaymentMethodAttach.schema.AccountStripePaymentMethodAttach,
            Body({
                'application/json': gsmtasks.components.schemas.AccountStripePaymentMethodAttach.schema.AccountStripePaymentMethodAttach,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountStripePaymentMethodAttach.schema.AccountStripePaymentMethodAttach, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountStripePaymentMethodAttach.schema.AccountStripePaymentMethodAttach,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/accounts/{id}/stripe_create_setup_intent/', security=[{'tokenAuth': []}])
    async def accounts_stripe_create_setup_intent_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountStripeSetupIntentCreate.schema.AccountStripeSetupIntentCreate,
            Body({
                'application/json': gsmtasks.components.schemas.AccountStripeSetupIntentCreate.schema.AccountStripeSetupIntentCreate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Any, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Any,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/accounts/{id}/stripe_create_setup_intent/', security=[{'tokenAuth': []}])
    async def accounts_stripe_create_setup_intent_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountStripeSetupIntentCreate.schema.AccountStripeSetupIntentCreate,
            Body({
                'application/json': gsmtasks.components.schemas.AccountStripeSetupIntentCreate.schema.AccountStripeSetupIntentCreate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Any, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Any,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/accounts/{id}/stripe_detach_payment_method/', security=[{'tokenAuth': []}])
    async def accounts_stripe_detach_payment_method_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountStripePaymentMethodDetach.schema.AccountStripePaymentMethodDetach,
            Body({
                'application/json': gsmtasks.components.schemas.AccountStripePaymentMethodDetach.schema.AccountStripePaymentMethodDetach,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountStripePaymentMethodDetach.schema.AccountStripePaymentMethodDetach, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountStripePaymentMethodDetach.schema.AccountStripePaymentMethodDetach,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/stripe_get_payment_method/', security=[{'tokenAuth': []}])
    async def accounts_stripe_get_payment_method_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/stripe_get_setup_attempt/', security=[{'tokenAuth': []}])
    async def accounts_stripe_get_setup_attempt_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountStripeSetupAttemptGet.schema.AccountStripeSetupAttemptGet, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountStripeSetupAttemptGet.schema.AccountStripeSetupAttemptGet,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/stripe_get_setup_intent/', security=[{'tokenAuth': []}])
    async def accounts_stripe_get_setup_intent_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Any, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': typing.Any,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/stripe_payment_methods/', security=[{'tokenAuth': []}])
    async def accounts_stripe_payment_methods_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Any, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': typing.Any,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/accounts/{id}/stripe_set_default_payment_method/', security=[{'tokenAuth': []}])
    async def accounts_stripe_set_default_payment_method_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AccountStripePaymentMethodSetDefault.schema.AccountStripePaymentMethodSetDefault,
            Body({
                'application/json': gsmtasks.components.schemas.AccountStripePaymentMethodSetDefault.schema.AccountStripePaymentMethodSetDefault,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountStripePaymentMethodSetDefault.schema.AccountStripePaymentMethodSetDefault, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountStripePaymentMethodSetDefault.schema.AccountStripePaymentMethodSetDefault,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/accounts/{id}/stripe_setup_intents/', security=[{'tokenAuth': []}])
    async def accounts_stripe_setup_intents_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AccountStripeSetupIntentsGet.schema.AccountStripeSetupIntentsGet, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AccountStripeSetupIntentsGet.schema.AccountStripeSetupIntentsGet,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/addons/', security=[{'tokenAuth': []}])
    async def addons_list(
        self: typing.Self,
        *,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Addon.schema.Addon], gsmtasks.paths.u_laddonsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Addon.schema.Addon],
                }),
                gsmtasks.paths.u_laddonsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/addons/{id}/', security=[{'tokenAuth': []}])
    async def addons_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Addon.schema.Addon, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Addon.schema.Addon,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/authenticate/')
    async def authenticate_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AuthToken.schema.AuthToken,
            Body({
                'application/json': gsmtasks.components.schemas.AuthToken.schema.AuthToken,
            }),
        ],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AuthToken.schema.AuthToken, None],
        Responses({
            '200': Response(
                Body({
                    'application/json': gsmtasks.components.schemas.AuthToken.schema.AuthToken,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/customers/', security=[{'tokenAuth': []}])
    async def billing_customers_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer], gsmtasks.paths.u_lbillingu_lcustomersu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer],
                }),
                gsmtasks.paths.u_lbillingu_lcustomersu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/billing/customers/', security=[{'tokenAuth': []}])
    async def billing_customers_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
            Body({
                'application/json': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/customers/{id}/', security=[{'tokenAuth': []}])
    async def billing_customers_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/billing/customers/{id}/', security=[{'tokenAuth': []}])
    async def billing_customers_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
            Body({
                'application/json': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/billing/customers/{id}/', security=[{'tokenAuth': []}])
    async def billing_customers_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedBraintreeCustomer.schema.PatchedBraintreeCustomer,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedBraintreeCustomer.schema.PatchedBraintreeCustomer,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeCustomer.schema.BraintreeCustomer,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/customers/{id}/client_token/', security=[{'tokenAuth': []}])
    async def billing_customers_client_token_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Any, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': typing.Any,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/invoices/', security=[{'tokenAuth': []}])
    async def billing_invoices_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        billing_method_q: typing.Annotated[typing.Union[None, str], Query('billing_method', )] = None,
        confirmed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at', )] = None,
        confirmed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('confirmed_at__date', )] = None,
        confirmed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('confirmed_at__date_or_isnull', )] = None,
        confirmed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__gt', )] = None,
        confirmed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__gt_or_isnull', )] = None,
        confirmed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__gte', )] = None,
        confirmed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__gte_or_isnull', )] = None,
        confirmed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__lt', )] = None,
        confirmed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__lt_or_isnull', )] = None,
        confirmed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__lte', )] = None,
        confirmed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('confirmed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Invoice.schema.Invoice], gsmtasks.paths.u_lbillingu_linvoicesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Invoice.schema.Invoice],
                }),
                gsmtasks.paths.u_lbillingu_linvoicesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/invoices/{id}/', security=[{'tokenAuth': []}])
    async def billing_invoices_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Invoice.schema.Invoice, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Invoice.schema.Invoice,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/billing/invoices/{id}/', security=[{'tokenAuth': []}])
    async def billing_invoices_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Invoice.schema.Invoice,
            Body({
                'application/json': gsmtasks.components.schemas.Invoice.schema.Invoice,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Invoice.schema.Invoice, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Invoice.schema.Invoice,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/billing/invoices/{id}/', security=[{'tokenAuth': []}])
    async def billing_invoices_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedInvoice.schema.PatchedInvoice,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedInvoice.schema.PatchedInvoice,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Invoice.schema.Invoice, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Invoice.schema.Invoice,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/billing/invoices/{id}/mark_as_paid/', security=[{'tokenAuth': []}])
    async def billing_invoices_mark_as_paid_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.InvoicePayment.schema.InvoicePayment,
            Body({
                'application/json': gsmtasks.components.schemas.InvoicePayment.schema.InvoicePayment,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Invoice.schema.Invoice, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Invoice.schema.Invoice,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/stripe_payments/', security=[{'tokenAuth': []}])
    async def billing_stripe_payments_list(
        self: typing.Self,
        *,
        billable_account_q: typing.Annotated[typing.Union[None, str], Query('billable_account', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        invoice_q: typing.Annotated[typing.Union[None, str], Query('invoice', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        stripe_state_q: typing.Annotated[typing.Union[None, str], Query('stripe_state', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.StripePayment.schema.StripePayment], gsmtasks.paths.u_lbillingu_lstripe_paymentsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.StripePayment.schema.StripePayment],
                }),
                gsmtasks.paths.u_lbillingu_lstripe_paymentsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/stripe_payments/{id}/', security=[{'tokenAuth': []}])
    async def billing_stripe_payments_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.StripePayment.schema.StripePayment, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.StripePayment.schema.StripePayment,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/transactions/', security=[{'tokenAuth': []}])
    async def billing_transactions_list(
        self: typing.Self,
        *,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        customer_q: typing.Annotated[typing.Union[None, str], Query('customer', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        invoice__account_q: typing.Annotated[typing.Union[None, str], Query('invoice__account', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.BraintreeTransaction.schema.BraintreeTransaction], gsmtasks.paths.u_lbillingu_ltransactionsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.BraintreeTransaction.schema.BraintreeTransaction],
                }),
                gsmtasks.paths.u_lbillingu_ltransactionsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/billing/transactions/{id}/', security=[{'tokenAuth': []}])
    async def billing_transactions_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.BraintreeTransaction.schema.BraintreeTransaction, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.BraintreeTransaction.schema.BraintreeTransaction,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/client_roles/', security=[{'tokenAuth': []}])
    async def client_roles_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        client_q: typing.Annotated[typing.Union[None, str], Query('client', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_active_q: typing.Annotated[typing.Union[None, str], Query('is_active', )] = None,
        is_manager_q: typing.Annotated[typing.Union[None, str], Query('is_manager', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
        user__email_q: typing.Annotated[typing.Union[None, str], Query('user__email', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ClientRole.schema.ClientRole], gsmtasks.paths.u_lclient_rolesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ClientRole.schema.ClientRole],
                }),
                gsmtasks.paths.u_lclient_rolesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/client_roles/', security=[{'tokenAuth': []}])
    async def client_roles_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ClientRole.schema.ClientRole,
            Body({
                'application/json': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ClientRole.schema.ClientRole, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/client_roles/{id}/', security=[{'tokenAuth': []}])
    async def client_roles_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ClientRole.schema.ClientRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/client_roles/{id}/', security=[{'tokenAuth': []}])
    async def client_roles_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ClientRole.schema.ClientRole,
            Body({
                'application/json': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ClientRole.schema.ClientRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/client_roles/{id}/', security=[{'tokenAuth': []}])
    async def client_roles_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedClientRole.schema.PatchedClientRole,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedClientRole.schema.PatchedClientRole,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ClientRole.schema.ClientRole, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ClientRole.schema.ClientRole,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/clients/', security=[{'tokenAuth': []}])
    async def clients_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        slug_q: typing.Annotated[typing.Union[None, str], Query('slug', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Client.schema.Client], gsmtasks.paths.u_lclientsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Client.schema.Client],
                }),
                gsmtasks.paths.u_lclientsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/clients/', security=[{'tokenAuth': []}])
    async def clients_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Client.schema.Client,
            Body({
                'application/json': gsmtasks.components.schemas.Client.schema.Client,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Client.schema.Client, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Client.schema.Client,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/clients/{id}/', security=[{'tokenAuth': []}])
    async def clients_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Client.schema.Client, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Client.schema.Client,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/clients/{id}/', security=[{'tokenAuth': []}])
    async def clients_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Client.schema.Client,
            Body({
                'application/json': gsmtasks.components.schemas.Client.schema.Client,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Client.schema.Client, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Client.schema.Client,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/clients/{id}/', security=[{'tokenAuth': []}])
    async def clients_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedClient.schema.PatchedClient,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedClient.schema.PatchedClient,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Client.schema.Client, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Client.schema.Client,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/configurations/', security=[{'tokenAuth': []}])
    async def configurations_list(
        self: typing.Self,
        *,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ConfigurationSerializerV2.schema.ConfigurationSerializerV2], gsmtasks.paths.u_lconfigurationsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ConfigurationSerializerV2.schema.ConfigurationSerializerV2],
                }),
                gsmtasks.paths.u_lconfigurationsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/contact_address_exports/', security=[{'tokenAuth': []}])
    async def contact_address_exports_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iexact', )] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__city__iexact', )] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__country__iexact', )] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iexact', )] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iexact', )] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iexact', )] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__state__iexact', )] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__street__iexact', )] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        contact__company_q: typing.Annotated[typing.Union[None, str], Query('contact__company', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iexact', )] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iexact', )] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        fields_q: typing.Annotated[typing.Union[None, str], Query('fields', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_orderer_q: typing.Annotated[typing.Union[None, str], Query('is_orderer', )] = None,
        is_receiver_q: typing.Annotated[typing.Union[None, str], Query('is_receiver', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_q: typing.Annotated[typing.Union[None, int], Query('page', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        source_q: typing.Annotated[typing.Union[None, str], Query('source', )] = None,
        sourcecontact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('sourcecontact__name__icontains', )] = None,
        sourcecontact__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('sourcecontact__name__iexact', )] = None,
        sourcecontact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('sourcecontact__name__iregex', )] = None,
        sourcecontact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('sourcecontact__name__istartswith', )] = None,
        sourcecontact__name__search_q: typing.Annotated[typing.Union[None, str], Query('sourcecontact__name__search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ContactAddressExport.schema.ContactAddressExport], gsmtasks.paths.u_lcontact_address_exportsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ContactAddressExport.schema.ContactAddressExport],
                }),
                gsmtasks.paths.u_lcontact_address_exportsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/contact_address_import/', security=[{'tokenAuth': []}])
    async def contact_address_import_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        started_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at', )] = None,
        started_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date', )] = None,
        started_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date_or_isnull', )] = None,
        started_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt', )] = None,
        started_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt_or_isnull', )] = None,
        started_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte', )] = None,
        started_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte_or_isnull', )] = None,
        started_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt', )] = None,
        started_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt_or_isnull', )] = None,
        started_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte', )] = None,
        started_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport], gsmtasks.paths.u_lcontact_address_importu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport],
                }),
                gsmtasks.paths.u_lcontact_address_importu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/contact_address_import/', security=[{'tokenAuth': []}])
    async def contact_address_import_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport,
            Body({
                'application/json': gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/contact_address_import/{id}/', security=[{'tokenAuth': []}])
    async def contact_address_import_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddressBackgroundImport.schema.ContactAddressBackgroundImport,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/contact_addresses/', security=[{'tokenAuth': []}])
    async def contact_addresses_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iexact', )] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__city__iexact', )] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__country__iexact', )] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iexact', )] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iexact', )] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iexact', )] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__state__iexact', )] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__iexact_q: typing.Annotated[typing.Union[None, str], Query('address__street__iexact', )] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        client_q: typing.Annotated[typing.Union[None, str], Query('client', )] = None,
        contact__company_q: typing.Annotated[typing.Union[None, str], Query('contact__company', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iexact', )] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__icontains', )] = None,
        contact__emails__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__iexact', )] = None,
        contact__emails__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__iregex', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__istartswith', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__emails__search_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__search', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iexact', )] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iexact', )] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__icontains', )] = None,
        contact__phones__iexact_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__iexact', )] = None,
        contact__phones__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__iregex', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__istartswith', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact__phones__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__search', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_orderer_q: typing.Annotated[typing.Union[None, str], Query('is_orderer', )] = None,
        is_receiver_q: typing.Annotated[typing.Union[None, str], Query('is_receiver', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        source_q: typing.Annotated[typing.Union[None, str], Query('source', )] = None,
        source__icontains_q: typing.Annotated[typing.Union[None, str], Query('source__icontains', )] = None,
        source__iexact_q: typing.Annotated[typing.Union[None, str], Query('source__iexact', )] = None,
        source__iregex_q: typing.Annotated[typing.Union[None, str], Query('source__iregex', )] = None,
        source__istartswith_q: typing.Annotated[typing.Union[None, str], Query('source__istartswith', )] = None,
        source__search_q: typing.Annotated[typing.Union[None, str], Query('source__search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress], gsmtasks.paths.u_lcontact_addressesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress],
                }),
                gsmtasks.paths.u_lcontact_addressesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/contact_addresses/', security=[{'tokenAuth': []}])
    async def contact_addresses_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
            Body({
                'application/json': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/contact_addresses/{id}/', security=[{'tokenAuth': []}])
    async def contact_addresses_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/contact_addresses/{id}/', security=[{'tokenAuth': []}])
    async def contact_addresses_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
            Body({
                'application/json': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/contact_addresses/{id}/', security=[{'tokenAuth': []}])
    async def contact_addresses_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedContactAddress.schema.PatchedContactAddress,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedContactAddress.schema.PatchedContactAddress,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ContactAddress.schema.ContactAddress, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ContactAddress.schema.ContactAddress,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/devices/', security=[{'tokenAuth': []}])
    async def devices_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
        user__account_roles__account_q: typing.Annotated[typing.Union[None, str], Query('user__account_roles__account', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Device.schema.Device], gsmtasks.paths.u_ldevicesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Device.schema.Device],
                }),
                gsmtasks.paths.u_ldevicesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/devices/', security=[{'tokenAuth': []}])
    async def devices_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Device.schema.Device,
            Body({
                'application/json': gsmtasks.components.schemas.Device.schema.Device,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Device.schema.Device, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Device.schema.Device,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/devices/{id}/', security=[{'tokenAuth': []}])
    async def devices_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Device.schema.Device, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Device.schema.Device,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/docs/schema/', security=[{'tokenAuth': []}, {}])
    async def docs_schema_retrieve(
        self: typing.Self,
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        lang_q: typing.Annotated[typing.Union[None, str], Query('lang', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.paths.u_ldocsu_lschemau_l.get.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema.schema, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.paths.u_ldocsu_lschemau_l.get.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema.schema,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/documents/', security=[{'tokenAuth': []}])
    async def documents_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        filename_q: typing.Annotated[typing.Union[None, str], Query('filename', )] = None,
        filename__icontains_q: typing.Annotated[typing.Union[None, str], Query('filename__icontains', )] = None,
        filename__iexact_q: typing.Annotated[typing.Union[None, str], Query('filename__iexact', )] = None,
        filename__iregex_q: typing.Annotated[typing.Union[None, str], Query('filename__iregex', )] = None,
        filename__istartswith_q: typing.Annotated[typing.Union[None, str], Query('filename__istartswith', )] = None,
        filename__search_q: typing.Annotated[typing.Union[None, str], Query('filename__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        mimetype_q: typing.Annotated[typing.Union[None, str], Query('mimetype', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        source_q: typing.Annotated[typing.Union[None, str], Query('source', )] = None,
        task_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task', )] = None,
        task__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Document.schema.Document], gsmtasks.paths.u_ldocumentsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Document.schema.Document],
                }),
                gsmtasks.paths.u_ldocumentsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/documents/', security=[{'tokenAuth': []}])
    async def documents_create(
        self: typing.Self,
        body: typing.Annotated[
            typing.Union[gsmtasks.components.schemas.Document.schema.Document, list[gsmtasks.components.schemas.Document.schema.Document]],
            Body({
                'application/json': typing.Union[gsmtasks.components.schemas.Document.schema.Document, list[gsmtasks.components.schemas.Document.schema.Document]],
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Union[gsmtasks.components.schemas.Document.schema.Document, list[gsmtasks.components.schemas.Document.schema.Document]], None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Union[gsmtasks.components.schemas.Document.schema.Document, list[gsmtasks.components.schemas.Document.schema.Document]],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/documents/{id}/', security=[{'tokenAuth': []}])
    async def documents_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Document.schema.Document, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Document.schema.Document,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/documents/{id}/', security=[{'tokenAuth': []}])
    async def documents_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/documents/batch_delete/', security=[{'tokenAuth': []}])
    async def documents_batch_delete_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.DocumentDeleteAction.schema.DocumentDeleteAction,
            Body({
                'application/json': gsmtasks.components.schemas.DocumentDeleteAction.schema.DocumentDeleteAction,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/emails/', security=[{'tokenAuth': []}])
    async def emails_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        from_email_q: typing.Annotated[typing.Union[None, str], Query('from_email', )] = None,
        from_email__icontains_q: typing.Annotated[typing.Union[None, str], Query('from_email__icontains', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        message_q: typing.Annotated[typing.Union[None, str], Query('message', )] = None,
        message__icontains_q: typing.Annotated[typing.Union[None, str], Query('message__icontains', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        received_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at', )] = None,
        received_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('received_at__date', )] = None,
        received_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('received_at__date_or_isnull', )] = None,
        received_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gt', )] = None,
        received_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gt_or_isnull', )] = None,
        received_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gte', )] = None,
        received_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gte_or_isnull', )] = None,
        received_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lt', )] = None,
        received_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lt_or_isnull', )] = None,
        received_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lte', )] = None,
        received_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lte_or_isnull', )] = None,
        reply_to_email_q: typing.Annotated[typing.Union[None, str], Query('reply_to_email', )] = None,
        reply_to_email__icontains_q: typing.Annotated[typing.Union[None, str], Query('reply_to_email__icontains', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        sent_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at', )] = None,
        sent_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date', )] = None,
        sent_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date_or_isnull', )] = None,
        sent_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt', )] = None,
        sent_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt_or_isnull', )] = None,
        sent_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte', )] = None,
        sent_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte_or_isnull', )] = None,
        sent_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt', )] = None,
        sent_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt_or_isnull', )] = None,
        sent_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte', )] = None,
        sent_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        subject_q: typing.Annotated[typing.Union[None, str], Query('subject', )] = None,
        subject__icontains_q: typing.Annotated[typing.Union[None, str], Query('subject__icontains', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Email.schema.Email], gsmtasks.paths.u_lemailsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Email.schema.Email],
                }),
                gsmtasks.paths.u_lemailsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/emails/', security=[{'tokenAuth': []}])
    async def emails_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Email.schema.Email,
            Body({
                'application/json': gsmtasks.components.schemas.Email.schema.Email,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Email.schema.Email, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Email.schema.Email,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/emails/{id}/', security=[{'tokenAuth': []}])
    async def emails_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Email.schema.Email, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Email.schema.Email,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/emails/{id}/', security=[{'tokenAuth': []}])
    async def emails_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Email.schema.Email,
            Body({
                'application/json': gsmtasks.components.schemas.Email.schema.Email,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Email.schema.Email, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Email.schema.Email,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/emails/{id}/', security=[{'tokenAuth': []}])
    async def emails_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/emails/{id}/', security=[{'tokenAuth': []}])
    async def emails_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedEmail.schema.PatchedEmail,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedEmail.schema.PatchedEmail,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Email.schema.Email, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Email.schema.Email,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/emails/{id}/resend/', security=[{'tokenAuth': []}])
    async def emails_resend_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Email.schema.Email, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Email.schema.Email,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/exports/', security=[{'tokenAuth': []}])
    async def exports_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Export.schema.Export], gsmtasks.paths.u_lexportsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Export.schema.Export],
                }),
                gsmtasks.paths.u_lexportsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/exports/', security=[{'tokenAuth': []}])
    async def exports_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Export.schema.Export,
            Body({
                'application/json': gsmtasks.components.schemas.Export.schema.Export,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Export.schema.Export, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Export.schema.Export,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/exports/{id}/', security=[{'tokenAuth': []}])
    async def exports_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Export.schema.Export, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Export.schema.Export,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/exports/{id}/', security=[{'tokenAuth': []}])
    async def exports_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Export.schema.Export,
            Body({
                'application/json': gsmtasks.components.schemas.Export.schema.Export,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Export.schema.Export, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Export.schema.Export,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/exports/{id}/', security=[{'tokenAuth': []}])
    async def exports_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/exports/{id}/', security=[{'tokenAuth': []}])
    async def exports_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedExport.schema.PatchedExport,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedExport.schema.PatchedExport,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Export.schema.Export, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Export.schema.Export,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/file_uploads/', security=[{'tokenAuth': []}])
    async def file_uploads_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        filename_q: typing.Annotated[typing.Union[None, str], Query('filename', )] = None,
        filename__icontains_q: typing.Annotated[typing.Union[None, str], Query('filename__icontains', )] = None,
        filename__iexact_q: typing.Annotated[typing.Union[None, str], Query('filename__iexact', )] = None,
        filename__iregex_q: typing.Annotated[typing.Union[None, str], Query('filename__iregex', )] = None,
        filename__istartswith_q: typing.Annotated[typing.Union[None, str], Query('filename__istartswith', )] = None,
        filename__search_q: typing.Annotated[typing.Union[None, str], Query('filename__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        source_q: typing.Annotated[typing.Union[None, str], Query('source', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload], gsmtasks.paths.u_lfile_uploadsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload],
                }),
                gsmtasks.paths.u_lfile_uploadsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/file_uploads/', security=[{'tokenAuth': []}])
    async def file_uploads_create(
        self: typing.Self,
        body: typing.Annotated[
            typing.Union[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload, list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload]],
            Body({
                'application/json': typing.Union[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload, list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload]],
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Union[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload, list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload]], None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Union[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload, list[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload]],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/file_uploads/{id}/', security=[{'tokenAuth': []}])
    async def file_uploads_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.S3FileUpload.schema.S3FileUpload,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/form_rules/', security=[{'tokenAuth': []}])
    async def form_rules_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        open_in_q: typing.Annotated[typing.Union[None, str], Query('open_in', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.FormRule.schema.FormRule], gsmtasks.paths.u_lform_rulesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.FormRule.schema.FormRule],
                }),
                gsmtasks.paths.u_lform_rulesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/form_rules/', security=[{'tokenAuth': []}])
    async def form_rules_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.FormRule.schema.FormRule,
            Body({
                'application/json': gsmtasks.components.schemas.FormRule.schema.FormRule,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.FormRule.schema.FormRule, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.FormRule.schema.FormRule,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/form_rules/{id}/', security=[{'tokenAuth': []}])
    async def form_rules_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.FormRule.schema.FormRule, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.FormRule.schema.FormRule,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/form_rules/{id}/', security=[{'tokenAuth': []}])
    async def form_rules_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.FormRule.schema.FormRule,
            Body({
                'application/json': gsmtasks.components.schemas.FormRule.schema.FormRule,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.FormRule.schema.FormRule, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.FormRule.schema.FormRule,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/form_rules/{id}/', security=[{'tokenAuth': []}])
    async def form_rules_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/form_rules/{id}/', security=[{'tokenAuth': []}])
    async def form_rules_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedFormRule.schema.PatchedFormRule,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedFormRule.schema.PatchedFormRule,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.FormRule.schema.FormRule, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.FormRule.schema.FormRule,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/integrations/', security=[{'tokenAuth': []}])
    async def integrations_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.IntegrationRequest.schema.IntegrationRequest,
            Body({
                'application/json': gsmtasks.components.schemas.IntegrationRequest.schema.IntegrationRequest,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.IntegrationRequest.schema.IntegrationRequest, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.IntegrationRequest.schema.IntegrationRequest,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/metafields/', security=[{'tokenAuth': []}])
    async def metafields_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_editable_q: typing.Annotated[typing.Union[None, str], Query('is_editable', )] = None,
        is_editable_assignee_q: typing.Annotated[typing.Union[None, str], Query('is_editable_assignee', )] = None,
        is_persistent_q: typing.Annotated[typing.Union[None, str], Query('is_persistent', )] = None,
        is_required_q: typing.Annotated[typing.Union[None, str], Query('is_required', )] = None,
        is_searchable_q: typing.Annotated[typing.Union[None, str], Query('is_searchable', )] = None,
        key_q: typing.Annotated[typing.Union[None, str], Query('key', )] = None,
        label_q: typing.Annotated[typing.Union[None, str], Query('label', )] = None,
        namespace_q: typing.Annotated[typing.Union[None, str], Query('namespace', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        show_in_detail_view_q: typing.Annotated[typing.Union[None, str], Query('show_in_detail_view', )] = None,
        show_in_list_view_q: typing.Annotated[typing.Union[None, str], Query('show_in_list_view', )] = None,
        show_in_mobile_app_q: typing.Annotated[typing.Union[None, str], Query('show_in_mobile_app', )] = None,
        show_in_pod_q: typing.Annotated[typing.Union[None, str], Query('show_in_pod', )] = None,
        show_when_task_type_assignment_q: typing.Annotated[typing.Union[None, str], Query('show_when_task_type_assignment', )] = None,
        show_when_task_type_drop_off_q: typing.Annotated[typing.Union[None, str], Query('show_when_task_type_drop_off', )] = None,
        show_when_task_type_pick_up_q: typing.Annotated[typing.Union[None, str], Query('show_when_task_type_pick_up', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        value_type_q: typing.Annotated[typing.Union[None, str], Query('value_type', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Metafield.schema.Metafield], gsmtasks.paths.u_lmetafieldsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Metafield.schema.Metafield],
                }),
                gsmtasks.paths.u_lmetafieldsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/metafields/', security=[{'tokenAuth': []}])
    async def metafields_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Metafield.schema.Metafield,
            Body({
                'application/json': gsmtasks.components.schemas.Metafield.schema.Metafield,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Metafield.schema.Metafield, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Metafield.schema.Metafield,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/metafields/{id}/', security=[{'tokenAuth': []}])
    async def metafields_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Metafield.schema.Metafield, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Metafield.schema.Metafield,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/metafields/{id}/', security=[{'tokenAuth': []}])
    async def metafields_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Metafield.schema.Metafield,
            Body({
                'application/json': gsmtasks.components.schemas.Metafield.schema.Metafield,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Metafield.schema.Metafield, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Metafield.schema.Metafield,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/metafields/{id}/', security=[{'tokenAuth': []}])
    async def metafields_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/metafields/{id}/', security=[{'tokenAuth': []}])
    async def metafields_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedMetafield.schema.PatchedMetafield,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedMetafield.schema.PatchedMetafield,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Metafield.schema.Metafield, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Metafield.schema.Metafield,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/notification_templates/', security=[{'tokenAuth': []}])
    async def notification_templates_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        event_q: typing.Annotated[typing.Union[None, str], Query('event', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        is_active_q: typing.Annotated[typing.Union[None, str], Query('is_active', )] = None,
        name_q: typing.Annotated[typing.Union[None, str], Query('name', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        recipient_q: typing.Annotated[typing.Union[None, str], Query('recipient', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        via_app_q: typing.Annotated[typing.Union[None, str], Query('via_app', )] = None,
        via_email_q: typing.Annotated[typing.Union[None, str], Query('via_email', )] = None,
        via_sms_q: typing.Annotated[typing.Union[None, str], Query('via_sms', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate], gsmtasks.paths.u_lnotification_templatesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate],
                }),
                gsmtasks.paths.u_lnotification_templatesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/notification_templates/', security=[{'tokenAuth': []}])
    async def notification_templates_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
            Body({
                'application/json': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/notification_templates/{id}/', security=[{'tokenAuth': []}])
    async def notification_templates_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/notification_templates/{id}/', security=[{'tokenAuth': []}])
    async def notification_templates_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
            Body({
                'application/json': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/notification_templates/{id}/', security=[{'tokenAuth': []}])
    async def notification_templates_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/notification_templates/{id}/', security=[{'tokenAuth': []}])
    async def notification_templates_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedNotificationTemplate.schema.PatchedNotificationTemplate,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedNotificationTemplate.schema.PatchedNotificationTemplate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.NotificationTemplate.schema.NotificationTemplate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/notification_templates/{id}/render/', security=[{'tokenAuth': []}])
    async def notification_templates_render_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.RenderRequest.schema.RenderRequest,
            Body({
                'application/json': gsmtasks.components.schemas.RenderRequest.schema.RenderRequest,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.RenderResponse.schema.RenderResponse, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.RenderResponse.schema.RenderResponse,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/notifications/', security=[{'tokenAuth': []}])
    async def notifications_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        event_q: typing.Annotated[typing.Union[None, str], Query('event', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        recipient_q: typing.Annotated[typing.Union[None, str], Query('recipient', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        sent_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at', )] = None,
        sent_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date', )] = None,
        sent_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date_or_isnull', )] = None,
        sent_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt', )] = None,
        sent_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt_or_isnull', )] = None,
        sent_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte', )] = None,
        sent_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte_or_isnull', )] = None,
        sent_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt', )] = None,
        sent_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt_or_isnull', )] = None,
        sent_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte', )] = None,
        sent_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte_or_isnull', )] = None,
        task_q: typing.Annotated[typing.Union[None, str], Query('task', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        via_app_q: typing.Annotated[typing.Union[None, str], Query('via_app', )] = None,
        via_email_q: typing.Annotated[typing.Union[None, str], Query('via_email', )] = None,
        via_sms_q: typing.Annotated[typing.Union[None, str], Query('via_sms', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Notification.schema.Notification], gsmtasks.paths.u_lnotificationsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Notification.schema.Notification],
                }),
                gsmtasks.paths.u_lnotificationsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/notifications/', security=[{'tokenAuth': []}])
    async def notifications_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Notification.schema.Notification,
            Body({
                'application/json': gsmtasks.components.schemas.Notification.schema.Notification,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Notification.schema.Notification, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Notification.schema.Notification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/notifications/{id}/', security=[{'tokenAuth': []}])
    async def notifications_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Notification.schema.Notification, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Notification.schema.Notification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/orders/', security=[{'tokenAuth': []}])
    async def orders_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2], gsmtasks.paths.u_lordersu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2],
                }),
                gsmtasks.paths.u_lordersu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/orders/', security=[{'tokenAuth': []}])
    async def orders_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
            }),
        ],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/orders/{id}/', security=[{'tokenAuth': []}])
    async def orders_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/orders/{id}/', security=[{'tokenAuth': []}])
    async def orders_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/orders/{id}/', security=[{'tokenAuth': []}])
    async def orders_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedOrderSerializerV2.schema.PatchedOrderSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedOrderSerializerV2.schema.PatchedOrderSerializerV2,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OrderSerializerV2.schema.OrderSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/password_change/', security=[{'tokenAuth': []}])
    async def password_change_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PasswordChange.schema.PasswordChange,
            Body({
                'application/json': gsmtasks.components.schemas.PasswordChange.schema.PasswordChange,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PasswordChange.schema.PasswordChange, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PasswordChange.schema.PasswordChange,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/password_reset/')
    async def password_reset_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PasswordReset.schema.PasswordReset,
            Body({
                'application/json': gsmtasks.components.schemas.PasswordReset.schema.PasswordReset,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PasswordReset.schema.PasswordReset, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PasswordReset.schema.PasswordReset,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/password_reset_confirm/')
    async def password_reset_confirm_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PasswordResetConfirm.schema.PasswordResetConfirm,
            Body({
                'application/json': gsmtasks.components.schemas.PasswordResetConfirm.schema.PasswordResetConfirm,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PasswordResetConfirm.schema.PasswordResetConfirm, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PasswordResetConfirm.schema.PasswordResetConfirm,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/push_notifications/', security=[{'tokenAuth': []}])
    async def push_notifications_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        event_q: typing.Annotated[typing.Union[None, str], Query('event', )] = None,
        event__in_q: typing.Annotated[typing.Union[None, list[str]], Query('event__in', style=Form,)] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        message_q: typing.Annotated[typing.Union[None, str], Query('message', )] = None,
        message__icontains_q: typing.Annotated[typing.Union[None, str], Query('message__icontains', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        pending_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at', )] = None,
        pending_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('pending_at__date', )] = None,
        pending_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('pending_at__date_or_isnull', )] = None,
        pending_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__gt', )] = None,
        pending_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__gt_or_isnull', )] = None,
        pending_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__gte', )] = None,
        pending_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__gte_or_isnull', )] = None,
        pending_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__lt', )] = None,
        pending_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__lt_or_isnull', )] = None,
        pending_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__lte', )] = None,
        pending_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('pending_at__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        subject_q: typing.Annotated[typing.Union[None, str], Query('subject', )] = None,
        subject__icontains_q: typing.Annotated[typing.Union[None, str], Query('subject__icontains', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.PushNotification.schema.PushNotification], gsmtasks.paths.u_lpush_notificationsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.PushNotification.schema.PushNotification],
                }),
                gsmtasks.paths.u_lpush_notificationsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/push_notifications/', security=[{'tokenAuth': []}])
    async def push_notifications_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PushNotification.schema.PushNotification,
            Body({
                'application/json': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PushNotification.schema.PushNotification, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/push_notifications/{id}/', security=[{'tokenAuth': []}])
    async def push_notifications_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PushNotification.schema.PushNotification, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/push_notifications/{id}/', security=[{'tokenAuth': []}])
    async def push_notifications_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PushNotification.schema.PushNotification,
            Body({
                'application/json': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PushNotification.schema.PushNotification, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/push_notifications/{id}/', security=[{'tokenAuth': []}])
    async def push_notifications_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/push_notifications/{id}/', security=[{'tokenAuth': []}])
    async def push_notifications_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedPushNotification.schema.PatchedPushNotification,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedPushNotification.schema.PatchedPushNotification,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PushNotification.schema.PushNotification, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/push_notifications/{id}/resend/', security=[{'tokenAuth': []}])
    async def push_notifications_resend_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.PushNotification.schema.PushNotification, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.PushNotification.schema.PushNotification,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/recurrences/', security=[{'tokenAuth': []}])
    async def recurrences_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        assign_worker_q: typing.Annotated[typing.Union[None, bool], Query('assign_worker', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        is_active_q: typing.Annotated[typing.Union[None, str], Query('is_active', )] = None,
        last_errored_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at', )] = None,
        last_errored_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_errored_at__date', )] = None,
        last_errored_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_errored_at__date_or_isnull', )] = None,
        last_errored_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__gt', )] = None,
        last_errored_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__gt_or_isnull', )] = None,
        last_errored_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__gte', )] = None,
        last_errored_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__gte_or_isnull', )] = None,
        last_errored_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__lt', )] = None,
        last_errored_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__lt_or_isnull', )] = None,
        last_errored_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__lte', )] = None,
        last_errored_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_errored_at__lte_or_isnull', )] = None,
        last_recurred_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at', )] = None,
        last_recurred_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_recurred_at__date', )] = None,
        last_recurred_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_recurred_at__date_or_isnull', )] = None,
        last_recurred_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__gt', )] = None,
        last_recurred_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__gt_or_isnull', )] = None,
        last_recurred_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__gte', )] = None,
        last_recurred_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__gte_or_isnull', )] = None,
        last_recurred_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__lt', )] = None,
        last_recurred_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__lt_or_isnull', )] = None,
        last_recurred_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__lte', )] = None,
        last_recurred_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_recurred_at__lte_or_isnull', )] = None,
        last_scheduled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at', )] = None,
        last_scheduled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_scheduled_at__date', )] = None,
        last_scheduled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('last_scheduled_at__date_or_isnull', )] = None,
        last_scheduled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__gt', )] = None,
        last_scheduled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__gt_or_isnull', )] = None,
        last_scheduled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__gte', )] = None,
        last_scheduled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__gte_or_isnull', )] = None,
        last_scheduled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__lt', )] = None,
        last_scheduled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__lt_or_isnull', )] = None,
        last_scheduled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__lte', )] = None,
        last_scheduled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('last_scheduled_at__lte_or_isnull', )] = None,
        next_scheduled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at', )] = None,
        next_scheduled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('next_scheduled_at__date', )] = None,
        next_scheduled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('next_scheduled_at__date_or_isnull', )] = None,
        next_scheduled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__gt', )] = None,
        next_scheduled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__gt_or_isnull', )] = None,
        next_scheduled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__gte', )] = None,
        next_scheduled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__gte_or_isnull', )] = None,
        next_scheduled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__lt', )] = None,
        next_scheduled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__lt_or_isnull', )] = None,
        next_scheduled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__lte', )] = None,
        next_scheduled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('next_scheduled_at__lte_or_isnull', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        tasks_data__address__formatted_address__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__address__formatted_address__exact', )] = None,
        tasks_data__address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__address__formatted_address__icontains', )] = None,
        tasks_data__address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('tasks_data__address__formatted_address__in', style=Form,)] = None,
        tasks_data__category__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__category__exact', )] = None,
        tasks_data__category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('tasks_data__category__in', style=Form,)] = None,
        tasks_data__contact__company__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__company__exact', )] = None,
        tasks_data__contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__company__icontains', )] = None,
        tasks_data__contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('tasks_data__contact__company__in', style=Form,)] = None,
        tasks_data__contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__emails__contains', )] = None,
        tasks_data__contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('tasks_data__contact__emails__isnull', )] = None,
        tasks_data__contact__name__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__name__exact', )] = None,
        tasks_data__contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__name__icontains', )] = None,
        tasks_data__contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('tasks_data__contact__name__in', style=Form,)] = None,
        tasks_data__contact__notes__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__notes__exact', )] = None,
        tasks_data__contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__notes__icontains', )] = None,
        tasks_data__contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__contact__phones__contains', )] = None,
        tasks_data__contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('tasks_data__contact__phones__isnull', )] = None,
        tasks_data__description__icontains_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__description__icontains', )] = None,
        tasks_data__state__exact_q: typing.Annotated[typing.Union[None, str], Query('tasks_data__state__exact', )] = None,
        tasks_data__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('tasks_data__state__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Recurrence.schema.Recurrence], gsmtasks.paths.u_lrecurrencesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Recurrence.schema.Recurrence],
                }),
                gsmtasks.paths.u_lrecurrencesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/recurrences/', security=[{'tokenAuth': []}])
    async def recurrences_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Recurrence.schema.Recurrence,
            Body({
                'application/json': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
            }),
        ],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Recurrence.schema.Recurrence, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/recurrences/{id}/', security=[{'tokenAuth': []}])
    async def recurrences_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Recurrence.schema.Recurrence, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/recurrences/{id}/', security=[{'tokenAuth': []}])
    async def recurrences_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Recurrence.schema.Recurrence,
            Body({
                'application/json': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Recurrence.schema.Recurrence, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/recurrences/{id}/', security=[{'tokenAuth': []}])
    async def recurrences_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedRecurrence.schema.PatchedRecurrence,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedRecurrence.schema.PatchedRecurrence,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Recurrence.schema.Recurrence, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Recurrence.schema.Recurrence,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/register/')
    async def register_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Registration.schema.Registration,
            Body({
                'application/json': gsmtasks.components.schemas.Registration.schema.Registration,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Registration.schema.Registration, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Registration.schema.Registration,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/reports/tasks/states_count/', security=[{'tokenAuth': []}])
    async def reports_tasks_states_count_retrieve(
        self: typing.Self,
        *,
        account_q: typing.Annotated[uuid.UUID, Query('account', )],
        date_from_q: typing.Annotated[datetime.date, Query('date_from', )],
        date_until_q: typing.Annotated[datetime.date, Query('date_until', )],
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        timezone_q: typing.Annotated[typing.Union[None, str], Query('timezone', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TasksStatesCountResponse.schema.TasksStatesCountResponse, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TasksStatesCountResponse.schema.TasksStatesCountResponse,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/reviews/', security=[{'tokenAuth': []}])
    async def reviews_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        tracker_q: typing.Annotated[typing.Union[None, str], Query('tracker', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Review.schema.Review], gsmtasks.paths.u_lreviewsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Review.schema.Review],
                }),
                gsmtasks.paths.u_lreviewsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/reviews/', security=[{'tokenAuth': []}, {}])
    async def reviews_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Review.schema.Review,
            Body({
                'application/json': gsmtasks.components.schemas.Review.schema.Review,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Review.schema.Review, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Review.schema.Review,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/reviews/{id}/', security=[{'tokenAuth': []}])
    async def reviews_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Review.schema.Review, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Review.schema.Review,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/route_optimizations/', security=[{'tokenAuth': []}])
    async def route_optimizations_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        assignees__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignees__id__in', style=Form,)] = None,
        commited_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at', )] = None,
        commited_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date', )] = None,
        commited_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date_or_isnull', )] = None,
        commited_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt', )] = None,
        commited_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt_or_isnull', )] = None,
        commited_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte', )] = None,
        commited_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte_or_isnull', )] = None,
        commited_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt', )] = None,
        commited_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt_or_isnull', )] = None,
        commited_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte', )] = None,
        commited_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        end_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time', )] = None,
        end_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date', )] = None,
        end_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date_or_isnull', )] = None,
        end_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt', )] = None,
        end_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt_or_isnull', )] = None,
        end_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte', )] = None,
        end_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte_or_isnull', )] = None,
        end_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt', )] = None,
        end_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt_or_isnull', )] = None,
        end_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte', )] = None,
        end_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte_or_isnull', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        objective_q: typing.Annotated[typing.Union[None, str], Query('objective', )] = None,
        objective__in_q: typing.Annotated[typing.Union[None, list[str]], Query('objective__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        ready_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at', )] = None,
        ready_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date', )] = None,
        ready_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date_or_isnull', )] = None,
        ready_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt', )] = None,
        ready_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt_or_isnull', )] = None,
        ready_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte', )] = None,
        ready_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte_or_isnull', )] = None,
        ready_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt', )] = None,
        ready_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt_or_isnull', )] = None,
        ready_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte', )] = None,
        ready_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte_or_isnull', )] = None,
        scheduled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at', )] = None,
        scheduled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date', )] = None,
        scheduled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date_or_isnull', )] = None,
        scheduled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt', )] = None,
        scheduled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt_or_isnull', )] = None,
        scheduled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte', )] = None,
        scheduled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte_or_isnull', )] = None,
        scheduled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt', )] = None,
        scheduled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt_or_isnull', )] = None,
        scheduled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte', )] = None,
        scheduled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte_or_isnull', )] = None,
        start_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time', )] = None,
        start_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date', )] = None,
        start_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date_or_isnull', )] = None,
        start_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt', )] = None,
        start_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt_or_isnull', )] = None,
        start_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte', )] = None,
        start_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte_or_isnull', )] = None,
        start_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt', )] = None,
        start_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt_or_isnull', )] = None,
        start_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte', )] = None,
        start_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte_or_isnull', )] = None,
        started_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at', )] = None,
        started_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date', )] = None,
        started_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date_or_isnull', )] = None,
        started_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt', )] = None,
        started_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt_or_isnull', )] = None,
        started_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte', )] = None,
        started_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte_or_isnull', )] = None,
        started_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt', )] = None,
        started_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt_or_isnull', )] = None,
        started_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte', )] = None,
        started_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        tasks__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('tasks__id__in', style=Form,)] = None,
        total_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gt', )] = None,
        total_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gte', )] = None,
        total_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lt', )] = None,
        total_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lte', )] = None,
        total_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gt', )] = None,
        total_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gte', )] = None,
        total_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lt', )] = None,
        total_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lte', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2], gsmtasks.paths.u_lroute_optimizationsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2],
                }),
                gsmtasks.paths.u_lroute_optimizationsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/route_optimizations/', security=[{'tokenAuth': []}])
    async def route_optimizations_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/route_optimizations/{id}/', security=[{'tokenAuth': []}])
    async def route_optimizations_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.RouteOptimizationSerializerV2.schema.RouteOptimizationSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/route_optimizations/{id}/commit/', security=[{'tokenAuth': []}])
    async def route_optimizations_commit_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/route_optimizations/{id}/report/', security=[{'tokenAuth': []}])
    async def route_optimizations_report_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/route_optimizations/{id}/results/', security=[{'tokenAuth': []}])
    async def route_optimizations_results_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.RouteOptimizationResultSerializerV2.schema.RouteOptimizationResultSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.RouteOptimizationResultSerializerV2.schema.RouteOptimizationResultSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/route_optimizations/{id}/routes/', security=[{'tokenAuth': []}])
    async def route_optimizations_routes_list(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        assignees__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignees__id__in', style=Form,)] = None,
        commited_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at', )] = None,
        commited_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date', )] = None,
        commited_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date_or_isnull', )] = None,
        commited_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt', )] = None,
        commited_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt_or_isnull', )] = None,
        commited_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte', )] = None,
        commited_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte_or_isnull', )] = None,
        commited_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt', )] = None,
        commited_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt_or_isnull', )] = None,
        commited_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte', )] = None,
        commited_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        end_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time', )] = None,
        end_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date', )] = None,
        end_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date_or_isnull', )] = None,
        end_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt', )] = None,
        end_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt_or_isnull', )] = None,
        end_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte', )] = None,
        end_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte_or_isnull', )] = None,
        end_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt', )] = None,
        end_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt_or_isnull', )] = None,
        end_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte', )] = None,
        end_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte_or_isnull', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        objective_q: typing.Annotated[typing.Union[None, str], Query('objective', )] = None,
        objective__in_q: typing.Annotated[typing.Union[None, list[str]], Query('objective__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        ready_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at', )] = None,
        ready_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date', )] = None,
        ready_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date_or_isnull', )] = None,
        ready_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt', )] = None,
        ready_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt_or_isnull', )] = None,
        ready_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte', )] = None,
        ready_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte_or_isnull', )] = None,
        ready_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt', )] = None,
        ready_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt_or_isnull', )] = None,
        ready_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte', )] = None,
        ready_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte_or_isnull', )] = None,
        scheduled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at', )] = None,
        scheduled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date', )] = None,
        scheduled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date_or_isnull', )] = None,
        scheduled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt', )] = None,
        scheduled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt_or_isnull', )] = None,
        scheduled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte', )] = None,
        scheduled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte_or_isnull', )] = None,
        scheduled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt', )] = None,
        scheduled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt_or_isnull', )] = None,
        scheduled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte', )] = None,
        scheduled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte_or_isnull', )] = None,
        start_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time', )] = None,
        start_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date', )] = None,
        start_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date_or_isnull', )] = None,
        start_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt', )] = None,
        start_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt_or_isnull', )] = None,
        start_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte', )] = None,
        start_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte_or_isnull', )] = None,
        start_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt', )] = None,
        start_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt_or_isnull', )] = None,
        start_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte', )] = None,
        start_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte_or_isnull', )] = None,
        started_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at', )] = None,
        started_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date', )] = None,
        started_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date_or_isnull', )] = None,
        started_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt', )] = None,
        started_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt_or_isnull', )] = None,
        started_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte', )] = None,
        started_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte_or_isnull', )] = None,
        started_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt', )] = None,
        started_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt_or_isnull', )] = None,
        started_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte', )] = None,
        started_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        tasks__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('tasks__id__in', style=Form,)] = None,
        total_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gt', )] = None,
        total_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gte', )] = None,
        total_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lt', )] = None,
        total_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lte', )] = None,
        total_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gt', )] = None,
        total_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gte', )] = None,
        total_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lt', )] = None,
        total_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lte', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Route.schema.Route], gsmtasks.paths.u_lroute_optimizationsu_lu_1zidu_21u_lroutesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Route.schema.Route],
                }),
                gsmtasks.paths.u_lroute_optimizationsu_lu_1zidu_21u_lroutesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/route_optimizations/{id}/routes/', security=[{'tokenAuth': []}])
    async def route_optimizations_routes_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        assignees__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignees__id__in', style=Form,)] = None,
        commited_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at', )] = None,
        commited_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date', )] = None,
        commited_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('commited_at__date_or_isnull', )] = None,
        commited_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt', )] = None,
        commited_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gt_or_isnull', )] = None,
        commited_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte', )] = None,
        commited_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__gte_or_isnull', )] = None,
        commited_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt', )] = None,
        commited_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lt_or_isnull', )] = None,
        commited_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte', )] = None,
        commited_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('commited_at__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        end_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time', )] = None,
        end_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date', )] = None,
        end_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date_or_isnull', )] = None,
        end_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt', )] = None,
        end_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt_or_isnull', )] = None,
        end_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte', )] = None,
        end_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte_or_isnull', )] = None,
        end_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt', )] = None,
        end_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt_or_isnull', )] = None,
        end_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte', )] = None,
        end_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte_or_isnull', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        objective_q: typing.Annotated[typing.Union[None, str], Query('objective', )] = None,
        objective__in_q: typing.Annotated[typing.Union[None, list[str]], Query('objective__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        ready_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at', )] = None,
        ready_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date', )] = None,
        ready_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('ready_at__date_or_isnull', )] = None,
        ready_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt', )] = None,
        ready_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gt_or_isnull', )] = None,
        ready_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte', )] = None,
        ready_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__gte_or_isnull', )] = None,
        ready_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt', )] = None,
        ready_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lt_or_isnull', )] = None,
        ready_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte', )] = None,
        ready_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('ready_at__lte_or_isnull', )] = None,
        scheduled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at', )] = None,
        scheduled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date', )] = None,
        scheduled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_at__date_or_isnull', )] = None,
        scheduled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt', )] = None,
        scheduled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gt_or_isnull', )] = None,
        scheduled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte', )] = None,
        scheduled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__gte_or_isnull', )] = None,
        scheduled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt', )] = None,
        scheduled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lt_or_isnull', )] = None,
        scheduled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte', )] = None,
        scheduled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('scheduled_at__lte_or_isnull', )] = None,
        start_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time', )] = None,
        start_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date', )] = None,
        start_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date_or_isnull', )] = None,
        start_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt', )] = None,
        start_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt_or_isnull', )] = None,
        start_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte', )] = None,
        start_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte_or_isnull', )] = None,
        start_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt', )] = None,
        start_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt_or_isnull', )] = None,
        start_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte', )] = None,
        start_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte_or_isnull', )] = None,
        started_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at', )] = None,
        started_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date', )] = None,
        started_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date_or_isnull', )] = None,
        started_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt', )] = None,
        started_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt_or_isnull', )] = None,
        started_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte', )] = None,
        started_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte_or_isnull', )] = None,
        started_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt', )] = None,
        started_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt_or_isnull', )] = None,
        started_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte', )] = None,
        started_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        tasks__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('tasks__id__in', style=Form,)] = None,
        total_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gt', )] = None,
        total_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__gte', )] = None,
        total_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lt', )] = None,
        total_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('total_distance__lte', )] = None,
        total_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gt', )] = None,
        total_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__gte', )] = None,
        total_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lt', )] = None,
        total_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('total_duration__lte', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Route.schema.Route], None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Route.schema.Route],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/route_optimizations/{id}/schedule/', security=[{'tokenAuth': []}])
    async def route_optimizations_schedule_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/routes/', security=[{'tokenAuth': []}])
    async def routes_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        code_q: typing.Annotated[typing.Union[None, str], Query('code', )] = None,
        code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('code__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        end_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time', )] = None,
        end_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date', )] = None,
        end_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date_or_isnull', )] = None,
        end_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt', )] = None,
        end_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt_or_isnull', )] = None,
        end_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte', )] = None,
        end_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte_or_isnull', )] = None,
        end_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt', )] = None,
        end_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt_or_isnull', )] = None,
        end_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte', )] = None,
        end_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte_or_isnull', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        name_q: typing.Annotated[typing.Union[None, str], Query('name', )] = None,
        name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('name__in', style=Form,)] = None,
        objective_q: typing.Annotated[typing.Union[None, str], Query('objective', )] = None,
        objective__in_q: typing.Annotated[typing.Union[None, list[str]], Query('objective__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        start_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time', )] = None,
        start_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date', )] = None,
        start_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date_or_isnull', )] = None,
        start_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt', )] = None,
        start_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt_or_isnull', )] = None,
        start_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte', )] = None,
        start_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte_or_isnull', )] = None,
        start_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt', )] = None,
        start_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt_or_isnull', )] = None,
        start_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte', )] = None,
        start_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Route.schema.Route], gsmtasks.paths.u_lroutesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Route.schema.Route],
                }),
                gsmtasks.paths.u_lroutesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/routes/', security=[{'tokenAuth': []}])
    async def routes_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Route.schema.Route,
            Body({
                'application/json': gsmtasks.components.schemas.Route.schema.Route,
            }),
        ],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Route.schema.Route, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Route.schema.Route,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/routes/{id}/', security=[{'tokenAuth': []}])
    async def routes_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Route.schema.Route, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Route.schema.Route,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/routes/{id}/', security=[{'tokenAuth': []}])
    async def routes_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Route.schema.Route,
            Body({
                'application/json': gsmtasks.components.schemas.Route.schema.Route,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Route.schema.Route, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Route.schema.Route,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/routes/{id}/', security=[{'tokenAuth': []}])
    async def routes_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/routes/{id}/', security=[{'tokenAuth': []}])
    async def routes_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedRoute.schema.PatchedRoute,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedRoute.schema.PatchedRoute,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Route.schema.Route, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Route.schema.Route,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/routes/{id}/activate/', security=[{'tokenAuth': []}])
    async def routes_activate_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/routes/{id}/archive/', security=[{'tokenAuth': []}])
    async def routes_archive_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.RouteArchive.schema.RouteArchive,
            Body({
                'application/json': gsmtasks.components.schemas.RouteArchive.schema.RouteArchive,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/routes/{id}/draft/', security=[{'tokenAuth': []}])
    async def routes_draft_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/signatures/', security=[{'tokenAuth': []}])
    async def signatures_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        filename_q: typing.Annotated[typing.Union[None, str], Query('filename', )] = None,
        filename__icontains_q: typing.Annotated[typing.Union[None, str], Query('filename__icontains', )] = None,
        filename__iexact_q: typing.Annotated[typing.Union[None, str], Query('filename__iexact', )] = None,
        filename__iregex_q: typing.Annotated[typing.Union[None, str], Query('filename__iregex', )] = None,
        filename__istartswith_q: typing.Annotated[typing.Union[None, str], Query('filename__istartswith', )] = None,
        filename__search_q: typing.Annotated[typing.Union[None, str], Query('filename__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        mimetype_q: typing.Annotated[typing.Union[None, str], Query('mimetype', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        source_q: typing.Annotated[typing.Union[None, str], Query('source', )] = None,
        task_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task', )] = None,
        task__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Signature.schema.Signature], gsmtasks.paths.u_lsignaturesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Signature.schema.Signature],
                }),
                gsmtasks.paths.u_lsignaturesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/signatures/', security=[{'tokenAuth': []}])
    async def signatures_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Signature.schema.Signature,
            Body({
                'application/json': gsmtasks.components.schemas.Signature.schema.Signature,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Signature.schema.Signature, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Signature.schema.Signature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/signatures/{id}/', security=[{'tokenAuth': []}])
    async def signatures_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Signature.schema.Signature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Signature.schema.Signature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/signatures/{id}/', security=[{'tokenAuth': []}])
    async def signatures_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/signatures/batch_delete/', security=[{'tokenAuth': []}])
    async def signatures_batch_delete_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.SignatureDeleteAction.schema.SignatureDeleteAction,
            Body({
                'application/json': gsmtasks.components.schemas.SignatureDeleteAction.schema.SignatureDeleteAction,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/sms/', security=[{'tokenAuth': []}])
    async def sms_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        alphanumeric_sender_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('alphanumeric_sender_id', )] = None,
        alphanumeric_sender_id__icontains_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('alphanumeric_sender_id__icontains', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        message_q: typing.Annotated[typing.Union[None, str], Query('message', )] = None,
        message__icontains_q: typing.Annotated[typing.Union[None, str], Query('message__icontains', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        phone_q: typing.Annotated[typing.Union[None, str], Query('phone', )] = None,
        phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('phone__icontains', )] = None,
        price_q: typing.Annotated[typing.Union[None, str], Query('price', )] = None,
        price__gt_q: typing.Annotated[typing.Union[None, str], Query('price__gt', )] = None,
        price__gte_q: typing.Annotated[typing.Union[None, str], Query('price__gte', )] = None,
        price__lt_q: typing.Annotated[typing.Union[None, str], Query('price__lt', )] = None,
        price__lte_q: typing.Annotated[typing.Union[None, str], Query('price__lte', )] = None,
        provider_q: typing.Annotated[typing.Union[None, str], Query('provider', )] = None,
        provider__in_q: typing.Annotated[typing.Union[None, list[str]], Query('provider__in', style=Form,)] = None,
        received_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at', )] = None,
        received_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('received_at__date', )] = None,
        received_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('received_at__date_or_isnull', )] = None,
        received_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gt', )] = None,
        received_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gt_or_isnull', )] = None,
        received_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gte', )] = None,
        received_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__gte_or_isnull', )] = None,
        received_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lt', )] = None,
        received_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lt_or_isnull', )] = None,
        received_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lte', )] = None,
        received_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('received_at__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        segments_count_q: typing.Annotated[typing.Union[None, int], Query('segments_count', )] = None,
        segments_count__gt_q: typing.Annotated[typing.Union[None, int], Query('segments_count__gt', )] = None,
        segments_count__gte_q: typing.Annotated[typing.Union[None, int], Query('segments_count__gte', )] = None,
        segments_count__lt_q: typing.Annotated[typing.Union[None, int], Query('segments_count__lt', )] = None,
        segments_count__lte_q: typing.Annotated[typing.Union[None, int], Query('segments_count__lte', )] = None,
        sent_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at', )] = None,
        sent_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date', )] = None,
        sent_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('sent_at__date_or_isnull', )] = None,
        sent_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt', )] = None,
        sent_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gt_or_isnull', )] = None,
        sent_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte', )] = None,
        sent_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__gte_or_isnull', )] = None,
        sent_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt', )] = None,
        sent_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lt_or_isnull', )] = None,
        sent_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte', )] = None,
        sent_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('sent_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.SMS.schema.SMS], gsmtasks.paths.u_lsmsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.SMS.schema.SMS],
                }),
                gsmtasks.paths.u_lsmsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/sms/', security=[{'tokenAuth': []}])
    async def sms_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.SMS.schema.SMS,
            Body({
                'application/json': gsmtasks.components.schemas.SMS.schema.SMS,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.SMS.schema.SMS, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.SMS.schema.SMS,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/sms/{id}/', security=[{'tokenAuth': []}])
    async def sms_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.SMS.schema.SMS, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.SMS.schema.SMS,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/sms/{id}/', security=[{'tokenAuth': []}])
    async def sms_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.SMS.schema.SMS,
            Body({
                'application/json': gsmtasks.components.schemas.SMS.schema.SMS,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.SMS.schema.SMS, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.SMS.schema.SMS,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/sms/{id}/', security=[{'tokenAuth': []}])
    async def sms_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/sms/{id}/', security=[{'tokenAuth': []}])
    async def sms_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedSMS.schema.PatchedSMS,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedSMS.schema.PatchedSMS,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.SMS.schema.SMS, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.SMS.schema.SMS,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/sms/{id}/resend/', security=[{'tokenAuth': []}])
    async def sms_resend_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.SMS.schema.SMS, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.SMS.schema.SMS,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_address_features/', security=[{'tokenAuth': []}])
    async def task_address_features_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, str], Query('assignee', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        owner_q: typing.Annotated[typing.Union[None, str], Query('owner', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskAddressFeatureList.schema.TaskAddressFeatureList, gsmtasks.paths.u_ltask_address_featuresu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskAddressFeatureList.schema.TaskAddressFeatureList,
                }),
                gsmtasks.paths.u_ltask_address_featuresu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_address_features/{id}/', security=[{'tokenAuth': []}])
    async def task_address_features_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskAddressFeature.schema.TaskAddressFeature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskAddressFeature.schema.TaskAddressFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_commands/', security=[{'tokenAuth': []}])
    async def task_commands_list(
        self: typing.Self,
        *,
        accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at', )] = None,
        accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('accepted_at__date', )] = None,
        accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('accepted_at__date_or_isnull', )] = None,
        accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__gt', )] = None,
        accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__gt_or_isnull', )] = None,
        accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__gte', )] = None,
        accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__gte_or_isnull', )] = None,
        accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__lt', )] = None,
        accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__lt_or_isnull', )] = None,
        accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__lte', )] = None,
        accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('accepted_at__lte_or_isnull', )] = None,
        action_q: typing.Annotated[typing.Union[None, str], Query('action', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, str], Query('assignee', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        rejected_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at', )] = None,
        rejected_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('rejected_at__date', )] = None,
        rejected_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('rejected_at__date_or_isnull', )] = None,
        rejected_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__gt', )] = None,
        rejected_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__gt_or_isnull', )] = None,
        rejected_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__gte', )] = None,
        rejected_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__gte_or_isnull', )] = None,
        rejected_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__lt', )] = None,
        rejected_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__lt_or_isnull', )] = None,
        rejected_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__lte', )] = None,
        rejected_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('rejected_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        task_q: typing.Annotated[typing.Union[None, str], Query('task', )] = None,
        task__account_q: typing.Annotated[typing.Union[None, str], Query('task__account', )] = None,
        time_q: typing.Annotated[typing.Union[None, str], Query('time', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand], gsmtasks.paths.u_ltask_commandsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand],
                }),
                gsmtasks.paths.u_ltask_commandsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/task_commands/', security=[{'tokenAuth': []}])
    async def task_commands_create(
        self: typing.Self,
        body: typing.Annotated[
            typing.Union[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand]],
            Body({
                'application/json': typing.Union[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand]],
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Union[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand]], None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Union[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, list[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand]],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_commands/{id}/', security=[{'tokenAuth': []}])
    async def task_commands_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskCommand.schema.TaskCommand,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/task_commands/{id}/', security=[{'tokenAuth': []}])
    async def task_commands_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskCommand.schema.TaskCommand,
            Body({
                'application/json': gsmtasks.components.schemas.TaskCommand.schema.TaskCommand,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskCommand.schema.TaskCommand, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskCommand.schema.TaskCommand,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_event_tracks/', security=[{'tokenAuth': []}])
    async def task_event_tracks_list(
        self: typing.Self,
        *,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        event_q: typing.Annotated[typing.Union[None, str], Query('event', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        from_state_q: typing.Annotated[typing.Union[None, str], Query('from_state', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        task_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task', )] = None,
        task__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task__in', style=Form,)] = None,
        to_state_q: typing.Annotated[typing.Union[None, str], Query('to_state', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('user', )] = None,
        user__in_q: typing.Annotated[typing.Union[None, list[str]], Query('user__in', style=Form,)] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskEventTrackList.schema.TaskEventTrackList, gsmtasks.paths.u_ltask_event_tracksu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskEventTrackList.schema.TaskEventTrackList,
                }),
                gsmtasks.paths.u_ltask_event_tracksu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_event_tracks/{id}/', security=[{'tokenAuth': []}])
    async def task_event_tracks_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskEventTrack.schema.TaskEventTrack, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskEventTrack.schema.TaskEventTrack,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_events/', security=[{'tokenAuth': []}])
    async def task_events_list(
        self: typing.Self,
        *,
        assignee_q: typing.Annotated[typing.Union[None, str], Query('assignee', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        event_q: typing.Annotated[typing.Union[None, str], Query('event', )] = None,
        event__in_q: typing.Annotated[typing.Union[None, list[str]], Query('event__in', style=Form,)] = None,
        field_q: typing.Annotated[typing.Union[None, str], Query('field', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        from_state_q: typing.Annotated[typing.Union[None, str], Query('from_state', )] = None,
        from_state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('from_state__in', style=Form,)] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        task_q: typing.Annotated[typing.Union[None, str], Query('task', )] = None,
        task__account_q: typing.Annotated[typing.Union[None, str], Query('task__account', )] = None,
        to_state_q: typing.Annotated[typing.Union[None, str], Query('to_state', )] = None,
        to_state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('to_state__in', style=Form,)] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskEventSerializerV2.schema.TaskEventSerializerV2], gsmtasks.paths.u_ltask_eventsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskEventSerializerV2.schema.TaskEventSerializerV2],
                }),
                gsmtasks.paths.u_ltask_eventsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_events/{id}/', security=[{'tokenAuth': []}])
    async def task_events_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskEventSerializerV2.schema.TaskEventSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskEventSerializerV2.schema.TaskEventSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_exports/', security=[{'tokenAuth': []}])
    async def task_exports_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        fields_q: typing.Annotated[typing.Union[None, str], Query('fields', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metafields__namespace_key: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_q: typing.Annotated[typing.Union[None, int], Query('page', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskExport.schema.TaskExport], gsmtasks.paths.u_ltask_exportsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskExport.schema.TaskExport],
                }),
                gsmtasks.paths.u_ltask_exportsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_forms/', security=[{'tokenAuth': []}])
    async def task_forms_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskForm.schema.TaskForm], gsmtasks.paths.u_ltask_formsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskForm.schema.TaskForm],
                }),
                gsmtasks.paths.u_ltask_formsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/task_forms/', security=[{'tokenAuth': []}])
    async def task_forms_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskForm.schema.TaskForm,
            Body({
                'application/json': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskForm.schema.TaskForm, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_forms/{id}/', security=[{'tokenAuth': []}])
    async def task_forms_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskForm.schema.TaskForm, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/task_forms/{id}/', security=[{'tokenAuth': []}])
    async def task_forms_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskForm.schema.TaskForm,
            Body({
                'application/json': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskForm.schema.TaskForm, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/task_forms/{id}/', security=[{'tokenAuth': []}])
    async def task_forms_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/task_forms/{id}/', security=[{'tokenAuth': []}])
    async def task_forms_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedTaskForm.schema.PatchedTaskForm,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedTaskForm.schema.PatchedTaskForm,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskForm.schema.TaskForm, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskForm.schema.TaskForm,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_import/', security=[{'tokenAuth': []}])
    async def task_import_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at', )] = None,
        failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date', )] = None,
        failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('failed_at__date_or_isnull', )] = None,
        failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt', )] = None,
        failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gt_or_isnull', )] = None,
        failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte', )] = None,
        failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__gte_or_isnull', )] = None,
        failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt', )] = None,
        failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lt_or_isnull', )] = None,
        failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte', )] = None,
        failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('failed_at__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        started_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at', )] = None,
        started_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date', )] = None,
        started_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('started_at__date_or_isnull', )] = None,
        started_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt', )] = None,
        started_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gt_or_isnull', )] = None,
        started_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte', )] = None,
        started_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__gte_or_isnull', )] = None,
        started_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt', )] = None,
        started_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lt_or_isnull', )] = None,
        started_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte', )] = None,
        started_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('started_at__lte_or_isnull', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport], gsmtasks.paths.u_ltask_importu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport],
                }),
                gsmtasks.paths.u_ltask_importu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/task_import/', security=[{'tokenAuth': []}])
    async def task_import_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport,
            Body({
                'application/json': gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_import/{id}/', security=[{'tokenAuth': []}])
    async def task_import_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TasksBackgroundImport.schema.TasksBackgroundImport,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_import_mapping/', security=[{'tokenAuth': []}])
    async def task_import_mapping_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        field_names__contained_by_q: typing.Annotated[typing.Union[None, str], Query('field_names__contained_by', )] = None,
        field_names__contains_q: typing.Annotated[typing.Union[None, str], Query('field_names__contains', )] = None,
        field_names__isnull_q: typing.Annotated[typing.Union[None, bool], Query('field_names__isnull', )] = None,
        field_names__overlap_q: typing.Annotated[typing.Union[None, str], Query('field_names__overlap', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ImportMapping.schema.ImportMapping], gsmtasks.paths.u_ltask_import_mappingu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ImportMapping.schema.ImportMapping],
                }),
                gsmtasks.paths.u_ltask_import_mappingu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/task_import_mapping/', security=[{'tokenAuth': []}])
    async def task_import_mapping_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.ImportMapping.schema.ImportMapping,
            Body({
                'application/json': gsmtasks.components.schemas.ImportMapping.schema.ImportMapping,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ImportMapping.schema.ImportMapping, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ImportMapping.schema.ImportMapping,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_import_mapping/{id}/', security=[{'tokenAuth': []}])
    async def task_import_mapping_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ImportMapping.schema.ImportMapping, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ImportMapping.schema.ImportMapping,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_metadatas/', security=[{'tokenAuth': []}])
    async def task_metadatas_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        task_q: typing.Annotated[typing.Union[None, str], Query('task', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskMetadata.schema.TaskMetadata], gsmtasks.paths.u_ltask_metadatasu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskMetadata.schema.TaskMetadata],
                }),
                gsmtasks.paths.u_ltask_metadatasu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/task_metadatas/{id}/', security=[{'tokenAuth': []}])
    async def task_metadatas_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskMetadata.schema.TaskMetadata, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskMetadata.schema.TaskMetadata,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/', security=[{'tokenAuth': []}])
    async def tasks_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metafields__namespace_key: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
        sideload_q: typing.Annotated[typing.Union[None, list[str]], Query('sideload', style=Form,)] = None,
    ) -> typing.Annotated[
        tuple[typing.Union[gsmtasks.components.schemas.TaskListExt.schema.TaskListExt, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]], gsmtasks.paths.u_ltasksu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': typing.Union[gsmtasks.components.schemas.TaskListExt.schema.TaskListExt, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]],
                }),
                gsmtasks.paths.u_ltasksu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/', security=[{'tokenAuth': []}])
    async def tasks_create(
        self: typing.Self,
        body: typing.Annotated[
            typing.Union[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]],
            Body({
                'application/json': typing.Union[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]],
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[typing.Union[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]], None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': typing.Union[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, list[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2]],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/{id}/', security=[{'tokenAuth': []}])
    async def tasks_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/tasks/{id}/', security=[{'tokenAuth': []}])
    async def tasks_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/tasks/{id}/', security=[{'tokenAuth': []}])
    async def tasks_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedTaskSerializerV2.schema.PatchedTaskSerializerV2,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedTaskSerializerV2.schema.PatchedTaskSerializerV2,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/accept/', security=[{'tokenAuth': []}])
    async def tasks_accept_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/account_change/', security=[{'tokenAuth': []}])
    async def tasks_account_change_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAccountChange.schema.TaskAccountChange,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAccountChange.schema.TaskAccountChange,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Task.schema.Task, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Task.schema.Task,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/activate/', security=[{'tokenAuth': []}])
    async def tasks_activate_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/assign/', security=[{'tokenAuth': []}])
    async def tasks_assign_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAssign.schema.TaskAssign,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAssign.schema.TaskAssign,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/cancel/', security=[{'tokenAuth': []}])
    async def tasks_cancel_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/complete/', security=[{'tokenAuth': []}])
    async def tasks_complete_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/{id}/documents/', security=[{'tokenAuth': []}])
    async def tasks_documents_list(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metadata__last_unassigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Document.schema.Document], gsmtasks.paths.u_ltasksu_lu_1zidu_21u_ldocumentsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Document.schema.Document],
                }),
                gsmtasks.paths.u_ltasksu_lu_1zidu_21u_ldocumentsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/{id}/events/', security=[{'tokenAuth': []}])
    async def tasks_events_list(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metadata__last_unassigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskEvent.schema.TaskEvent], gsmtasks.paths.u_ltasksu_lu_1zidu_21u_leventsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskEvent.schema.TaskEvent],
                }),
                gsmtasks.paths.u_ltasksu_lu_1zidu_21u_leventsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/fail/', security=[{'tokenAuth': []}])
    async def tasks_fail_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/{id}/pod/', security=[{'tokenAuth': []}])
    async def tasks_pod_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '200': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/reject/', security=[{'tokenAuth': []}])
    async def tasks_reject_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/tasks/{id}/signatures/', security=[{'tokenAuth': []}])
    async def tasks_signatures_list(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metadata__last_unassigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Signature.schema.Signature], gsmtasks.paths.u_ltasksu_lu_1zidu_21u_lsignaturesu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Signature.schema.Signature],
                }),
                gsmtasks.paths.u_ltasksu_lu_1zidu_21u_lsignaturesu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/transit/', security=[{'tokenAuth': []}])
    async def tasks_transit_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/unaccept/', security=[{'tokenAuth': []}])
    async def tasks_unaccept_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/{id}/unassign/', security=[{'tokenAuth': []}])
    async def tasks_unassign_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            Body({
                'application/json': gsmtasks.components.schemas.TaskAction.schema.TaskAction,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TaskSerializerV2.schema.TaskSerializerV2,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/tasks/reorder/', security=[{'tokenAuth': []}])
    async def tasks_reorder_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TaskListReorderRequest.schema.TaskListReorderRequest,
            Body({
                'application/json': gsmtasks.components.schemas.TaskListReorderRequest.schema.TaskListReorderRequest,
            }),
        ],
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        address__apartment_number_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number', )] = None,
        address__apartment_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__icontains', )] = None,
        address__apartment_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__apartment_number__in', style=Form,)] = None,
        address__apartment_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__iregex', )] = None,
        address__apartment_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__istartswith', )] = None,
        address__apartment_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__apartment_number__search', )] = None,
        address__city_q: typing.Annotated[typing.Union[None, str], Query('address__city', )] = None,
        address__city__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__city__icontains', )] = None,
        address__city__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__city__in', style=Form,)] = None,
        address__city__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__city__iregex', )] = None,
        address__city__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__city__istartswith', )] = None,
        address__city__search_q: typing.Annotated[typing.Union[None, str], Query('address__city__search', )] = None,
        address__country_q: typing.Annotated[typing.Union[None, str], Query('address__country', )] = None,
        address__country__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country__icontains', )] = None,
        address__country__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country__in', style=Form,)] = None,
        address__country__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country__iregex', )] = None,
        address__country__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country__istartswith', )] = None,
        address__country__search_q: typing.Annotated[typing.Union[None, str], Query('address__country__search', )] = None,
        address__country_code_q: typing.Annotated[typing.Union[None, str], Query('address__country_code', )] = None,
        address__country_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__icontains', )] = None,
        address__country_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__country_code__in', style=Form,)] = None,
        address__country_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__iregex', )] = None,
        address__country_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__istartswith', )] = None,
        address__country_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__country_code__search', )] = None,
        address__formatted_address_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address', )] = None,
        address__formatted_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__icontains', )] = None,
        address__formatted_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__formatted_address__in', style=Form,)] = None,
        address__formatted_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__iregex', )] = None,
        address__formatted_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__istartswith', )] = None,
        address__formatted_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__formatted_address__search', )] = None,
        address__geocode_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at', )] = None,
        address__geocode_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date', )] = None,
        address__geocode_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocode_failed_at__date_or_isnull', )] = None,
        address__geocode_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt', )] = None,
        address__geocode_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gt_or_isnull', )] = None,
        address__geocode_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte', )] = None,
        address__geocode_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__gte_or_isnull', )] = None,
        address__geocode_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt', )] = None,
        address__geocode_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lt_or_isnull', )] = None,
        address__geocode_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte', )] = None,
        address__geocode_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocode_failed_at__lte_or_isnull', )] = None,
        address__geocoded_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at', )] = None,
        address__geocoded_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date', )] = None,
        address__geocoded_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('address__geocoded_at__date_or_isnull', )] = None,
        address__geocoded_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt', )] = None,
        address__geocoded_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gt_or_isnull', )] = None,
        address__geocoded_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte', )] = None,
        address__geocoded_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__gte_or_isnull', )] = None,
        address__geocoded_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt', )] = None,
        address__geocoded_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lt_or_isnull', )] = None,
        address__geocoded_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte', )] = None,
        address__geocoded_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('address__geocoded_at__lte_or_isnull', )] = None,
        address__google_place_id_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id', )] = None,
        address__google_place_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__icontains', )] = None,
        address__google_place_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__google_place_id__in', style=Form,)] = None,
        address__google_place_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__iregex', )] = None,
        address__google_place_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__istartswith', )] = None,
        address__google_place_id__search_q: typing.Annotated[typing.Union[None, str], Query('address__google_place_id__search', )] = None,
        address__house_number_q: typing.Annotated[typing.Union[None, str], Query('address__house_number', )] = None,
        address__house_number__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__icontains', )] = None,
        address__house_number__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__house_number__in', style=Form,)] = None,
        address__house_number__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__iregex', )] = None,
        address__house_number__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__istartswith', )] = None,
        address__house_number__search_q: typing.Annotated[typing.Union[None, str], Query('address__house_number__search', )] = None,
        address__point_of_interest_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest', )] = None,
        address__point_of_interest__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__icontains', )] = None,
        address__point_of_interest__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__point_of_interest__in', style=Form,)] = None,
        address__point_of_interest__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__iregex', )] = None,
        address__point_of_interest__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__istartswith', )] = None,
        address__point_of_interest__search_q: typing.Annotated[typing.Union[None, str], Query('address__point_of_interest__search', )] = None,
        address__postal_code_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code', )] = None,
        address__postal_code__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__icontains', )] = None,
        address__postal_code__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__postal_code__in', style=Form,)] = None,
        address__postal_code__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__iregex', )] = None,
        address__postal_code__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__istartswith', )] = None,
        address__postal_code__search_q: typing.Annotated[typing.Union[None, str], Query('address__postal_code__search', )] = None,
        address__raw_address_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address', )] = None,
        address__raw_address__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__icontains', )] = None,
        address__raw_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__raw_address__in', style=Form,)] = None,
        address__raw_address__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__iregex', )] = None,
        address__raw_address__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__istartswith', )] = None,
        address__raw_address__search_q: typing.Annotated[typing.Union[None, str], Query('address__raw_address__search', )] = None,
        address__state_q: typing.Annotated[typing.Union[None, str], Query('address__state', )] = None,
        address__state__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__state__icontains', )] = None,
        address__state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__state__in', style=Form,)] = None,
        address__state__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__state__iregex', )] = None,
        address__state__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__state__istartswith', )] = None,
        address__state__search_q: typing.Annotated[typing.Union[None, str], Query('address__state__search', )] = None,
        address__street_q: typing.Annotated[typing.Union[None, str], Query('address__street', )] = None,
        address__street__icontains_q: typing.Annotated[typing.Union[None, str], Query('address__street__icontains', )] = None,
        address__street__in_q: typing.Annotated[typing.Union[None, list[str]], Query('address__street__in', style=Form,)] = None,
        address__street__iregex_q: typing.Annotated[typing.Union[None, str], Query('address__street__iregex', )] = None,
        address__street__istartswith_q: typing.Annotated[typing.Union[None, str], Query('address__street__istartswith', )] = None,
        address__street__search_q: typing.Annotated[typing.Union[None, str], Query('address__street__search', )] = None,
        address_data_q: typing.Annotated[typing.Union[None, str], Query('address_data', )] = None,
        address_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('address_id', )] = None,
        address_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('address_id__in', style=Form,)] = None,
        address_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('address_id__isnull', )] = None,
        assignee_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee', )] = None,
        assignee__email_q: typing.Annotated[typing.Union[None, str], Query('assignee__email', )] = None,
        assignee__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__icontains', )] = None,
        assignee__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__iregex', )] = None,
        assignee__email__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__email__isnull', )] = None,
        assignee__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__istartswith', )] = None,
        assignee__email__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__email__search', )] = None,
        assignee__first_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name', )] = None,
        assignee__first_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__icontains', )] = None,
        assignee__first_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__iregex', )] = None,
        assignee__first_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__first_name__isnull', )] = None,
        assignee__first_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__istartswith', )] = None,
        assignee__first_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__first_name__search', )] = None,
        assignee__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee__in', style=Form,)] = None,
        assignee__last_name_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name', )] = None,
        assignee__last_name__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__icontains', )] = None,
        assignee__last_name__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__iregex', )] = None,
        assignee__last_name__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__last_name__isnull', )] = None,
        assignee__last_name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__istartswith', )] = None,
        assignee__last_name__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__last_name__search', )] = None,
        assignee__phone_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone', )] = None,
        assignee__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__icontains', )] = None,
        assignee__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__iregex', )] = None,
        assignee__phone__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee__phone__isnull', )] = None,
        assignee__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__istartswith', )] = None,
        assignee__phone__search_q: typing.Annotated[typing.Union[None, str], Query('assignee__phone__search', )] = None,
        assignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('assignee_id', )] = None,
        assignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('assignee_id__in', style=Form,)] = None,
        assignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('assignee_id__isnull', )] = None,
        assignee_proximity_q: typing.Annotated[typing.Union[None, str], Query('assignee_proximity', )] = None,
        assignee_proximity__in_q: typing.Annotated[typing.Union[None, list[str]], Query('assignee_proximity__in', style=Form,)] = None,
        barcodes__contained_by_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contained_by', )] = None,
        barcodes__contains_q: typing.Annotated[typing.Union[None, str], Query('barcodes__contains', )] = None,
        barcodes__isnull_q: typing.Annotated[typing.Union[None, bool], Query('barcodes__isnull', )] = None,
        barcodes__overlap_q: typing.Annotated[typing.Union[None, str], Query('barcodes__overlap', )] = None,
        calendar_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time', )] = None,
        calendar_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date', )] = None,
        calendar_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('calendar_time__date_or_isnull', )] = None,
        calendar_time__gt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt', )] = None,
        calendar_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gt_or_isnull', )] = None,
        calendar_time__gte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte', )] = None,
        calendar_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__gte_or_isnull', )] = None,
        calendar_time__lt_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt', )] = None,
        calendar_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lt_or_isnull', )] = None,
        calendar_time__lte_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte', )] = None,
        calendar_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('calendar_time__lte_or_isnull', )] = None,
        cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at', )] = None,
        cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date', )] = None,
        cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('cancelled_at__date_or_isnull', )] = None,
        cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt', )] = None,
        cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gt_or_isnull', )] = None,
        cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte', )] = None,
        cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__gte_or_isnull', )] = None,
        cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt', )] = None,
        cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lt_or_isnull', )] = None,
        cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte', )] = None,
        cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('cancelled_at__lte_or_isnull', )] = None,
        category_q: typing.Annotated[typing.Union[None, str], Query('category', )] = None,
        category__in_q: typing.Annotated[typing.Union[None, list[str]], Query('category__in', style=Form,)] = None,
        complete_after_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after', )] = None,
        complete_after__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date', )] = None,
        complete_after__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_after__date_or_isnull', )] = None,
        complete_after__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt', )] = None,
        complete_after__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gt_or_isnull', )] = None,
        complete_after__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte', )] = None,
        complete_after__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__gte_or_isnull', )] = None,
        complete_after__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt', )] = None,
        complete_after__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lt_or_isnull', )] = None,
        complete_after__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte', )] = None,
        complete_after__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_after__lte_or_isnull', )] = None,
        complete_before_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before', )] = None,
        complete_before__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date', )] = None,
        complete_before__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('complete_before__date_or_isnull', )] = None,
        complete_before__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt', )] = None,
        complete_before__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gt_or_isnull', )] = None,
        complete_before__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte', )] = None,
        complete_before__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__gte_or_isnull', )] = None,
        complete_before__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt', )] = None,
        complete_before__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lt_or_isnull', )] = None,
        complete_before__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte', )] = None,
        complete_before__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('complete_before__lte_or_isnull', )] = None,
        completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at', )] = None,
        completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date', )] = None,
        completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('completed_at__date_or_isnull', )] = None,
        completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt', )] = None,
        completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gt_or_isnull', )] = None,
        completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte', )] = None,
        completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__gte_or_isnull', )] = None,
        completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt', )] = None,
        completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lt_or_isnull', )] = None,
        completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte', )] = None,
        completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('completed_at__lte_or_isnull', )] = None,
        contact__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__company__icontains', )] = None,
        contact__company__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__company__in', style=Form,)] = None,
        contact__company__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__company__iregex', )] = None,
        contact__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__company__istartswith', )] = None,
        contact__company__search_q: typing.Annotated[typing.Union[None, str], Query('contact__company__search', )] = None,
        contact__email_q: typing.Annotated[typing.Union[None, str], Query('contact__email', )] = None,
        contact__email__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__email__icontains', )] = None,
        contact__email__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__email__in', style=Form,)] = None,
        contact__email__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__email__iregex', )] = None,
        contact__email__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__email__istartswith', )] = None,
        contact__email__search_q: typing.Annotated[typing.Union[None, str], Query('contact__email__search', )] = None,
        contact__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contained_by', )] = None,
        contact__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__contains', )] = None,
        contact__emails__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__emails__isnull', )] = None,
        contact__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__emails__overlap', )] = None,
        contact__name_q: typing.Annotated[typing.Union[None, str], Query('contact__name', )] = None,
        contact__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__name__icontains', )] = None,
        contact__name__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__name__in', style=Form,)] = None,
        contact__name__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__name__iregex', )] = None,
        contact__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__name__istartswith', )] = None,
        contact__name__search_q: typing.Annotated[typing.Union[None, str], Query('contact__name__search', )] = None,
        contact__notes_q: typing.Annotated[typing.Union[None, str], Query('contact__notes', )] = None,
        contact__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__icontains', )] = None,
        contact__notes__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__notes__in', style=Form,)] = None,
        contact__notes__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__iregex', )] = None,
        contact__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__istartswith', )] = None,
        contact__notes__search_q: typing.Annotated[typing.Union[None, str], Query('contact__notes__search', )] = None,
        contact__phone_q: typing.Annotated[typing.Union[None, str], Query('contact__phone', )] = None,
        contact__phone__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__icontains', )] = None,
        contact__phone__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact__phone__in', style=Form,)] = None,
        contact__phone__iregex_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__iregex', )] = None,
        contact__phone__istartswith_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__istartswith', )] = None,
        contact__phone__search_q: typing.Annotated[typing.Union[None, str], Query('contact__phone__search', )] = None,
        contact__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contained_by', )] = None,
        contact__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__contains', )] = None,
        contact__phones__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact__phones__isnull', )] = None,
        contact__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('contact__phones__overlap', )] = None,
        contact_address_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_address', )] = None,
        contact_address__external_id_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id', )] = None,
        contact_address__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('contact_address__external_id__icontains', )] = None,
        contact_address__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__external_id__in', style=Form,)] = None,
        contact_address__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_address__external_id__isnull', )] = None,
        contact_address__in_q: typing.Annotated[typing.Union[None, list[str]], Query('contact_address__in', style=Form,)] = None,
        contact_data_q: typing.Annotated[typing.Union[None, str], Query('contact_data', )] = None,
        contact_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('contact_id', )] = None,
        contact_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('contact_id__in', style=Form,)] = None,
        contact_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('contact_id__isnull', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        created_by_q: typing.Annotated[typing.Union[None, str], Query('created_by', )] = None,
        created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('created_by__in', style=Form,)] = None,
        created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('created_by__isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        description_q: typing.Annotated[typing.Union[None, str], Query('description', )] = None,
        description__icontains_q: typing.Annotated[typing.Union[None, str], Query('description__icontains', )] = None,
        description__iregex_q: typing.Annotated[typing.Union[None, str], Query('description__iregex', )] = None,
        description__istartswith_q: typing.Annotated[typing.Union[None, str], Query('description__istartswith', )] = None,
        description__search_q: typing.Annotated[typing.Union[None, str], Query('description__search', )] = None,
        duration_q: typing.Annotated[typing.Union[None, str], Query('duration', )] = None,
        duration__gt_q: typing.Annotated[typing.Union[None, str], Query('duration__gt', )] = None,
        duration__gte_q: typing.Annotated[typing.Union[None, str], Query('duration__gte', )] = None,
        duration__lt_q: typing.Annotated[typing.Union[None, str], Query('duration__lt', )] = None,
        duration__lte_q: typing.Annotated[typing.Union[None, str], Query('duration__lte', )] = None,
        external_id_q: typing.Annotated[typing.Union[None, str], Query('external_id', )] = None,
        external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('external_id__icontains', )] = None,
        external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('external_id__in', style=Form,)] = None,
        external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('external_id__iregex', )] = None,
        external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('external_id__isnull', )] = None,
        external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('external_id__istartswith', )] = None,
        external_id__search_q: typing.Annotated[typing.Union[None, str], Query('external_id__search', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('id', )] = None,
        id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('id__in', style=Form,)] = None,
        is_optimal_q: typing.Annotated[typing.Union[None, str], Query('is_optimal', )] = None,
        is_optimal__isnull_q: typing.Annotated[typing.Union[None, bool], Query('is_optimal__isnull', )] = None,
        metadata__accepted_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance', )] = None,
        metadata__accepted_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gt', )] = None,
        metadata__accepted_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__gte', )] = None,
        metadata__accepted_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lt', )] = None,
        metadata__accepted_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_distance__lte', )] = None,
        metadata__accepted_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__accepted_duration', )] = None,
        metadata__accepted_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gt', )] = None,
        metadata__accepted_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__gte', )] = None,
        metadata__accepted_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lt', )] = None,
        metadata__accepted_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__accepted_duration__lte', )] = None,
        metadata__active_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance', )] = None,
        metadata__active_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gt', )] = None,
        metadata__active_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__gte', )] = None,
        metadata__active_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lt', )] = None,
        metadata__active_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_distance__lte', )] = None,
        metadata__active_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__active_duration', )] = None,
        metadata__active_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gt', )] = None,
        metadata__active_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__gte', )] = None,
        metadata__active_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lt', )] = None,
        metadata__active_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__active_duration__lte', )] = None,
        metadata__assigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance', )] = None,
        metadata__assigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gt', )] = None,
        metadata__assigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__gte', )] = None,
        metadata__assigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lt', )] = None,
        metadata__assigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_distance__lte', )] = None,
        metadata__assigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__assigned_duration', )] = None,
        metadata__assigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gt', )] = None,
        metadata__assigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__gte', )] = None,
        metadata__assigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lt', )] = None,
        metadata__assigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__assigned_duration__lte', )] = None,
        metadata__cancelled_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance', )] = None,
        metadata__cancelled_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gt', )] = None,
        metadata__cancelled_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__gte', )] = None,
        metadata__cancelled_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lt', )] = None,
        metadata__cancelled_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_distance__lte', )] = None,
        metadata__cancelled_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__cancelled_duration', )] = None,
        metadata__cancelled_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gt', )] = None,
        metadata__cancelled_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__gte', )] = None,
        metadata__cancelled_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lt', )] = None,
        metadata__cancelled_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__cancelled_duration__lte', )] = None,
        metadata__completed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance', )] = None,
        metadata__completed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gt', )] = None,
        metadata__completed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__gte', )] = None,
        metadata__completed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lt', )] = None,
        metadata__completed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_distance__lte', )] = None,
        metadata__completed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__completed_duration', )] = None,
        metadata__completed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gt', )] = None,
        metadata__completed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__gte', )] = None,
        metadata__completed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lt', )] = None,
        metadata__completed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__completed_duration__lte', )] = None,
        metadata__documents_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count', )] = None,
        metadata__documents_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gt', )] = None,
        metadata__documents_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__gte', )] = None,
        metadata__documents_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lt', )] = None,
        metadata__documents_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__documents_count__lte', )] = None,
        metadata__events_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count', )] = None,
        metadata__events_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gt', )] = None,
        metadata__events_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__gte', )] = None,
        metadata__events_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lt', )] = None,
        metadata__events_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__events_count__lte', )] = None,
        metadata__failed_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance', )] = None,
        metadata__failed_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gt', )] = None,
        metadata__failed_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__gte', )] = None,
        metadata__failed_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lt', )] = None,
        metadata__failed_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_distance__lte', )] = None,
        metadata__failed_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__failed_duration', )] = None,
        metadata__failed_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gt', )] = None,
        metadata__failed_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__gte', )] = None,
        metadata__failed_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lt', )] = None,
        metadata__failed_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__failed_duration__lte', )] = None,
        metadata__forms_completed_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count', )] = None,
        metadata__forms_completed_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gt', )] = None,
        metadata__forms_completed_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__gte', )] = None,
        metadata__forms_completed_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lt', )] = None,
        metadata__forms_completed_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_completed_count__lte', )] = None,
        metadata__forms_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count', )] = None,
        metadata__forms_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gt', )] = None,
        metadata__forms_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__gte', )] = None,
        metadata__forms_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lt', )] = None,
        metadata__forms_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__forms_count__lte', )] = None,
        metadata__last_accepted_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at', )] = None,
        metadata__last_accepted_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date', )] = None,
        metadata__last_accepted_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_accepted_at__date_or_isnull', )] = None,
        metadata__last_accepted_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt', )] = None,
        metadata__last_accepted_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gt_or_isnull', )] = None,
        metadata__last_accepted_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte', )] = None,
        metadata__last_accepted_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__gte_or_isnull', )] = None,
        metadata__last_accepted_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt', )] = None,
        metadata__last_accepted_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lt_or_isnull', )] = None,
        metadata__last_accepted_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte', )] = None,
        metadata__last_accepted_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_accepted_at__lte_or_isnull', )] = None,
        metadata__last_active_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at', )] = None,
        metadata__last_active_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date', )] = None,
        metadata__last_active_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_active_at__date_or_isnull', )] = None,
        metadata__last_active_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt', )] = None,
        metadata__last_active_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gt_or_isnull', )] = None,
        metadata__last_active_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte', )] = None,
        metadata__last_active_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__gte_or_isnull', )] = None,
        metadata__last_active_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt', )] = None,
        metadata__last_active_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lt_or_isnull', )] = None,
        metadata__last_active_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte', )] = None,
        metadata__last_active_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_active_at__lte_or_isnull', )] = None,
        metadata__last_assigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at', )] = None,
        metadata__last_assigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date', )] = None,
        metadata__last_assigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_assigned_at__date_or_isnull', )] = None,
        metadata__last_assigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt', )] = None,
        metadata__last_assigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gt_or_isnull', )] = None,
        metadata__last_assigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte', )] = None,
        metadata__last_assigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__gte_or_isnull', )] = None,
        metadata__last_assigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt', )] = None,
        metadata__last_assigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lt_or_isnull', )] = None,
        metadata__last_assigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte', )] = None,
        metadata__last_assigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_assigned_at__lte_or_isnull', )] = None,
        metadata__last_cancelled_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at', )] = None,
        metadata__last_cancelled_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date', )] = None,
        metadata__last_cancelled_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_cancelled_at__date_or_isnull', )] = None,
        metadata__last_cancelled_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt', )] = None,
        metadata__last_cancelled_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gt_or_isnull', )] = None,
        metadata__last_cancelled_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte', )] = None,
        metadata__last_cancelled_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__gte_or_isnull', )] = None,
        metadata__last_cancelled_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt', )] = None,
        metadata__last_cancelled_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lt_or_isnull', )] = None,
        metadata__last_cancelled_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte', )] = None,
        metadata__last_cancelled_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_cancelled_at__lte_or_isnull', )] = None,
        metadata__last_completed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at', )] = None,
        metadata__last_completed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date', )] = None,
        metadata__last_completed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_completed_at__date_or_isnull', )] = None,
        metadata__last_completed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt', )] = None,
        metadata__last_completed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gt_or_isnull', )] = None,
        metadata__last_completed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte', )] = None,
        metadata__last_completed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__gte_or_isnull', )] = None,
        metadata__last_completed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt', )] = None,
        metadata__last_completed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lt_or_isnull', )] = None,
        metadata__last_completed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte', )] = None,
        metadata__last_completed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_completed_at__lte_or_isnull', )] = None,
        metadata__last_failed_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at', )] = None,
        metadata__last_failed_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date', )] = None,
        metadata__last_failed_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_failed_at__date_or_isnull', )] = None,
        metadata__last_failed_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt', )] = None,
        metadata__last_failed_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gt_or_isnull', )] = None,
        metadata__last_failed_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte', )] = None,
        metadata__last_failed_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__gte_or_isnull', )] = None,
        metadata__last_failed_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt', )] = None,
        metadata__last_failed_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lt_or_isnull', )] = None,
        metadata__last_failed_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte', )] = None,
        metadata__last_failed_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_failed_at__lte_or_isnull', )] = None,
        metadata__last_transit_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at', )] = None,
        metadata__last_transit_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date', )] = None,
        metadata__last_transit_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_transit_at__date_or_isnull', )] = None,
        metadata__last_transit_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt', )] = None,
        metadata__last_transit_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gt_or_isnull', )] = None,
        metadata__last_transit_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte', )] = None,
        metadata__last_transit_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__gte_or_isnull', )] = None,
        metadata__last_transit_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt', )] = None,
        metadata__last_transit_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lt_or_isnull', )] = None,
        metadata__last_transit_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte', )] = None,
        metadata__last_transit_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_transit_at__lte_or_isnull', )] = None,
        metadata__last_unassigned_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at', )] = None,
        metadata__last_unassigned_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date', )] = None,
        metadata__last_unassigned_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('metadata__last_unassigned_at__date_or_isnull', )] = None,
        metadata__last_unassigned_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt', )] = None,
        metadata__last_unassigned_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gt_or_isnull', )] = None,
        metadata__last_unassigned_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte', )] = None,
        metadata__last_unassigned_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__gte_or_isnull', )] = None,
        metadata__last_unassigned_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt', )] = None,
        metadata__last_unassigned_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lt_or_isnull', )] = None,
        metadata__last_unassigned_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte', )] = None,
        metadata__last_unassigned_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('metadata__last_unassigned_at__lte_or_isnull', )] = None,
        metadata__signatures_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count', )] = None,
        metadata__signatures_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gt', )] = None,
        metadata__signatures_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__gte', )] = None,
        metadata__signatures_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lt', )] = None,
        metadata__signatures_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__signatures_count__lte', )] = None,
        metadata__task_event_notes_count_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count', )] = None,
        metadata__task_event_notes_count__gt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gt', )] = None,
        metadata__task_event_notes_count__gte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__gte', )] = None,
        metadata__task_event_notes_count__lt_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lt', )] = None,
        metadata__task_event_notes_count__lte_q: typing.Annotated[typing.Union[None, int], Query('metadata__task_event_notes_count__lte', )] = None,
        metadata__transit_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance', )] = None,
        metadata__transit_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gt', )] = None,
        metadata__transit_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__gte', )] = None,
        metadata__transit_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lt', )] = None,
        metadata__transit_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_distance__lte', )] = None,
        metadata__transit_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__transit_duration', )] = None,
        metadata__transit_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gt', )] = None,
        metadata__transit_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__gte', )] = None,
        metadata__transit_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lt', )] = None,
        metadata__transit_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__transit_duration__lte', )] = None,
        metadata__unassigned_distance_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance', )] = None,
        metadata__unassigned_distance__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gt', )] = None,
        metadata__unassigned_distance__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__gte', )] = None,
        metadata__unassigned_distance__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lt', )] = None,
        metadata__unassigned_distance__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_distance__lte', )] = None,
        metadata__unassigned_duration_q: typing.Annotated[typing.Union[None, int, str], Query('metadata__unassigned_duration', )] = None,
        metadata__unassigned_duration__gt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gt', )] = None,
        metadata__unassigned_duration__gte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__gte', )] = None,
        metadata__unassigned_duration__lt_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lt', )] = None,
        metadata__unassigned_duration__lte_q: typing.Annotated[typing.Union[None, str], Query('metadata__unassigned_duration__lte', )] = None,
        metafields__namespaceu_wkey_q: typing.Annotated[typing.Union[None, str], Query('metafields__namespace:key', )] = None,
        order_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order', )] = None,
        order__auto_assign_q: typing.Annotated[typing.Union[None, str], Query('order__auto_assign', )] = None,
        order__created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at', )] = None,
        order__created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date', )] = None,
        order__created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('order__created_at__date_or_isnull', )] = None,
        order__created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt', )] = None,
        order__created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gt_or_isnull', )] = None,
        order__created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte', )] = None,
        order__created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__gte_or_isnull', )] = None,
        order__created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt', )] = None,
        order__created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lt_or_isnull', )] = None,
        order__created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte', )] = None,
        order__created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('order__created_at__lte_or_isnull', )] = None,
        order__created_by_q: typing.Annotated[typing.Union[None, str], Query('order__created_by', )] = None,
        order__created_by__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__created_by__in', style=Form,)] = None,
        order__created_by__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__created_by__isnull', )] = None,
        order__external_id_q: typing.Annotated[typing.Union[None, str], Query('order__external_id', )] = None,
        order__external_id__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__icontains', )] = None,
        order__external_id__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__external_id__in', style=Form,)] = None,
        order__external_id__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__iregex', )] = None,
        order__external_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order__external_id__isnull', )] = None,
        order__external_id__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__istartswith', )] = None,
        order__external_id__search_q: typing.Annotated[typing.Union[None, str], Query('order__external_id__search', )] = None,
        order__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__in', style=Form,)] = None,
        order__orderer_q: typing.Annotated[typing.Union[None, str], Query('order__orderer', )] = None,
        order__orderer__company_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company', )] = None,
        order__orderer__company__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__icontains', )] = None,
        order__orderer__company__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__iexact', )] = None,
        order__orderer__company__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__company__istartswith', )] = None,
        order__orderer__emails__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contained_by', )] = None,
        order__orderer__emails__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__contains', )] = None,
        order__orderer__emails__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__emails__overlap', )] = None,
        order__orderer__name_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name', )] = None,
        order__orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__icontains', )] = None,
        order__orderer__name__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__iexact', )] = None,
        order__orderer__name__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__name__istartswith', )] = None,
        order__orderer__notes_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes', )] = None,
        order__orderer__notes__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__icontains', )] = None,
        order__orderer__notes__iexact_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__iexact', )] = None,
        order__orderer__notes__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__notes__istartswith', )] = None,
        order__orderer__phones__contained_by_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contained_by', )] = None,
        order__orderer__phones__contains_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__contains', )] = None,
        order__orderer__phones__overlap_q: typing.Annotated[typing.Union[None, str], Query('order__orderer__phones__overlap', )] = None,
        order__reference_q: typing.Annotated[typing.Union[None, str], Query('order__reference', )] = None,
        order__reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('order__reference__icontains', )] = None,
        order__reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('order__reference__in', style=Form,)] = None,
        order__reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('order__reference__iregex', )] = None,
        order__reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('order__reference__istartswith', )] = None,
        order__reference__search_q: typing.Annotated[typing.Union[None, str], Query('order__reference__search', )] = None,
        order_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('order_id', )] = None,
        order_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('order_id__in', style=Form,)] = None,
        order_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('order_id__isnull', )] = None,
        orderer_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer', )] = None,
        orderer__id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer__id', )] = None,
        orderer__id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer__id__in', style=Form,)] = None,
        orderer__id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer__id__isnull', )] = None,
        orderer__in_q: typing.Annotated[typing.Union[None, list[str]], Query('orderer__in', style=Form,)] = None,
        orderer__name_q: typing.Annotated[typing.Union[None, str], Query('orderer__name', )] = None,
        orderer__name__icontains_q: typing.Annotated[typing.Union[None, str], Query('orderer__name__icontains', )] = None,
        orderer_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('orderer_id', )] = None,
        orderer_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('orderer_id__in', style=Form,)] = None,
        orderer_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('orderer_id__isnull', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        owner_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('owner_id', )] = None,
        owner_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('owner_id__in', style=Form,)] = None,
        owner_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('owner_id__isnull', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        position_q: typing.Annotated[typing.Union[None, datetime.date], Query('position', )] = None,
        position__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date', )] = None,
        position__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('position__date_or_isnull', )] = None,
        position__gt_q: typing.Annotated[typing.Union[None, str], Query('position__gt', )] = None,
        position__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gt_or_isnull', )] = None,
        position__gte_q: typing.Annotated[typing.Union[None, str], Query('position__gte', )] = None,
        position__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__gte_or_isnull', )] = None,
        position__lt_q: typing.Annotated[typing.Union[None, str], Query('position__lt', )] = None,
        position__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lt_or_isnull', )] = None,
        position__lte_q: typing.Annotated[typing.Union[None, str], Query('position__lte', )] = None,
        position__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('position__lte_or_isnull', )] = None,
        previous_assignees__contained_by_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contained_by', )] = None,
        previous_assignees__contains_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__contains', )] = None,
        previous_assignees__isnull_q: typing.Annotated[typing.Union[None, bool], Query('previous_assignees__isnull', )] = None,
        previous_assignees__overlap_q: typing.Annotated[typing.Union[None, str], Query('previous_assignees__overlap', )] = None,
        priority_q: typing.Annotated[typing.Union[None, str], Query('priority', )] = None,
        priority__gt_q: typing.Annotated[typing.Union[None, str], Query('priority__gt', )] = None,
        priority__gte_q: typing.Annotated[typing.Union[None, str], Query('priority__gte', )] = None,
        priority__in_q: typing.Annotated[typing.Union[None, list[str]], Query('priority__in', style=Form,)] = None,
        priority__lt_q: typing.Annotated[typing.Union[None, str], Query('priority__lt', )] = None,
        priority__lte_q: typing.Annotated[typing.Union[None, str], Query('priority__lte', )] = None,
        receiver_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver', )] = None,
        receiver__in_q: typing.Annotated[typing.Union[None, list[str]], Query('receiver__in', style=Form,)] = None,
        receiver_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('receiver_id', )] = None,
        receiver_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('receiver_id__in', style=Form,)] = None,
        receiver_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('receiver_id__isnull', )] = None,
        reference_q: typing.Annotated[typing.Union[None, str], Query('reference', )] = None,
        reference__icontains_q: typing.Annotated[typing.Union[None, str], Query('reference__icontains', )] = None,
        reference__in_q: typing.Annotated[typing.Union[None, list[str]], Query('reference__in', style=Form,)] = None,
        reference__iregex_q: typing.Annotated[typing.Union[None, str], Query('reference__iregex', )] = None,
        reference__istartswith_q: typing.Annotated[typing.Union[None, str], Query('reference__istartswith', )] = None,
        reference__search_q: typing.Annotated[typing.Union[None, str], Query('reference__search', )] = None,
        route_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route', )] = None,
        route__in_q: typing.Annotated[typing.Union[None, list[str]], Query('route__in', style=Form,)] = None,
        route_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('route_id', )] = None,
        route_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('route_id__in', style=Form,)] = None,
        route_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('route_id__isnull', )] = None,
        scheduled_time_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time', )] = None,
        scheduled_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date', )] = None,
        scheduled_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('scheduled_time__date_or_isnull', )] = None,
        scheduled_time__gt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt', )] = None,
        scheduled_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gt_or_isnull', )] = None,
        scheduled_time__gte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte', )] = None,
        scheduled_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__gte_or_isnull', )] = None,
        scheduled_time__lt_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt', )] = None,
        scheduled_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lt_or_isnull', )] = None,
        scheduled_time__lte_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte', )] = None,
        scheduled_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('scheduled_time__lte_or_isnull', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        size__contained_by_q: typing.Annotated[typing.Union[None, str], Query('size__contained_by', )] = None,
        size__contains_q: typing.Annotated[typing.Union[None, str], Query('size__contains', )] = None,
        size__isnull_q: typing.Annotated[typing.Union[None, bool], Query('size__isnull', )] = None,
        size__overlap_q: typing.Annotated[typing.Union[None, str], Query('size__overlap', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        state__in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in', style=Form,)] = None,
        state__in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__in_or_isnull', style=Form,)] = None,
        state__not_in_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in', style=Form,)] = None,
        state__not_in_or_isnull_q: typing.Annotated[typing.Union[None, list[str]], Query('state__not_in_or_isnull', style=Form,)] = None,
        task_import_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('task_import', )] = None,
        task_import__in_q: typing.Annotated[typing.Union[None, list[str]], Query('task_import__in', style=Form,)] = None,
        unassignee_id_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('unassignee_id', )] = None,
        unassignee_id__in_q: typing.Annotated[typing.Union[None, list[uuid.UUID]], Query('unassignee_id__in', style=Form,)] = None,
        unassignee_id__isnull_q: typing.Annotated[typing.Union[None, bool], Query('unassignee_id__isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        updated_at_delay_latest_q: typing.Annotated[typing.Union[None, bool], Query('updated_at_delay_latest', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TaskListReorderResponseTask.schema.TaskListReorderResponseTask], None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TaskListReorderResponseTask.schema.TaskListReorderResponseTask],
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/time_location_features/', security=[{'tokenAuth': []}])
    async def time_location_features_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        time_q: typing.Annotated[typing.Union[None, datetime.date], Query('time', )] = None,
        time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date', )] = None,
        time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date_or_isnull', )] = None,
        time__gt_q: typing.Annotated[typing.Union[None, str], Query('time__gt', )] = None,
        time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gt_or_isnull', )] = None,
        time__gte_q: typing.Annotated[typing.Union[None, str], Query('time__gte', )] = None,
        time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gte_or_isnull', )] = None,
        time__lt_q: typing.Annotated[typing.Union[None, str], Query('time__lt', )] = None,
        time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lt_or_isnull', )] = None,
        time__lte_q: typing.Annotated[typing.Union[None, str], Query('time__lte', )] = None,
        time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lte_or_isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocationFeatureList.schema.TimeLocationFeatureList, gsmtasks.paths.u_ltime_location_featuresu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocationFeatureList.schema.TimeLocationFeatureList,
                }),
                gsmtasks.paths.u_ltime_location_featuresu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/time_location_features/', security=[{'tokenAuth': []}])
    async def time_location_features_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
            Body({
                'application/json': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/time_location_features/{id}/', security=[{'tokenAuth': []}])
    async def time_location_features_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/time_location_features/{id}/', security=[{'tokenAuth': []}])
    async def time_location_features_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
            Body({
                'application/json': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/time_location_features/{id}/', security=[{'tokenAuth': []}])
    async def time_location_features_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/time_location_features/{id}/', security=[{'tokenAuth': []}])
    async def time_location_features_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedTimeLocationFeature.schema.PatchedTimeLocationFeature,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedTimeLocationFeature.schema.PatchedTimeLocationFeature,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocationFeature.schema.TimeLocationFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/time_locations/', security=[{'tokenAuth': []}])
    async def time_locations_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        time_q: typing.Annotated[typing.Union[None, datetime.date], Query('time', )] = None,
        time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date', )] = None,
        time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date_or_isnull', )] = None,
        time__gt_q: typing.Annotated[typing.Union[None, str], Query('time__gt', )] = None,
        time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gt_or_isnull', )] = None,
        time__gte_q: typing.Annotated[typing.Union[None, str], Query('time__gte', )] = None,
        time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gte_or_isnull', )] = None,
        time__lt_q: typing.Annotated[typing.Union[None, str], Query('time__lt', )] = None,
        time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lt_or_isnull', )] = None,
        time__lte_q: typing.Annotated[typing.Union[None, str], Query('time__lte', )] = None,
        time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lte_or_isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.TimeLocation.schema.TimeLocation], gsmtasks.paths.u_ltime_locationsu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.TimeLocation.schema.TimeLocation],
                }),
                gsmtasks.paths.u_ltime_locationsu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/time_locations/', security=[{'tokenAuth': []}])
    async def time_locations_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.TimeLocation.schema.TimeLocation,
            Body({
                'application/json': gsmtasks.components.schemas.TimeLocation.schema.TimeLocation,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocation.schema.TimeLocation, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocation.schema.TimeLocation,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/time_locations/{id}/', security=[{'tokenAuth': []}])
    async def time_locations_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TimeLocation.schema.TimeLocation, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TimeLocation.schema.TimeLocation,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/trackers/', security=[{'tokenAuth': []}])
    async def trackers_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Tracker.schema.Tracker], gsmtasks.paths.u_ltrackersu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Tracker.schema.Tracker],
                }),
                gsmtasks.paths.u_ltrackersu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/trackers/', security=[{'tokenAuth': []}])
    async def trackers_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Tracker.schema.Tracker,
            Body({
                'application/json': gsmtasks.components.schemas.Tracker.schema.Tracker,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Tracker.schema.Tracker, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Tracker.schema.Tracker,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/trackers/{id}/', security=[{'tokenAuth': []}])
    async def trackers_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Tracker.schema.Tracker, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Tracker.schema.Tracker,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/trackers/{id}/', security=[{'tokenAuth': []}])
    async def trackers_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Tracker.schema.Tracker,
            Body({
                'application/json': gsmtasks.components.schemas.Tracker.schema.Tracker,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Tracker.schema.Tracker, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Tracker.schema.Tracker,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/trackers/{id}/', security=[{'tokenAuth': []}])
    async def trackers_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedTracker.schema.PatchedTracker,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedTracker.schema.PatchedTracker,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Tracker.schema.Tracker, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Tracker.schema.Tracker,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/trackers/{id}/public/', security=[{'tokenAuth': []}])
    async def trackers_public_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.TrackerPublic.schema.TrackerPublic, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.TrackerPublic.schema.TrackerPublic,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/users/', security=[{'tokenAuth': []}])
    async def users_list(
        self: typing.Self,
        *,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.ReadableUser.schema.ReadableUser], gsmtasks.paths.u_lusersu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.ReadableUser.schema.ReadableUser],
                }),
                gsmtasks.paths.u_lusersu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/users/', security=[{'tokenAuth': []}])
    async def users_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AuthenticatedUserCreate.schema.AuthenticatedUserCreate,
            Body({
                'application/json': gsmtasks.components.schemas.AuthenticatedUserCreate.schema.AuthenticatedUserCreate,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AuthenticatedUserCreate.schema.AuthenticatedUserCreate, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AuthenticatedUserCreate.schema.AuthenticatedUserCreate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/users/{id}/', security=[{'tokenAuth': []}])
    async def users_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.ReadableUser.schema.ReadableUser, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ReadableUser.schema.ReadableUser,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/users/{id}/', security=[{'tokenAuth': []}])
    async def users_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate,
            Body({
                'application/json': gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/users/{id}/', security=[{'tokenAuth': []}])
    async def users_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/users/{id}/', security=[{'tokenAuth': []}])
    async def users_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedAuthenticatedUserUpdate.schema.PatchedAuthenticatedUserUpdate,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedAuthenticatedUserUpdate.schema.PatchedAuthenticatedUserUpdate,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.AuthenticatedUserUpdate.schema.AuthenticatedUserUpdate,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/users/{id}/activate/', security=[{'tokenAuth': []}])
    async def users_activate_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.UserActivation.schema.UserActivation,
            Body({
                'application/json': gsmtasks.components.schemas.UserActivation.schema.UserActivation,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.paths.u_lusersu_lu_1zidu_21u_lactivateu_l.post.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema.schema, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.paths.u_lusersu_lu_1zidu_21u_lactivateu_l.post.responses.u_o00.content.applicationu_ljsonu_xu_Wversionu_z2u_k4u_k42.schema.schema.schema,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/users/{id}/on_duty/', security=[{'tokenAuth': []}])
    async def users_on_duty_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OnDuty.schema.OnDuty, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OnDuty.schema.OnDuty,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/users/{id}/on_duty/', security=[{'tokenAuth': []}])
    async def users_on_duty_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.OnDuty.schema.OnDuty,
            Body({
                'application/json': gsmtasks.components.schemas.OnDuty.schema.OnDuty,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.OnDuty.schema.OnDuty, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.OnDuty.schema.OnDuty,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/users/{id}/on_duty/', security=[{'tokenAuth': []}])
    async def users_on_duty_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/users_on_duty_log/', security=[{'tokenAuth': []}])
    async def users_on_duty_log_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        account_role_q: typing.Annotated[typing.Union[None, str], Query('account_role', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        mode_q: typing.Annotated[typing.Union[None, str], Query('mode', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        status_q: typing.Annotated[typing.Union[None, str], Query('status', )] = None,
        timestamp_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp', )] = None,
        timestamp__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp__date', )] = None,
        timestamp__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp__date_or_isnull', )] = None,
        timestamp__gt_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gt', )] = None,
        timestamp__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gt_or_isnull', )] = None,
        timestamp__gte_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gte', )] = None,
        timestamp__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gte_or_isnull', )] = None,
        timestamp__lt_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lt', )] = None,
        timestamp__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lt_or_isnull', )] = None,
        timestamp__lte_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lte', )] = None,
        timestamp__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.WorkingState.schema.WorkingState], gsmtasks.paths.u_lusers_on_duty_logu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.WorkingState.schema.WorkingState],
                }),
                gsmtasks.paths.u_lusers_on_duty_logu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/users_on_duty_log/', security=[{'tokenAuth': []}])
    async def users_on_duty_log_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.WorkingState.schema.WorkingState,
            Body({
                'application/json': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkingState.schema.WorkingState, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/users_on_duty_log/{id}/', security=[{'tokenAuth': []}])
    async def users_on_duty_log_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkingState.schema.WorkingState, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/webhooks/', security=[{'tokenAuth': []}])
    async def webhooks_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        document_events_q: typing.Annotated[typing.Union[None, str], Query('document_events', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        review_events_q: typing.Annotated[typing.Union[None, str], Query('review_events', )] = None,
        search_q: typing.Annotated[typing.Union[None, str], Query('search', )] = None,
        signature_events_q: typing.Annotated[typing.Union[None, str], Query('signature_events', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        task_events_q: typing.Annotated[typing.Union[None, str], Query('task_events', )] = None,
        version_q: typing.Annotated[typing.Union[None, str], Query('version', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.Webhook.schema.Webhook], gsmtasks.paths.u_lwebhooksu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.Webhook.schema.Webhook],
                }),
                gsmtasks.paths.u_lwebhooksu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/webhooks/', security=[{'tokenAuth': []}])
    async def webhooks_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Webhook.schema.Webhook,
            Body({
                'application/json': gsmtasks.components.schemas.Webhook.schema.Webhook,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/webhooks/{id}/', security=[{'tokenAuth': []}])
    async def webhooks_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @put('/webhooks/{id}/', security=[{'tokenAuth': []}])
    async def webhooks_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.Webhook.schema.Webhook,
            Body({
                'application/json': gsmtasks.components.schemas.Webhook.schema.Webhook,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @delete('/webhooks/{id}/', security=[{'tokenAuth': []}])
    async def webhooks_destroy(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[None, None],
        Responses({
            '204': Response(
                Body({
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @patch('/webhooks/{id}/', security=[{'tokenAuth': []}])
    async def webhooks_partial_update(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.PatchedWebhook.schema.PatchedWebhook,
            Body({
                'application/json': gsmtasks.components.schemas.PatchedWebhook.schema.PatchedWebhook,
            }),
        ],
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/webhooks/{id}/active/', security=[{'tokenAuth': []}])
    async def webhooks_active_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/webhooks/{id}/inactive/', security=[{'tokenAuth': []}])
    async def webhooks_inactive_create(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.Webhook.schema.Webhook, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.Webhook.schema.Webhook,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/worker_features/', security=[{'tokenAuth': []}])
    async def worker_features_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('account', )] = None,
        account__in_q: typing.Annotated[typing.Union[None, list[str]], Query('account__in', style=Form,)] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        state_q: typing.Annotated[typing.Union[None, str], Query('state', )] = None,
        time_q: typing.Annotated[typing.Union[None, datetime.date], Query('time', )] = None,
        time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date', )] = None,
        time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('time__date_or_isnull', )] = None,
        time__gt_q: typing.Annotated[typing.Union[None, str], Query('time__gt', )] = None,
        time__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gt_or_isnull', )] = None,
        time__gte_q: typing.Annotated[typing.Union[None, str], Query('time__gte', )] = None,
        time__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__gte_or_isnull', )] = None,
        time__lt_q: typing.Annotated[typing.Union[None, str], Query('time__lt', )] = None,
        time__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lt_or_isnull', )] = None,
        time__lte_q: typing.Annotated[typing.Union[None, str], Query('time__lte', )] = None,
        time__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('time__lte_or_isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, uuid.UUID], Query('user', )] = None,
        user__in_q: typing.Annotated[typing.Union[None, list[str]], Query('user__in', style=Form,)] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkerFeatureList.schema.WorkerFeatureList, gsmtasks.paths.u_lworker_featuresu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkerFeatureList.schema.WorkerFeatureList,
                }),
                gsmtasks.paths.u_lworker_featuresu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/worker_features/{user_id}/', security=[{'tokenAuth': []}])
    async def worker_features_retrieve(
        self: typing.Self,
        *,
        user_id_p: typing.Annotated[uuid.UUID, Path('user_id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkerFeature.schema.WorkerFeature, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkerFeature.schema.WorkerFeature,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/worker_tracks/', security=[{'tokenAuth': []}])
    async def worker_tracks_list(
        self: typing.Self,
        *,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        end_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time', )] = None,
        end_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date', )] = None,
        end_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('end_time__date_or_isnull', )] = None,
        end_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt', )] = None,
        end_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gt_or_isnull', )] = None,
        end_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte', )] = None,
        end_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__gte_or_isnull', )] = None,
        end_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt', )] = None,
        end_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lt_or_isnull', )] = None,
        end_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte', )] = None,
        end_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('end_time__lte_or_isnull', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        start_time_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time', )] = None,
        start_time__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date', )] = None,
        start_time__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('start_time__date_or_isnull', )] = None,
        start_time__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt', )] = None,
        start_time__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gt_or_isnull', )] = None,
        start_time__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte', )] = None,
        start_time__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__gte_or_isnull', )] = None,
        start_time__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt', )] = None,
        start_time__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lt_or_isnull', )] = None,
        start_time__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte', )] = None,
        start_time__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('start_time__lte_or_isnull', )] = None,
        updated_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at', )] = None,
        updated_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date', )] = None,
        updated_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('updated_at__date_or_isnull', )] = None,
        updated_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt', )] = None,
        updated_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gt_or_isnull', )] = None,
        updated_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte', )] = None,
        updated_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__gte_or_isnull', )] = None,
        updated_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt', )] = None,
        updated_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lt_or_isnull', )] = None,
        updated_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte', )] = None,
        updated_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('updated_at__lte_or_isnull', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkerTrackList.schema.WorkerTrackList, gsmtasks.paths.u_lworker_tracksu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkerTrackList.schema.WorkerTrackList,
                }),
                gsmtasks.paths.u_lworker_tracksu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/working_state/', security=[{'tokenAuth': []}])
    async def working_state_list(
        self: typing.Self,
        *,
        account_q: typing.Annotated[typing.Union[None, str], Query('account', )] = None,
        account_role_q: typing.Annotated[typing.Union[None, str], Query('account_role', )] = None,
        created_at_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at', )] = None,
        created_at__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date', )] = None,
        created_at__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('created_at__date_or_isnull', )] = None,
        created_at__gt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt', )] = None,
        created_at__gt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gt_or_isnull', )] = None,
        created_at__gte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte', )] = None,
        created_at__gte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__gte_or_isnull', )] = None,
        created_at__lt_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt', )] = None,
        created_at__lt_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lt_or_isnull', )] = None,
        created_at__lte_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte', )] = None,
        created_at__lte_or_isnull_q: typing.Annotated[typing.Union[None, datetime.datetime], Query('created_at__lte_or_isnull', )] = None,
        cursor_q: typing.Annotated[typing.Union[None, str], Query('cursor', )] = None,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
        mode_q: typing.Annotated[typing.Union[None, str], Query('mode', )] = None,
        ordering_q: typing.Annotated[typing.Union[None, str], Query('ordering', )] = None,
        page_size_q: typing.Annotated[typing.Union[None, int], Query('page_size', )] = None,
        status_q: typing.Annotated[typing.Union[None, str], Query('status', )] = None,
        timestamp_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp', )] = None,
        timestamp__date_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp__date', )] = None,
        timestamp__date_or_isnull_q: typing.Annotated[typing.Union[None, datetime.date], Query('timestamp__date_or_isnull', )] = None,
        timestamp__gt_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gt', )] = None,
        timestamp__gt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gt_or_isnull', )] = None,
        timestamp__gte_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gte', )] = None,
        timestamp__gte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__gte_or_isnull', )] = None,
        timestamp__lt_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lt', )] = None,
        timestamp__lt_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lt_or_isnull', )] = None,
        timestamp__lte_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lte', )] = None,
        timestamp__lte_or_isnull_q: typing.Annotated[typing.Union[None, str], Query('timestamp__lte_or_isnull', )] = None,
        user_q: typing.Annotated[typing.Union[None, str], Query('user', )] = None,
    ) -> typing.Annotated[
        tuple[list[gsmtasks.components.schemas.WorkingState.schema.WorkingState], gsmtasks.paths.u_lworking_stateu_l.get.responses.u_o00.headers.ResponseMetadata],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': list[gsmtasks.components.schemas.WorkingState.schema.WorkingState],
                }),
                gsmtasks.paths.u_lworking_stateu_l.get.responses.u_o00.headers.ResponseMetadata
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @post('/working_state/', security=[{'tokenAuth': []}])
    async def working_state_create(
        self: typing.Self,
        body: typing.Annotated[
            gsmtasks.components.schemas.WorkingState.schema.WorkingState,
            Body({
                'application/json': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
            }),
        ],
        *,
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkingState.schema.WorkingState, None],
        Responses({
            '201': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass

    @get('/working_state/{id}/', security=[{'tokenAuth': []}])
    async def working_state_retrieve(
        self: typing.Self,
        *,
        id_p: typing.Annotated[uuid.UUID, Path('id', )],
        format_q: typing.Annotated[typing.Union[None, str], Query('format', )] = None,
    ) -> typing.Annotated[
        tuple[gsmtasks.components.schemas.WorkingState.schema.WorkingState, None],
        Responses({
            '200': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.WorkingState.schema.WorkingState,
                }),
            ),
            '400': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.ValidationError.schema.ValidationError,
                }),
            ),
            '4XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
            '5XX': Response(
                Body({
                    'application/json; version=2.4.42': gsmtasks.components.schemas.GSMTasksError.schema.GSMTasksError,
                }),
            ),
        })
    ]:
        pass
