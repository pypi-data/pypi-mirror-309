# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import lapidary.runtime
import pydantic
import typing_extensions as typing
import datetime
import gsmtasks.components.schemas.Location.schema
import uuid


class ContactAddressExport(lapidary.runtime.ModelBase):
    address__location: gsmtasks.components.schemas.Location.schema.Location

    id: typing.Union[None, uuid.UUID] = None

    external_id: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    account__name: typing.Union[None, str] = None

    contact__name: typing.Union[None, str] = None

    contact__company: typing.Union[None, str] = None

    contact__phones: typing.Union[None, list[str]] = None

    contact__emails: typing.Union[None, list[str]] = None

    contact__notes: typing.Union[None, str] = None

    address__raw_address: typing.Union[None, str] = None

    address__formatted_address: typing.Union[None, str] = None

    address__google_place_id: typing.Union[None, str] = None

    address__point_of_interest: typing.Union[None, str] = None

    address__street: typing.Union[None, str] = None

    address__house_number: typing.Union[None, str] = None

    address__apartment_number: typing.Union[None, str] = None

    address__city: typing.Union[None, str] = None

    address__state: typing.Union[None, str] = None

    address__postal_code: typing.Union[None, str] = None

    address__country: typing.Union[None, str] = None

    address__country_code: typing.Union[None, str] = None

    is_orderer: typing.Union[None, bool] = None

    is_receiver: typing.Union[None, bool] = None

    source: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            max_length=100,
        )
    ] = None

    created_at: typing.Union[None, datetime.datetime] = None

    updated_at: typing.Union[None, datetime.datetime] = None

    model_config = pydantic.ConfigDict(
        extra='allow'
    )
