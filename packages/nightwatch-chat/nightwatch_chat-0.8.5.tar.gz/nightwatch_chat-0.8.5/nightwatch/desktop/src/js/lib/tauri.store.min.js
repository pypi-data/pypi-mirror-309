var TauriEvent;function uid(){return window.crypto.getRandomValues(new Uint32Array(1))[0]}function transformCallback(t,a=!1){let e=uid(),n=`_${e}`;return Object.defineProperty(window,n,{value:e=>(a&&Reflect.deleteProperty(window,n),t?.(e)),writable:!1,configurable:!0}),e}async function invoke(t,a={}){return new Promise((e,n)=>{let r=transformCallback(t=>{e(t),Reflect.deleteProperty(window,`_${i}`)},!0),i=transformCallback(t=>{n(t),Reflect.deleteProperty(window,`_${r}`)},!0);window.__TAURI_IPC__({cmd:t,callback:r,error:i,...a})})}async function invokeTauriCommand(t){return invoke("tauri",t)}async function _unlisten(t,a){return invokeTauriCommand({__tauriModule:"Event",message:{cmd:"unlisten",event:t,eventId:a}})}async function listen$1(t,a,e){return invokeTauriCommand({__tauriModule:"Event",message:{cmd:"listen",event:t,windowLabel:a,handler:transformCallback(e)}}).then(a=>async()=>_unlisten(t,a))}async function listen(t,a){return listen$1(t,null,a)}!function(t){t.WINDOW_RESIZED="tauri://resize",t.WINDOW_MOVED="tauri://move",t.WINDOW_CLOSE_REQUESTED="tauri://close-requested",t.WINDOW_CREATED="tauri://window-created",t.WINDOW_DESTROYED="tauri://destroyed",t.WINDOW_FOCUS="tauri://focus",t.WINDOW_BLUR="tauri://blur",t.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",t.WINDOW_THEME_CHANGED="tauri://theme-changed",t.WINDOW_FILE_DROP="tauri://file-drop",t.WINDOW_FILE_DROP_HOVER="tauri://file-drop-hover",t.WINDOW_FILE_DROP_CANCELLED="tauri://file-drop-cancelled",t.MENU="tauri://menu",t.CHECK_UPDATE="tauri://update",t.UPDATE_AVAILABLE="tauri://update-available",t.INSTALL_UPDATE="tauri://update-install",t.STATUS_UPDATE="tauri://update-status",t.DOWNLOAD_PROGRESS="tauri://update-download-progress"}(TauriEvent||(TauriEvent={}));class Store{constructor(t){this.path=t}async set(t,a){return await invoke("plugin:store|set",{path:this.path,key:t,value:a})}async get(t){return await invoke("plugin:store|get",{path:this.path,key:t})}async has(t){return await invoke("plugin:store|has",{path:this.path,key:t})}async delete(t){return await invoke("plugin:store|delete",{path:this.path,key:t})}async clear(){return await invoke("plugin:store|clear",{path:this.path})}async reset(){return await invoke("plugin:store|reset",{path:this.path})}async keys(){return await invoke("plugin:store|keys",{path:this.path})}async values(){return await invoke("plugin:store|values",{path:this.path})}async entries(){return await invoke("plugin:store|entries",{path:this.path})}async length(){return await invoke("plugin:store|length",{path:this.path})}async load(){return await invoke("plugin:store|load",{path:this.path})}async save(){return await invoke("plugin:store|save",{path:this.path})}async onKeyChange(t,a){return await listen("store://change",e=>{e.payload.path===this.path&&e.payload.key===t&&a(e.payload.value)})}async onChange(t){return await listen("store://change",a=>{a.payload.path===this.path&&t(a.payload.key,a.payload.value)})}}