Metadata-Version: 2.3
Name: ufig
Version: 1.0.0a1
Project-URL: Source, https://cosmo-gitlab.phys.ethz.ch/cosmo/ufig
Project-URL: Documentation, https://cosmo-docs.phys.ethz.ch/ufig
Author-email: schmittu@ethz.ch
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.9
Requires-Dist: astropy>=6.0.1
Requires-Dist: cosmic-toolbox>=0.3.1
Requires-Dist: darkskysync>=0.2.0
Requires-Dist: h5py>=3.12.1
Requires-Dist: healpy
Requires-Dist: ivy-wfengine>=0.4.0
Requires-Dist: numba>=0.60.0
Requires-Dist: numpy
Requires-Dist: pdbpp>=0.10.3
Requires-Dist: scikit-learn>=1.5.2
Requires-Dist: scipy
Requires-Dist: setuptools>=75.5.0
Description-Content-Type: text/markdown

# Ultra Fast Image Generator (UFig)

[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/)
[![PyPI pyversions](https://img.shields.io/pypi/pyversions/ufig.svg)](https://pypi.python.org/pypi/ufig/)
[![PyPI version](https://badge.fury.io/py/ufig.svg)](https://badge.fury.io/py/ufig)
[![image](https://img.shields.io/badge/arXiv-1209.1200-B31B1B.svg?logo=arxiv&style=flat)](https://arxiv.org/abs/1209.1200)

[![pipeline](https://gitlab.com/cosmology-ethz/ufig/badges/main/pipeline.svg)](https://gitlab.com/cosmology-ethz/ufig/-/pipelines)
[![coverage](https://gitlab.com/cosmology-ethz/ufig/badges/main/coverage.svg)](https://gitlab.com/cosmology-ethz/ufig)


Simulate realistic astronomical images with high-speed and modular adjustable image properties according to the user.

For the original paper describing this project, see: [UFig Paper](http://arxiv.org/abs/1209.1200).
The first public release of UFig is descibed in these two papers: [Fischbacher et al. (2024)](??) and [Tortorelli et al. (2024)](??).

## Installation

To install the latest release from PyPI, use pip:

```bash
pip install ufig
```

## Features

- Ultra fast speed
- Modular structure that can be easily integrated and expanded
- User interacts with the program through Python scripts
- Structured unit tests for continuous robust development

Note: For not supported features, see the plugins (including the deprecated ones)
in the archive branch (https://cosmo-gitlab.phys.ethz.ch/cosmo/ufig/-/tree/archive).

## Introduction

The **Ultra Fast Image Generator (UFig)** is an image simulation tool that generates simulated astronomical images for scientific usage.

The code is implemented in pure Python and highly optimized in terms of speed.

The output images are useful for developing analysis algorithms and data processing pipelines in the field of astronomy/cosmology.

Conceptually, a typical UFig program involves two things:

1. **Config file:** sets up the workflow by calling a series of plugins.

   The content in each config file includes importing or setting the relevant input parameters and arranging the list of plugins that are being called. The main set of common parameters are listed in the "common" module. For the full list of config files, see below under **Contents**: `ufig Package --> Subpackages --> config Package`.

2. **Plugin:** implement specific jobs.

   The nature of the plugins ranges from mundane data handling (e.g., I/O of data files) to various aspects of physical modeling (e.g., generating the profile of a galaxy). Also, it is possible that the plugins can depend on or call other plugins. There are two large classes of plugins: *galaxyplugin* and *plugin*. The first class of plugins do X, and the second set does Y. An example [here](#) shows how one would construct a new module for UFig. For the full list of plugins, see below under **Contents**: `ufig Package --> Subpackages --> plugins/plugin Package`.


## Credits
This package was developped by the Cosmology group at ETH Zurich and is currently
maintained by Silvan Fischbacher: silvanf@phys.ethz.ch

## Contributions
Contributions are welcome, and they are greatly appreciated! Every
little bit helps, and credit will always be given.
