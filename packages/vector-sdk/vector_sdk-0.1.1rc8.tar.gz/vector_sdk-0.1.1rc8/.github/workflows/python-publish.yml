# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.release.target_commitish }}
        fetch-depth: 1
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install --system build twine
    
    - name: Clean build artifacts
      run: |
        rm -rf dist/
        rm -rf build/
        rm -rf *.egg-info/
    
    - name: Get release type and verify version
      id: version_check
      run: |
        # PACKAGE_VERSION=$(python -c "from configparser import ConfigParser; p = ConfigParser(); p.read('pyproject.toml'); print(p['project']['version'])")
        # RELEASE_VERSION="${{ github.event.release.tag_name }}"
        # RELEASE_VERSION="${RELEASE_VERSION#v}"  # Remove 'v' prefix if present
        
        # echo "Package version: $PACKAGE_VERSION"
        # echo "Release version: $RELEASE_VERSION"
        
        # if [ "$PACKAGE_VERSION" != "$RELEASE_VERSION" ]; then
        #   echo "Error: Package version ($PACKAGE_VERSION) does not match release version ($RELEASE_VERSION)"
        #   exit 1
        # fi
        
        if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
          echo "Release type: pre-release (rc)"
        else
          echo "Release type: full release"
        fi
    
    - name: Build package
      run: python -m build
    
    - name: Verify package
      run: twine check dist/*

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true