[tool.poetry]
name = "querai"
version = "0.1.9"
description = "A middle layer between the applications and the LLMs."
authors = ["KL <kun.lu.brain@gmail.com>"]
license = "BSD"
readme = "README.md"
packages = [{ include = "qagent" }]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.7.3"
tenacity = "^8.3.0"
openai = "^1.35.5"
python-decouple = "^3.8"
metavalidator = "^0.1.3"


[tool.poetry.group.dev.dependencies]
ruff = "^0.4.7"
pytest = "^8.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ruff
# =========

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D",  # pydocstyle
]
ignore = [
    "D100", # missing docstring in public module
    "D101", # missing docstring in class
    "D102", # missing docstring in public method
    "D104", # missing docstring in public package
    "D105", # missing docstring in magic method
    "D107", # missing docstring in __init__
    "C901", # too complex
    "W191", # indentation contains tabs
    "D401", # imperative mood
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
