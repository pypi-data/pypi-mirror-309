Metadata-Version: 2.1
Name: querai
Version: 0.1.9
Summary: A middle layer between the applications and the LLMs.
License: BSD
Author: KL
Author-email: kun.lu.brain@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: metavalidator (>=0.1.3,<0.2.0)
Requires-Dist: openai (>=1.35.5,<2.0.0)
Requires-Dist: pydantic (>=2.7.3,<3.0.0)
Requires-Dist: python-decouple (>=3.8,<4.0)
Requires-Dist: tenacity (>=8.3.0,<9.0.0)
Description-Content-Type: text/markdown

# `qagent` - Query Agent

An abstract layer between applications and genAI.

## Installation and Run

### Setup credentials

* In `.env` file add your own `OPENAI_API_KEY` key

### Run

You need to have `poetry` installed first.

1. `poetry install`

2. `poetry shell`

3. Try one example command below.

## Add your own flow

See the first example

## Example

- Example usage of it in a customized usecase:

```bash
python tests/realstuff/01_dummy_question.py
```

- Example configuration of a prompt flow:

```
cat qagent/prompts/dialogflow/example-plan/text-to-table.json
```

- Run tests to see how it works: See Section `Test` below

## Development

### Test

Unitests

```bash
python -m unittest discover tests -v
```

