"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2021 ONDEWO GmbH

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import ondewo.nlu.context_pb2
import ondewo.nlu.intent_pb2
import ondewo.s2t.speech_to_text_pb2
import ondewo.sip.sip_pb2
import ondewo.t2s.text_to_speech_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CallView:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CallViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CallView.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MINIMUM: _CallView.ValueType  # 0
    """Gives only minimum info about the call"""
    SHALLOW: _CallView.ValueType  # 1
    """Gives further basic info like call name, start_time, end_time, current sip status"""
    FULL: _CallView.ValueType  # 2
    """Gives you the full info with status history and the services statuses"""

class CallView(_CallView, metaclass=_CallViewEnumTypeWrapper):
    """Call view options"""

MINIMUM: CallView.ValueType  # 0
"""Gives only minimum info about the call"""
SHALLOW: CallView.ValueType  # 1
"""Gives further basic info like call name, start_time, end_time, current sip status"""
FULL: CallView.ValueType  # 2
"""Gives you the full info with status history and the services statuses"""
global___CallView = CallView

class _CallStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CallStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CallStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CALL_STATUS_UNSPECIFIED: _CallStatus.ValueType  # 0
    """Unspecified call status"""
    CALL_STATUS_ACTIVE: _CallStatus.ValueType  # 1
    """Call is active"""
    CALL_STATUS_INACTIVE: _CallStatus.ValueType  # 2
    """Call is inactive"""

class CallStatus(_CallStatus, metaclass=_CallStatusEnumTypeWrapper):
    """Call view options"""

CALL_STATUS_UNSPECIFIED: CallStatus.ValueType  # 0
"""Unspecified call status"""
CALL_STATUS_ACTIVE: CallStatus.ValueType  # 1
"""Call is active"""
CALL_STATUS_INACTIVE: CallStatus.ValueType  # 2
"""Call is inactive"""
global___CallStatus = CallStatus

class _CallType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CallTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CallType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BOTH: _CallType.ValueType  # 0
    """Both listener and caller"""
    LISTENER: _CallType.ValueType  # 1
    """Listener"""
    CALLER: _CallType.ValueType  # 2
    """Caller"""
    SCHEDULED_CALLER: _CallType.ValueType  # 3
    """Scheduled Caller"""

class CallType(_CallType, metaclass=_CallTypeEnumTypeWrapper):
    """CallType"""

BOTH: CallType.ValueType  # 0
"""Both listener and caller"""
LISTENER: CallType.ValueType  # 1
"""Listener"""
CALLER: CallType.ValueType  # 2
"""Caller"""
SCHEDULED_CALLER: CallType.ValueType  # 3
"""Scheduled Caller"""
global___CallType = CallType

@typing.final
class BaseServiceConfig(google.protobuf.message.Message):
    """base configuration of services (ondewo-nlu, text-to-speech, speech-to-text, asterisk)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    GRPC_CERT_FIELD_NUMBER: builtins.int
    host: builtins.str
    """service host IP"""
    port: builtins.int
    """service port"""
    grpc_cert: builtins.str
    """Optional: GRPC cert for the given service"""
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        grpc_cert: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["grpc_cert", b"grpc_cert", "host", b"host", "port", b"port"]) -> None: ...

global___BaseServiceConfig = BaseServiceConfig

@typing.final
class Credentials(google.protobuf.message.Message):
    """Credentials"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_NAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    account_name: builtins.str
    """Account name - usually email address"""
    password: builtins.str
    """password of the account"""
    def __init__(
        self,
        *,
        account_name: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_name", b"account_name", "password", b"password"]) -> None: ...

global___Credentials = Credentials

@typing.final
class NluVtsiConfig(google.protobuf.message.Message):
    """NLU Configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NLU_BASE_CONFIG_FIELD_NUMBER: builtins.int
    CREDENTIALS_FIELD_NUMBER: builtins.int
    AUTH_TOKEN_FIELD_NUMBER: builtins.int
    AGENT_NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    INITIAL_INTENT_FIELD_NUMBER: builtins.int
    CONTEXTS_FIELD_NUMBER: builtins.int
    HTTP_BASIC_AUTH_TOKEN_FIELD_NUMBER: builtins.int
    PLATFORM_FIELD_NUMBER: builtins.int
    auth_token: builtins.str
    """Authentication token"""
    agent_name: builtins.str
    """the resource name of the agent. Format: `projects/<uuid>/agent`"""
    language_code: builtins.str
    """language code in a two letter iso code, e.g. de, en, etc."""
    initial_intent: builtins.str
    """name of intent to trigger at the start of a call"""
    http_basic_auth_token: builtins.str
    """http basic auth token"""
    platform: ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType
    """Return the message specified in Intent.Message.Platform platform to the user in the DetectIntentResponse"""
    @property
    def nlu_base_config(self) -> global___BaseServiceConfig:
        """Base config
        Host, Port, and [Optional] GRPC cert
        """

    @property
    def credentials(self) -> global___Credentials:
        """Credentials with classical username and password"""

    @property
    def contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ondewo.nlu.context_pb2.Context]:
        """ondewo-nlu list of contexts"""

    def __init__(
        self,
        *,
        nlu_base_config: global___BaseServiceConfig | None = ...,
        credentials: global___Credentials | None = ...,
        auth_token: builtins.str = ...,
        agent_name: builtins.str = ...,
        language_code: builtins.str = ...,
        initial_intent: builtins.str = ...,
        contexts: collections.abc.Iterable[ondewo.nlu.context_pb2.Context] | None = ...,
        http_basic_auth_token: builtins.str = ...,
        platform: ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_platform", b"_platform", "auth_token", b"auth_token", "authentication", b"authentication", "credentials", b"credentials", "nlu_base_config", b"nlu_base_config", "platform", b"platform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_platform", b"_platform", "agent_name", b"agent_name", "auth_token", b"auth_token", "authentication", b"authentication", "contexts", b"contexts", "credentials", b"credentials", "http_basic_auth_token", b"http_basic_auth_token", "initial_intent", b"initial_intent", "language_code", b"language_code", "nlu_base_config", b"nlu_base_config", "platform", b"platform"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_platform", b"_platform"]) -> typing.Literal["platform"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["authentication", b"authentication"]) -> typing.Literal["credentials", "auth_token"] | None: ...

global___NluVtsiConfig = NluVtsiConfig

@typing.final
class T2sVtsiConfig(google.protobuf.message.Message):
    """Text-2-Speech Configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    T2S_BASE_CONFIG_FIELD_NUMBER: builtins.int
    T2S_REQUEST_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def t2s_base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""

    @property
    def t2s_request_config(self) -> ondewo.t2s.text_to_speech_pb2.RequestConfig:
        """Configuration of Text-2-Speech"""

    def __init__(
        self,
        *,
        t2s_base_config: global___BaseServiceConfig | None = ...,
        t2s_request_config: ondewo.t2s.text_to_speech_pb2.RequestConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["t2s_base_config", b"t2s_base_config", "t2s_request_config", b"t2s_request_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["t2s_base_config", b"t2s_base_config", "t2s_request_config", b"t2s_request_config"]) -> None: ...

global___T2sVtsiConfig = T2sVtsiConfig

@typing.final
class S2tVtsiConfig(google.protobuf.message.Message):
    """Speech-2-Text Configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S2T_BASE_CONFIG_FIELD_NUMBER: builtins.int
    S2T_TRANSCRIBE_REQUEST_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def s2t_base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""

    @property
    def s2t_transcribe_request_config(self) -> ondewo.s2t.speech_to_text_pb2.TranscribeRequestConfig:
        """Configuration of Speech-2-Text"""

    def __init__(
        self,
        *,
        s2t_base_config: global___BaseServiceConfig | None = ...,
        s2t_transcribe_request_config: ondewo.s2t.speech_to_text_pb2.TranscribeRequestConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["s2t_base_config", b"s2t_base_config", "s2t_transcribe_request_config", b"s2t_transcribe_request_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["s2t_base_config", b"s2t_base_config", "s2t_transcribe_request_config", b"s2t_transcribe_request_config"]) -> None: ...

global___S2tVtsiConfig = S2tVtsiConfig

@typing.final
class AsteriskConfig(google.protobuf.message.Message):
    """Asterisk configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ASTERISK_BASE_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def asterisk_base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""

    def __init__(
        self,
        *,
        asterisk_base_config: global___BaseServiceConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["asterisk_base_config", b"asterisk_base_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["asterisk_base_config", b"asterisk_base_config"]) -> None: ...

global___AsteriskConfig = AsteriskConfig

@typing.final
class CommonServicesConfig(google.protobuf.message.Message):
    """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI
    which are common for both listener and caller
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S2T_VTSI_CONFIG_FIELD_NUMBER: builtins.int
    NLU_VTSI_CONFIG_FIELD_NUMBER: builtins.int
    T2S_VTSI_CONFIG_FIELD_NUMBER: builtins.int
    CSI_VTSI_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def s2t_vtsi_config(self) -> global___S2tVtsiConfig:
        """speech-to-text service configuration"""

    @property
    def nlu_vtsi_config(self) -> global___NluVtsiConfig:
        """ondewo-nlu configuration"""

    @property
    def t2s_vtsi_config(self) -> global___T2sVtsiConfig:
        """text-to-speech service configuration"""

    @property
    def csi_vtsi_config(self) -> global___CsiVtsiConfig:
        """CSI service configuration"""

    def __init__(
        self,
        *,
        s2t_vtsi_config: global___S2tVtsiConfig | None = ...,
        nlu_vtsi_config: global___NluVtsiConfig | None = ...,
        t2s_vtsi_config: global___T2sVtsiConfig | None = ...,
        csi_vtsi_config: global___CsiVtsiConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["csi_vtsi_config", b"csi_vtsi_config", "nlu_vtsi_config", b"nlu_vtsi_config", "s2t_vtsi_config", b"s2t_vtsi_config", "t2s_vtsi_config", b"t2s_vtsi_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["csi_vtsi_config", b"csi_vtsi_config", "nlu_vtsi_config", b"nlu_vtsi_config", "s2t_vtsi_config", b"s2t_vtsi_config", "t2s_vtsi_config", b"t2s_vtsi_config"]) -> None: ...

global___CommonServicesConfig = CommonServicesConfig

@typing.final
class SipBaseConfig(google.protobuf.message.Message):
    """The base config is for both the listener and caller .. If you only provide it you will get a listener
    You will need to provide <code>SipCallerConfig</code> for the caller
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SIP_SIM_VERSION_FIELD_NUMBER: builtins.int
    sip_sim_version: builtins.str
    """version of sip to use for call, semantic versioning e.g., 1.0.0, 1.1.0-pre-release, etc."""
    def __init__(
        self,
        *,
        sip_sim_version: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sip_sim_version", b"sip_sim_version"]) -> None: ...

global___SipBaseConfig = SipBaseConfig

@typing.final
class SipCallerConfig(google.protobuf.message.Message):
    """Configuration of the SIP caller"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class SipHeadersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SIP_BASE_CONFIG_FIELD_NUMBER: builtins.int
    CALLEE_ID_FIELD_NUMBER: builtins.int
    SIP_HEADERS_FIELD_NUMBER: builtins.int
    callee_id: builtins.str
    """callee id e.g. phone number to call, +4365012345678 or VOIP phone ondewo0001@ondewo.com, etc."""
    @property
    def sip_base_config(self) -> global___SipBaseConfig:
        """SIP configuration"""

    @property
    def sip_headers(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """dictionary of sip headers that are sent on call"""

    def __init__(
        self,
        *,
        sip_base_config: global___SipBaseConfig | None = ...,
        callee_id: builtins.str = ...,
        sip_headers: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["sip_base_config", b"sip_base_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["callee_id", b"callee_id", "sip_base_config", b"sip_base_config", "sip_headers", b"sip_headers"]) -> None: ...

global___SipCallerConfig = SipCallerConfig

@typing.final
class CsiVtsiConfig(google.protobuf.message.Message):
    """CSI configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    S2T_VTSI_CALLBACKS_FIELD_NUMBER: builtins.int
    NLU_VTSI_CALLBACKS_FIELD_NUMBER: builtins.int
    T2S_VTSI_CALLBACKS_FIELD_NUMBER: builtins.int
    AUDIO_OBJECT_STORE_CONFIG_FIELD_NUMBER: builtins.int
    MESSAGE_BROKER_CONFIG_FIELD_NUMBER: builtins.int
    ACTIVATE_CONTROL_MESSAGES_FIELD_NUMBER: builtins.int
    activate_control_messages: builtins.bool
    """Setting to activate if it is possible to send control messages
    a.) via RabbitMQ to remote control the system
    b.) via embeddings in NLU text responses
    """
    @property
    def s2t_vtsi_callbacks(self) -> global___S2tVtsiCallbacks:
        """Callback for the Speech-2-Text platform"""

    @property
    def nlu_vtsi_callbacks(self) -> global___NluVtsiCallbacks:
        """Callback for the NLU platform"""

    @property
    def t2s_vtsi_callbacks(self) -> global___T2sVtsiCallbacks:
        """Callback for the Text-2-Speech platform"""

    @property
    def audio_object_store_config(self) -> global___AudioObjectStorageConfig:
        """Configuration of the Minio Audio Object Store"""

    @property
    def message_broker_config(self) -> global___MessageBrokerConfig:
        """Configuration of the RabbitMQ Message Broker"""

    def __init__(
        self,
        *,
        s2t_vtsi_callbacks: global___S2tVtsiCallbacks | None = ...,
        nlu_vtsi_callbacks: global___NluVtsiCallbacks | None = ...,
        t2s_vtsi_callbacks: global___T2sVtsiCallbacks | None = ...,
        audio_object_store_config: global___AudioObjectStorageConfig | None = ...,
        message_broker_config: global___MessageBrokerConfig | None = ...,
        activate_control_messages: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["audio_object_store_config", b"audio_object_store_config", "message_broker_config", b"message_broker_config", "nlu_vtsi_callbacks", b"nlu_vtsi_callbacks", "s2t_vtsi_callbacks", b"s2t_vtsi_callbacks", "t2s_vtsi_callbacks", b"t2s_vtsi_callbacks"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["activate_control_messages", b"activate_control_messages", "audio_object_store_config", b"audio_object_store_config", "message_broker_config", b"message_broker_config", "nlu_vtsi_callbacks", b"nlu_vtsi_callbacks", "s2t_vtsi_callbacks", b"s2t_vtsi_callbacks", "t2s_vtsi_callbacks", b"t2s_vtsi_callbacks"]) -> None: ...

global___CsiVtsiConfig = CsiVtsiConfig

@typing.final
class AudioObjectStorageConfig(google.protobuf.message.Message):
    """Minio Audio Object Store"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVATE_AUDIO_OBJECT_STORAGE_FIELD_NUMBER: builtins.int
    AUDIO_OBJECT_STORAGE_SERVICES_ACTIVATION_CONFIG_FIELD_NUMBER: builtins.int
    activate_audio_object_storage: builtins.bool
    """Audio storage should be activated or not"""
    @property
    def audio_object_storage_services_activation_config(self) -> global___AudioObjectStorageServicesActivationConfig:
        """Configuration of the Minio Audio Object Store"""

    def __init__(
        self,
        *,
        activate_audio_object_storage: builtins.bool = ...,
        audio_object_storage_services_activation_config: global___AudioObjectStorageServicesActivationConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["audio_object_storage_services_activation_config", b"audio_object_storage_services_activation_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["activate_audio_object_storage", b"activate_audio_object_storage", "audio_object_storage_services_activation_config", b"audio_object_storage_services_activation_config"]) -> None: ...

global___AudioObjectStorageConfig = AudioObjectStorageConfig

@typing.final
class AudioObjectStorageServicesActivationConfig(google.protobuf.message.Message):
    """Configuration of the Minio Audio Object Store"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVATE_S2T_FIELD_NUMBER: builtins.int
    ACTIVATE_T2S_FIELD_NUMBER: builtins.int
    activate_s2t: builtins.bool
    """Should audio object store save audio sent to the Speech-2-Text platform"""
    activate_t2s: builtins.bool
    """Should audio object store save audio generated from the Text-2-Speech platform"""
    def __init__(
        self,
        *,
        activate_s2t: builtins.bool = ...,
        activate_t2s: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["activate_s2t", b"activate_s2t", "activate_t2s", b"activate_t2s"]) -> None: ...

global___AudioObjectStorageServicesActivationConfig = AudioObjectStorageServicesActivationConfig

@typing.final
class MessageBrokerConfig(google.protobuf.message.Message):
    """Configuration of the RabbitMQ Message Broker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVATE_MESSAGE_BROKER_FIELD_NUMBER: builtins.int
    MESSAGE_BROKER_SERVICES_ACTIVATION_CONFIG_FIELD_NUMBER: builtins.int
    RABBIT_MQ_CONFIG_FIELD_NUMBER: builtins.int
    activate_message_broker: builtins.bool
    """Should the broker be activated or not"""
    @property
    def message_broker_services_activation_config(self) -> global___MessageBrokerServicesActivationConfig:
        """Configuration of the RabbitMQ Message Broker"""

    @property
    def rabbit_mq_config(self) -> global___RabbitMqConfig: ...
    def __init__(
        self,
        *,
        activate_message_broker: builtins.bool = ...,
        message_broker_services_activation_config: global___MessageBrokerServicesActivationConfig | None = ...,
        rabbit_mq_config: global___RabbitMqConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["message_broker_config", b"message_broker_config", "message_broker_services_activation_config", b"message_broker_services_activation_config", "rabbit_mq_config", b"rabbit_mq_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["activate_message_broker", b"activate_message_broker", "message_broker_config", b"message_broker_config", "message_broker_services_activation_config", b"message_broker_services_activation_config", "rabbit_mq_config", b"rabbit_mq_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["message_broker_config", b"message_broker_config"]) -> typing.Literal["rabbit_mq_config"] | None: ...

global___MessageBrokerConfig = MessageBrokerConfig

@typing.final
class MessageBrokerServicesActivationConfig(google.protobuf.message.Message):
    """Configuration of the RabbitMQ Message Broker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTIVATE_S2T_FIELD_NUMBER: builtins.int
    ACTIVATE_NLU_FIELD_NUMBER: builtins.int
    ACTIVATE_T2S_FIELD_NUMBER: builtins.int
    ACTIVATE_SIP_FIELD_NUMBER: builtins.int
    activate_s2t: builtins.bool
    """should RabbitMQ Message Broker be activated for Speech-2-Text platform"""
    activate_nlu: builtins.bool
    """should RabbitMQ Message Broker be activated for NLU platform"""
    activate_t2s: builtins.bool
    """should RabbitMQ Message Broker be activated for Text-2-Speech platform"""
    activate_sip: builtins.bool
    """should RabbitMQ Message Broker be activated for SIP platform"""
    def __init__(
        self,
        *,
        activate_s2t: builtins.bool = ...,
        activate_nlu: builtins.bool = ...,
        activate_t2s: builtins.bool = ...,
        activate_sip: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["activate_nlu", b"activate_nlu", "activate_s2t", b"activate_s2t", "activate_sip", b"activate_sip", "activate_t2s", b"activate_t2s"]) -> None: ...

global___MessageBrokerServicesActivationConfig = MessageBrokerServicesActivationConfig

@typing.final
class RabbitMqConfig(google.protobuf.message.Message):
    """Configuration of the RabbitMQ Message Broker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_2_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    host: builtins.str
    """host where the rabbit mq server runs"""
    port: builtins.int
    """port where the rabbit mq server runs"""
    port_2: builtins.int
    """port where the rabbit mq server runs"""
    user: builtins.str
    """user of server"""
    password: builtins.str
    """password of server"""
    def __init__(
        self,
        *,
        host: builtins.str = ...,
        port: builtins.int = ...,
        port_2: builtins.int = ...,
        user: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["host", b"host", "password", b"password", "port", b"port", "port_2", b"port_2", "user", b"user"]) -> None: ...

global___RabbitMqConfig = RabbitMqConfig

@typing.final
class S2tVtsiCallbacks(google.protobuf.message.Message):
    """Callback for the Speech-2-Text platform"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRE_S2T_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_S2T_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_s2t_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed before the Speech-2-Text will be called"""

    @property
    def post_s2t_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed after the Speech-2-Text has been called"""

    def __init__(
        self,
        *,
        pre_s2t_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
        post_s2t_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["post_s2t_callbacks", b"post_s2t_callbacks", "pre_s2t_callbacks", b"pre_s2t_callbacks"]) -> None: ...

global___S2tVtsiCallbacks = S2tVtsiCallbacks

@typing.final
class NluVtsiCallbacks(google.protobuf.message.Message):
    """Callback for the NLU platform"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRE_NLU_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_NLU_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_nlu_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed before the NLU will be called"""

    @property
    def post_nlu_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed after the NLU has been called"""

    def __init__(
        self,
        *,
        pre_nlu_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
        post_nlu_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["post_nlu_callbacks", b"post_nlu_callbacks", "pre_nlu_callbacks", b"pre_nlu_callbacks"]) -> None: ...

global___NluVtsiCallbacks = NluVtsiCallbacks

@typing.final
class T2sVtsiCallbacks(google.protobuf.message.Message):
    """Callback for the Text-2-Speech platform"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRE_T2S_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_T2S_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_t2s_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed before the Text-2-Speech will be called"""

    @property
    def post_t2s_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Callback executed after the Text-2-Speech has been called"""

    def __init__(
        self,
        *,
        pre_t2s_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
        post_t2s_callbacks: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["post_t2s_callbacks", b"post_t2s_callbacks", "pre_t2s_callbacks", b"pre_t2s_callbacks"]) -> None: ...

global___T2sVtsiCallbacks = T2sVtsiCallbacks

@typing.final
class Listener(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    SIP_BASE_CONFIG_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    name: builtins.str
    """VTSI project name with which to perform the call of the form
    <code>projects/<project_uuid>/listeners/<listener_uuid></code>
    """
    call_name: builtins.str
    """The call name that was assigned to the call
    <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    @property
    def sip_base_config(self) -> global___SipBaseConfig:
        """SIP service configuration"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        call_name: builtins.str = ...,
        sip_base_config: global___SipBaseConfig | None = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_base_config", b"sip_base_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "common_services_config", b"common_services_config", "name", b"name", "sip_base_config", b"sip_base_config"]) -> None: ...

global___Listener = Listener

@typing.final
class Caller(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    SIP_CALLER_CONFIG_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Caller name with which to perform the call of the form
    <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>
    """
    call_name: builtins.str
    """The call name that was assigned to the call
    <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    @property
    def sip_caller_config(self) -> global___SipCallerConfig:
        """SIP service configuration"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        call_name: builtins.str = ...,
        sip_caller_config: global___SipCallerConfig | None = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_caller_config", b"sip_caller_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "common_services_config", b"common_services_config", "name", b"name", "sip_caller_config", b"sip_caller_config"]) -> None: ...

global___Caller = Caller

@typing.final
class StartListenerRequest(google.protobuf.message.Message):
    """request for starting a listener"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    SIP_BASE_CONFIG_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def sip_base_config(self) -> global___SipBaseConfig:
        """SIP service configuration"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        sip_base_config: global___SipBaseConfig | None = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_base_config", b"sip_base_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_base_config", b"sip_base_config", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartListenerRequest = StartListenerRequest

@typing.final
class StartListenerResponse(google.protobuf.message.Message):
    """Response to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    LISTENER_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """error message if you have any so if it's unhealthy"""
    @property
    def listener(self) -> global___Listener: ...
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        listener: global___Listener | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["listener", b"listener"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "listener", b"listener", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartListenerResponse = StartListenerResponse

@typing.final
class StartListenersRequest(google.protobuf.message.Message):
    """Request to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    LISTENER_REQUESTS_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def listener_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartListenerRequest]:
        """Listeners that should be started"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        listener_requests: collections.abc.Iterable[global___StartListenerRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["listener_requests", b"listener_requests", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartListenersRequest = StartListenersRequest

@typing.final
class StartListenersResponse(google.protobuf.message.Message):
    """Response to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    LISTENER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """overall error message if you have any so if it's unhealthy"""
    @property
    def listener_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartListenerResponse]:
        """The call ids that were assigned to each listener"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        listener_responses: collections.abc.Iterable[global___StartListenerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "listener_responses", b"listener_responses", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartListenersResponse = StartListenersResponse

@typing.final
class StartCallerRequest(google.protobuf.message.Message):
    """request for starting a caller"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    SIP_CALLER_CONFIG_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def sip_caller_config(self) -> global___SipCallerConfig:
        """SIP service configuration"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        sip_caller_config: global___SipCallerConfig | None = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_caller_config", b"sip_caller_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "sip_caller_config", b"sip_caller_config", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartCallerRequest = StartCallerRequest

@typing.final
class StartCallerResponse(google.protobuf.message.Message):
    """Response to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALLER_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """error message if you have any so if it's unhealthy"""
    @property
    def caller(self) -> global___Caller: ...
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        caller: global___Caller | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["caller", b"caller"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["caller", b"caller", "error_message", b"error_message", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartCallerResponse = StartCallerResponse

@typing.final
class StartCallersRequest(google.protobuf.message.Message):
    """Request to start multiple callers"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALLER_REQUESTS_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def caller_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartCallerRequest]:
        """Callers that should be started"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        caller_requests: collections.abc.Iterable[global___StartCallerRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["caller_requests", b"caller_requests", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartCallersRequest = StartCallersRequest

@typing.final
class StartCallersResponse(google.protobuf.message.Message):
    """Response to the start caller request"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALLER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """overall error message if you have any so if it's unhealthy"""
    @property
    def caller_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartCallerResponse]:
        """The call ids that were assigned to each listener"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        caller_responses: collections.abc.Iterable[global___StartCallerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["caller_responses", b"caller_responses", "error_message", b"error_message", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartCallersResponse = StartCallersResponse

@typing.final
class ListCallersRequest(google.protobuf.message.Message):
    """Represents a request to list callers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name for which to perform the call.
    The format is: "projects/<project_uuid>/project".
    """
    page_token: builtins.str
    """Optional. The next_page_token value returned from a previous list request.
    Example: "current_index-1--page_size-20"
    """
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        page_token: builtins.str | None = ...,
        call_view: global___CallView.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_view", b"_call_view", "_page_token", b"_page_token", "call_view", b"call_view", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_view", b"_call_view", "_page_token", b"_page_token", "call_view", b"call_view", "page_token", b"page_token", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page_token", b"_page_token"]) -> typing.Literal["page_token"] | None: ...

global___ListCallersRequest = ListCallersRequest

@typing.final
class ListCallersResponse(google.protobuf.message.Message):
    """Represents the response for listing callers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALLERS_FIELD_NUMBER: builtins.int
    @property
    def callers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Caller]:
        """The list of callers."""

    def __init__(
        self,
        *,
        callers: collections.abc.Iterable[global___Caller] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["callers", b"callers"]) -> None: ...

global___ListCallersResponse = ListCallersResponse

@typing.final
class GetCallerRequest(google.protobuf.message.Message):
    """Represents a request to get a specific caller."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    name: builtins.str
    """The name of caller to retrieve."""
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        name: builtins.str = ...,
        call_view: global___CallView.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_view", b"call_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_view", b"call_view", "name", b"name", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...

global___GetCallerRequest = GetCallerRequest

@typing.final
class ListListenersRequest(google.protobuf.message.Message):
    """Represents a request to list listeners."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name for which to perform the call.
    The format is: "projects/<project_uuid>/project".
    """
    page_token: builtins.str
    """Optional. The next_page_token value returned from a previous list request.
    Example: "current_index-1--page_size-20"
    """
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        page_token: builtins.str | None = ...,
        call_view: global___CallView.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_view", b"_call_view", "_page_token", b"_page_token", "call_view", b"call_view", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_view", b"_call_view", "_page_token", b"_page_token", "call_view", b"call_view", "page_token", b"page_token", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page_token", b"_page_token"]) -> typing.Literal["page_token"] | None: ...

global___ListListenersRequest = ListListenersRequest

@typing.final
class ListListenersResponse(google.protobuf.message.Message):
    """Represents the response for listing listeners."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LISTENERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token to retrieve the next page of results.
    This field is a string that holds a token for fetching the next page of results.
    If there are no more results in the list, this field will be empty.
    """
    @property
    def listeners(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Listener]:
        """The list of listeners."""

    def __init__(
        self,
        *,
        listeners: collections.abc.Iterable[global___Listener] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["listeners", b"listeners", "next_page_token", b"next_page_token"]) -> None: ...

global___ListListenersResponse = ListListenersResponse

@typing.final
class GetListenerRequest(google.protobuf.message.Message):
    """Represents a request to get a specific listener."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    name: builtins.str
    """The name of listener to retrieve."""
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        name: builtins.str = ...,
        call_view: global___CallView.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_view", b"call_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_view", b"call_view", "name", b"name", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...

global___GetListenerRequest = GetListenerRequest

@typing.final
class StopListenerRequest(google.protobuf.message.Message):
    """Represents a request to stop a specific listener."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the listener to stop in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___StopListenerRequest = StopListenerRequest

@typing.final
class StopListenerResponse(google.protobuf.message.Message):
    """Represents a request to stop a specific listener."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the stop listener in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""
    error_message: builtins.str
    """error message if there are any."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "name", b"name"]) -> None: ...

global___StopListenerResponse = StopListenerResponse

@typing.final
class StopListenersRequest(google.protobuf.message.Message):
    """Represents a request to stop multiple listeners."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The names of the listeners to stop in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""

    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["names", b"names"]) -> None: ...

global___StopListenersRequest = StopListenersRequest

@typing.final
class StopListenersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STOP_LISTENER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    error_message: builtins.str
    """error message if there are any."""
    @property
    def stop_listener_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StopListenerResponse]:
        """responses to stop listeners"""

    def __init__(
        self,
        *,
        stop_listener_responses: collections.abc.Iterable[global___StopListenerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "stop_listener_responses", b"stop_listener_responses"]) -> None: ...

global___StopListenersResponse = StopListenersResponse

@typing.final
class StopCallerRequest(google.protobuf.message.Message):
    """Represents a request to stop a specific caller."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the caller to stop in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___StopCallerRequest = StopCallerRequest

@typing.final
class StopCallerResponse(google.protobuf.message.Message):
    """Represents a request to stop a specific caller."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the stop caller in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""
    error_message: builtins.str
    """error message if there are any."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "name", b"name"]) -> None: ...

global___StopCallerResponse = StopCallerResponse

@typing.final
class StopCallersRequest(google.protobuf.message.Message):
    """Represents a request to stop multiple callers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The names of the callers to stop in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""

    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["names", b"names"]) -> None: ...

global___StopCallersRequest = StopCallersRequest

@typing.final
class StopCallersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STOP_CALLER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    error_message: builtins.str
    """error message if there are any."""
    @property
    def stop_caller_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StopCallerResponse]:
        """responses to stop callers"""

    def __init__(
        self,
        *,
        stop_caller_responses: collections.abc.Iterable[global___StopCallerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "stop_caller_responses", b"stop_caller_responses"]) -> None: ...

global___StopCallersResponse = StopCallersResponse

@typing.final
class DeleteListenerRequest(google.protobuf.message.Message):
    """Represents a request to delete a specific listener."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the listener to delete in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DeleteListenerRequest = DeleteListenerRequest

@typing.final
class DeleteListenerResponse(google.protobuf.message.Message):
    """Represents a request to delete a specific listener."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the deleted listener in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""
    error_message: builtins.str
    """error message if there are any."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "name", b"name"]) -> None: ...

global___DeleteListenerResponse = DeleteListenerResponse

@typing.final
class DeleteListenersRequest(google.protobuf.message.Message):
    """Represents a request to delete multiple listeners."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The names of the listeners to delete in the form <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;</code></pre>"""

    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["names", b"names"]) -> None: ...

global___DeleteListenersRequest = DeleteListenersRequest

@typing.final
class DeleteListenersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DELETE_LISTENER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    error_message: builtins.str
    """error message if there are any."""
    @property
    def delete_listener_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeleteListenerResponse]:
        """responses to delete listeners"""

    def __init__(
        self,
        *,
        delete_listener_responses: collections.abc.Iterable[global___DeleteListenerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["delete_listener_responses", b"delete_listener_responses", "error_message", b"error_message"]) -> None: ...

global___DeleteListenersResponse = DeleteListenersResponse

@typing.final
class DeleteCallerRequest(google.protobuf.message.Message):
    """Represents a request to delete a specific caller."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the caller to delete in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name"]) -> None: ...

global___DeleteCallerRequest = DeleteCallerRequest

@typing.final
class DeleteCallerResponse(google.protobuf.message.Message):
    """Represents a request to delete a specific caller."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the deleted caller in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""
    error_message: builtins.str
    """error message if there are any."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "name", b"name"]) -> None: ...

global___DeleteCallerResponse = DeleteCallerResponse

@typing.final
class DeleteCallersRequest(google.protobuf.message.Message):
    """Represents a request to delete multiple callers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The name of the caller to delete in the form <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;</code></pre>"""

    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["names", b"names"]) -> None: ...

global___DeleteCallersRequest = DeleteCallersRequest

@typing.final
class DeleteCallersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DELETE_CALLER_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    error_message: builtins.str
    """error message if there are any."""
    @property
    def delete_caller_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeleteCallerResponse]:
        """responses to delete callers"""

    def __init__(
        self,
        *,
        delete_caller_responses: collections.abc.Iterable[global___DeleteCallerResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["delete_caller_responses", b"delete_caller_responses", "error_message", b"error_message"]) -> None: ...

global___DeleteCallersResponse = DeleteCallersResponse

@typing.final
class StartScheduledCallerRequest(google.protobuf.message.Message):
    """request for starting a scheduled call"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def request(self) -> global___StartCallerRequest:
        """Normal start caller request"""

    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the call is scheduled
        TODO to be refactored with a more complex scheduling object
        """

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        request: global___StartCallerRequest | None = ...,
        scheduled_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["request", b"request", "scheduled_time", b"scheduled_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["request", b"request", "scheduled_time", b"scheduled_time", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartScheduledCallerRequest = StartScheduledCallerRequest

@typing.final
class StartScheduledCallersRequest(google.protobuf.message.Message):
    """Request to start scheduled callers"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    SCHEDULED_CALLER_REQUESTS_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def scheduled_caller_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartScheduledCallerRequest]:
        """requests to start scheduled callers"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        scheduled_caller_requests: collections.abc.Iterable[global___StartScheduledCallerRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["scheduled_caller_requests", b"scheduled_caller_requests", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartScheduledCallersRequest = StartScheduledCallersRequest

@typing.final
class StartScheduledCallersResponse(google.protobuf.message.Message):
    """Response to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    SCHEDULED_CALLER_RESPONSES_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def scheduled_caller_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartScheduledCallerResponse]:
        """The call ids that were assigned to each listener"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        scheduled_caller_responses: collections.abc.Iterable[global___StartScheduledCallerResponse] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["scheduled_caller_responses", b"scheduled_caller_responses", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartScheduledCallersResponse = StartScheduledCallersResponse

@typing.final
class StartScheduledCallerResponse(google.protobuf.message.Message):
    """Response to start multiple listeners"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    SCHEDULED_CALLER_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """error message if you have any so if it's unhealthy"""
    @property
    def scheduled_caller(self) -> global___ScheduledCaller: ...
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        scheduled_caller: global___ScheduledCaller | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["scheduled_caller", b"scheduled_caller"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "scheduled_caller", b"scheduled_caller", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StartScheduledCallerResponse = StartScheduledCallerResponse

@typing.final
class ScheduledCaller(google.protobuf.message.Message):
    """ScheduledCaller message - a Caller with a schedule when to start calling"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    SIP_CONFIG_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    SCHEDULED_TIME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Resource name of the scheduled caller
    <pre><code>projects/&lt;project_uuid&gt;/scheduled_callers/&lt;scheduled_caller_uuid&gt;</code></pre>
    """
    call_name: builtins.str
    """The asterisk sip call name that was assigned to the call
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    @property
    def sip_config(self) -> global___SipBaseConfig:
        """SIP service configuration"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Service Configs of Speech-2-Text, NLU, Text-2-Speech and CSI"""

    @property
    def scheduled_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the call is scheduled
        TODO to be refactored with a more complex scheduling object
        """

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        call_name: builtins.str = ...,
        sip_config: global___SipBaseConfig | None = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
        scheduled_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["common_services_config", b"common_services_config", "scheduled_time", b"scheduled_time", "sip_config", b"sip_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "common_services_config", b"common_services_config", "name", b"name", "scheduled_time", b"scheduled_time", "sip_config", b"sip_config"]) -> None: ...

global___ScheduledCaller = ScheduledCaller

@typing.final
class StopCallRequest(google.protobuf.message.Message):
    """Request to stop/kill a ondewo-sip listener or caller instance for a specific vtsi-project."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project parent with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_name: builtins.str
    """call name to stop
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StopCallRequest = StopCallRequest

@typing.final
class StopCallResponse(google.protobuf.message.Message):
    """Response to stop/kill a ondewo-sip listener or caller instance for a specific vtsi-project."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to stop the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_name: builtins.str
    """call name to stop
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    error_message: builtins.str
    """error messages if you have any so if it's unhealthy"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_name: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "error_message", b"error_message", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StopCallResponse = StopCallResponse

@typing.final
class StopCallsRequest(google.protobuf.message.Message):
    """Request to stop/kill specific ondewo-sip listeners or callers instance for a specific vtsi-project."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAMES_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def call_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """call names to stop
        For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
        For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
        """

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["call_names", b"call_names", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StopCallsRequest = StopCallsRequest

@typing.final
class StopCallsResponse(google.protobuf.message.Message):
    """Response to stop/kill a ondewo-sip listener or caller instance for a specific vtsi-project."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STOP_CALL_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    error_message: builtins.str
    """overall error message if you have any so if it's unhealthy"""
    @property
    def stop_call_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StopCallResponse]:
        """responses to stop/kill a ondewo-sip listener or caller instance for a specific vtsi-project."""

    def __init__(
        self,
        *,
        stop_call_responses: collections.abc.Iterable[global___StopCallResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "stop_call_responses", b"stop_call_responses"]) -> None: ...

global___StopCallsResponse = StopCallsResponse

@typing.final
class StopAllCallsRequest(google.protobuf.message.Message):
    """Request to stop all calls of a VTSI project, so all listeners and callers"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___StopAllCallsRequest = StopAllCallsRequest

@typing.final
class TransferCallRequest(google.protobuf.message.Message):
    """Request to transfer calls"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    TRANSFER_ID_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_name: builtins.str
    """call name to transfer
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    transfer_id: builtins.str
    """transfer_id to transfer the call to, so the number or voip number you want to be transferred too"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_name: builtins.str = ...,
        transfer_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "transfer_id", b"transfer_id", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___TransferCallRequest = TransferCallRequest

@typing.final
class TransferCallResponse(google.protobuf.message.Message):
    """Response to transfer a call to a phone number or voip number"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    TRANSFER_ID_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_name: builtins.str
    """call name to transfer
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    transfer_id: builtins.str
    """transfer id to transfer the calls to, so the phone number or voip number you want to be transferred too"""
    error_message: builtins.str
    """error message if you have any so if it's unhealthy"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_name: builtins.str = ...,
        transfer_id: builtins.str = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["call_name", b"call_name", "error_message", b"error_message", "transfer_id", b"transfer_id", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___TransferCallResponse = TransferCallResponse

@typing.final
class TransferCallsRequest(google.protobuf.message.Message):
    """Request to transfer multiple calls"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    TRANSFER_CALL_REQUESTS_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    @property
    def transfer_call_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TransferCallRequest]:
        """Responses to transfer multiple calls to a phone number or voip number"""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        transfer_call_requests: collections.abc.Iterable[global___TransferCallRequest] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["transfer_call_requests", b"transfer_call_requests", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___TransferCallsRequest = TransferCallsRequest

@typing.final
class TransferCallsResponse(google.protobuf.message.Message):
    """Response to transfer a call to a phone number or voip number"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    TRANSFER_CALL_RESPONSES_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    error_message: builtins.str
    """overall error message if you have any so if it's unhealthy"""
    @property
    def transfer_call_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TransferCallResponse]: ...
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        transfer_call_responses: collections.abc.Iterable[global___TransferCallResponse] | None = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "transfer_call_responses", b"transfer_call_responses", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...

global___TransferCallsResponse = TransferCallsResponse

@typing.final
class GetCallRequest(google.protobuf.message.Message):
    """request to get a call instance's call logs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_NAME_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_name: builtins.str
    """call name
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full .. see above for more info"""
    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_name: builtins.str = ...,
        call_view: global___CallView.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_view", b"call_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_view", b"_call_view", "call_name", b"call_name", "call_view", b"call_view", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...

global___GetCallRequest = GetCallRequest

@typing.final
class Call(google.protobuf.message.Message):
    """Call"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SIP_ACCOUNT_FIELD_NUMBER: builtins.int
    CONTAINER_NAME_FIELD_NUMBER: builtins.int
    CALL_TYPE_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    SIP_STATUS_TYPE_FIELD_NUMBER: builtins.int
    SIP_STATUS_FIELD_NUMBER: builtins.int
    SIP_STATUS_HISTORY_FIELD_NUMBER: builtins.int
    SERVICES_STATUSES_FIELD_NUMBER: builtins.int
    ACTIVE_FIELD_NUMBER: builtins.int
    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    COMMON_SERVICES_CONFIG_FIELD_NUMBER: builtins.int
    SIP_PORT_FIELD_NUMBER: builtins.int
    CSI_PORT_FIELD_NUMBER: builtins.int
    NLU_SESSION_NAME_FIELD_NUMBER: builtins.int
    PLATFORMS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """call name
    For listener this is <pre><code>projects/&lt;project_uuid&gt;/listeners/&lt;listener_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    For callers this is <pre><code>projects/&lt;project_uuid&gt;/callers/&lt;caller_uuid&gt;/calls/&lt;call_uuid&gt;</code></pre>
    """
    sip_account: builtins.str
    """sip account used"""
    container_name: builtins.str
    """container name which you get from docker ps"""
    call_type: global___CallType.ValueType
    """Listener or caller enum .. if not specified"""
    phone_number: builtins.str
    """callee voip id or callee phone number"""
    sip_status_type: ondewo.sip.sip_pb2.SipStatus.StatusType.ValueType
    """current sip status type"""
    active: builtins.bool
    """Is a call active or not"""
    vtsi_project_name: builtins.str
    """VTSI project name which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    sip_port: builtins.int
    """SIP port of the call"""
    csi_port: builtins.int
    """CSI port of the call"""
    nlu_session_name: builtins.str
    """NLU session name"""
    platforms: ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType
    """Messages for each of the Intent.Message.Platform were sent to the user"""
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """start time of log"""

    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """end time of log"""

    @property
    def sip_status(self) -> ondewo.sip.sip_pb2.SipStatus:
        """current sip status"""

    @property
    def sip_status_history(self) -> ondewo.sip.sip_pb2.SipStatusHistoryResponse:
        """sip status history"""

    @property
    def services_statuses(self) -> global___AllServicesStatuses:
        """All container health statuses"""

    @property
    def common_services_config(self) -> global___CommonServicesConfig:
        """Detailed configuration of the services used for the call such as S2T, T2S, NLU, SIP and CSI"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        sip_account: builtins.str = ...,
        container_name: builtins.str = ...,
        call_type: global___CallType.ValueType = ...,
        phone_number: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        sip_status_type: ondewo.sip.sip_pb2.SipStatus.StatusType.ValueType = ...,
        sip_status: ondewo.sip.sip_pb2.SipStatus | None = ...,
        sip_status_history: ondewo.sip.sip_pb2.SipStatusHistoryResponse | None = ...,
        services_statuses: global___AllServicesStatuses | None = ...,
        active: builtins.bool = ...,
        vtsi_project_name: builtins.str = ...,
        common_services_config: global___CommonServicesConfig | None = ...,
        sip_port: builtins.int | None = ...,
        csi_port: builtins.int | None = ...,
        nlu_session_name: builtins.str | None = ...,
        platforms: ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_common_services_config", b"_common_services_config", "_csi_port", b"_csi_port", "_nlu_session_name", b"_nlu_session_name", "_platforms", b"_platforms", "_services_statuses", b"_services_statuses", "_sip_port", b"_sip_port", "_sip_status", b"_sip_status", "_sip_status_history", b"_sip_status_history", "common_services_config", b"common_services_config", "csi_port", b"csi_port", "end_time", b"end_time", "nlu_session_name", b"nlu_session_name", "platforms", b"platforms", "services_statuses", b"services_statuses", "sip_port", b"sip_port", "sip_status", b"sip_status", "sip_status_history", b"sip_status_history", "start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_common_services_config", b"_common_services_config", "_csi_port", b"_csi_port", "_nlu_session_name", b"_nlu_session_name", "_platforms", b"_platforms", "_services_statuses", b"_services_statuses", "_sip_port", b"_sip_port", "_sip_status", b"_sip_status", "_sip_status_history", b"_sip_status_history", "active", b"active", "call_type", b"call_type", "common_services_config", b"common_services_config", "container_name", b"container_name", "csi_port", b"csi_port", "end_time", b"end_time", "name", b"name", "nlu_session_name", b"nlu_session_name", "phone_number", b"phone_number", "platforms", b"platforms", "services_statuses", b"services_statuses", "sip_account", b"sip_account", "sip_port", b"sip_port", "sip_status", b"sip_status", "sip_status_history", b"sip_status_history", "sip_status_type", b"sip_status_type", "start_time", b"start_time", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_common_services_config", b"_common_services_config"]) -> typing.Literal["common_services_config"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_csi_port", b"_csi_port"]) -> typing.Literal["csi_port"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_nlu_session_name", b"_nlu_session_name"]) -> typing.Literal["nlu_session_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_platforms", b"_platforms"]) -> typing.Literal["platforms"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_services_statuses", b"_services_statuses"]) -> typing.Literal["services_statuses"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_sip_port", b"_sip_port"]) -> typing.Literal["sip_port"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_sip_status", b"_sip_status"]) -> typing.Literal["sip_status"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_sip_status_history", b"_sip_status_history"]) -> typing.Literal["sip_status_history"] | None: ...

global___Call = Call

@typing.final
class CallFilter(google.protobuf.message.Message):
    """Definition of a CallFilter, representing filters for querying calls."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALL_NAMES_FIELD_NUMBER: builtins.int
    NLU_SESSION_NAMES_FIELD_NUMBER: builtins.int
    SIP_ACCOUNTS_FIELD_NUMBER: builtins.int
    PHONE_NUMBERS_FIELD_NUMBER: builtins.int
    CONTAINER_NAMES_FIELD_NUMBER: builtins.int
    SIP_PORTS_FIELD_NUMBER: builtins.int
    CSI_PORTS_FIELD_NUMBER: builtins.int
    CALL_TYPES_FIELD_NUMBER: builtins.int
    SIP_STATUS_TYPES_FIELD_NUMBER: builtins.int
    CALL_STATUS_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    DURATION_IN_S_MIN_FIELD_NUMBER: builtins.int
    DURATION_IN_S_MAX_FIELD_NUMBER: builtins.int
    PLATFORMS_FIELD_NUMBER: builtins.int
    call_status: global___CallStatus.ValueType
    """Optional: Filter based on active or inactive calls."""
    duration_in_s_min: builtins.float
    """Optional: Match only sessions for which the duration in seconds is larger or equal."""
    duration_in_s_max: builtins.float
    """Optional: Match only calls for which the duration in seconds is smaller or equal."""
    @property
    def call_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by call names."""

    @property
    def nlu_session_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by NLU session names."""

    @property
    def sip_accounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by SIP accounts."""

    @property
    def phone_numbers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by phone numbers."""

    @property
    def container_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by container names."""

    @property
    def sip_ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by SIP ports."""

    @property
    def csi_ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional: Filter by CSI ports."""

    @property
    def call_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___CallType.ValueType]:
        """Optional: Filter by call types (both by default, or only listeners, or only callers)."""

    @property
    def sip_status_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[ondewo.sip.sip_pb2.SipStatus.StatusType.ValueType]:
        """Optional: Filter based on SIP status types."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional: Start time of the log."""

    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional: End time of the log."""

    @property
    def platforms(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType]:
        """Optional: Platform responses sent to the user. Default is text: <code>Platform.PLATFORM_UNSPECIFIED</code>."""

    def __init__(
        self,
        *,
        call_names: collections.abc.Iterable[builtins.str] | None = ...,
        nlu_session_names: collections.abc.Iterable[builtins.str] | None = ...,
        sip_accounts: collections.abc.Iterable[builtins.str] | None = ...,
        phone_numbers: collections.abc.Iterable[builtins.str] | None = ...,
        container_names: collections.abc.Iterable[builtins.str] | None = ...,
        sip_ports: collections.abc.Iterable[builtins.str] | None = ...,
        csi_ports: collections.abc.Iterable[builtins.str] | None = ...,
        call_types: collections.abc.Iterable[global___CallType.ValueType] | None = ...,
        sip_status_types: collections.abc.Iterable[ondewo.sip.sip_pb2.SipStatus.StatusType.ValueType] | None = ...,
        call_status: global___CallStatus.ValueType | None = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        duration_in_s_min: builtins.float | None = ...,
        duration_in_s_max: builtins.float | None = ...,
        platforms: collections.abc.Iterable[ondewo.nlu.intent_pb2.Intent.Message.Platform.ValueType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_status", b"_call_status", "_duration_in_s_max", b"_duration_in_s_max", "_duration_in_s_min", b"_duration_in_s_min", "_end_time", b"_end_time", "_start_time", b"_start_time", "call_status", b"call_status", "duration_in_s_max", b"duration_in_s_max", "duration_in_s_min", b"duration_in_s_min", "end_time", b"end_time", "start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_status", b"_call_status", "_duration_in_s_max", b"_duration_in_s_max", "_duration_in_s_min", b"_duration_in_s_min", "_end_time", b"_end_time", "_start_time", b"_start_time", "call_names", b"call_names", "call_status", b"call_status", "call_types", b"call_types", "container_names", b"container_names", "csi_ports", b"csi_ports", "duration_in_s_max", b"duration_in_s_max", "duration_in_s_min", b"duration_in_s_min", "end_time", b"end_time", "nlu_session_names", b"nlu_session_names", "phone_numbers", b"phone_numbers", "platforms", b"platforms", "sip_accounts", b"sip_accounts", "sip_ports", b"sip_ports", "sip_status_types", b"sip_status_types", "start_time", b"start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_call_status", b"_call_status"]) -> typing.Literal["call_status"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_duration_in_s_max", b"_duration_in_s_max"]) -> typing.Literal["duration_in_s_max"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_duration_in_s_min", b"_duration_in_s_min"]) -> typing.Literal["duration_in_s_min"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_end_time", b"_end_time"]) -> typing.Literal["end_time"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_start_time", b"_start_time"]) -> typing.Literal["start_time"] | None: ...

global___CallFilter = CallFilter

@typing.final
class ListCallsRequest(google.protobuf.message.Message):
    """Request to list calls"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VTSI_PROJECT_NAME_FIELD_NUMBER: builtins.int
    CALL_VIEW_FIELD_NUMBER: builtins.int
    CALL_FILTER_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    vtsi_project_name: builtins.str
    """VTSI project name with which to perform the call of the form <pre><code>projects/&lt;project_uuid&gt;/project</code></pre>"""
    call_view: global___CallView.ValueType
    """you can specify the view to be shallow or full .. see above for more info"""
    page_token: builtins.str
    """Optional. The next_page_token value returned from a previous list request.
    Example: "current_index-1--page_size-20"
    """
    @property
    def call_filter(self) -> global___CallFilter:
        """Optional. A filter to narrow the response down to sessions of interest."""

    def __init__(
        self,
        *,
        vtsi_project_name: builtins.str = ...,
        call_view: global___CallView.ValueType | None = ...,
        call_filter: global___CallFilter | None = ...,
        page_token: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_call_filter", b"_call_filter", "_call_view", b"_call_view", "_page_token", b"_page_token", "call_filter", b"call_filter", "call_view", b"call_view", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_call_filter", b"_call_filter", "_call_view", b"_call_view", "_page_token", b"_page_token", "call_filter", b"call_filter", "call_view", b"call_view", "page_token", b"page_token", "vtsi_project_name", b"vtsi_project_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_call_filter", b"_call_filter"]) -> typing.Literal["call_filter"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_call_view", b"_call_view"]) -> typing.Literal["call_view"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_page_token", b"_page_token"]) -> typing.Literal["page_token"] | None: ...

global___ListCallsRequest = ListCallsRequest

@typing.final
class ListCallsResponse(google.protobuf.message.Message):
    """Response to list all VoipInfos"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CALLS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    """Token to retrieve the next page of results.
    This field is a string that holds a token for fetching the next page of results.
    If there are no more results in the list, this field will be empty.
    """
    @property
    def calls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Call]:
        """VoipInfos"""

    def __init__(
        self,
        *,
        calls: collections.abc.Iterable[global___Call] | None = ...,
        next_page_token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["calls", b"calls", "next_page_token", b"next_page_token"]) -> None: ...

global___ListCallsResponse = ListCallsResponse

@typing.final
class AllServicesStatuses(google.protobuf.message.Message):
    """status of ondewo-sip instance"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_SIP_FIELD_NUMBER: builtins.int
    STATUS_ASTERISK_FIELD_NUMBER: builtins.int
    STATUS_NLU_FIELD_NUMBER: builtins.int
    STATUS_STT_FIELD_NUMBER: builtins.int
    STATUS_TTS_FIELD_NUMBER: builtins.int
    @property
    def status_sip(self) -> global___ServiceStatus:
        """health status for sip"""

    @property
    def status_asterisk(self) -> global___ServiceStatus:
        """status of the associated asterisk server"""

    @property
    def status_nlu(self) -> global___ServiceStatus:
        """status of the nlu instance associated with the call"""

    @property
    def status_stt(self) -> global___ServiceStatus:
        """status of the associated speech-to-text service"""

    @property
    def status_tts(self) -> global___ServiceStatus:
        """status of the associated text-to-speech service"""

    def __init__(
        self,
        *,
        status_sip: global___ServiceStatus | None = ...,
        status_asterisk: global___ServiceStatus | None = ...,
        status_nlu: global___ServiceStatus | None = ...,
        status_stt: global___ServiceStatus | None = ...,
        status_tts: global___ServiceStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["status_asterisk", b"status_asterisk", "status_nlu", b"status_nlu", "status_sip", b"status_sip", "status_stt", b"status_stt", "status_tts", b"status_tts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["status_asterisk", b"status_asterisk", "status_nlu", b"status_nlu", "status_sip", b"status_sip", "status_stt", b"status_stt", "status_tts", b"status_tts"]) -> None: ...

global___AllServicesStatuses = AllServicesStatuses

@typing.final
class ServiceStatus(google.protobuf.message.Message):
    """status of service"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEALTHY_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    healthy: builtins.bool
    """health status"""
    error_message: builtins.str
    """error messages if you have any so if it's unhealthy"""
    def __init__(
        self,
        *,
        healthy: builtins.bool = ...,
        error_message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["error_message", b"error_message", "healthy", b"healthy"]) -> None: ...

global___ServiceStatus = ServiceStatus
