# coding: utf-8

"""
    DataForSEO API documentation

    DataForSEO API is the starting point on your journey towards building powerful SEO software. With DataForSEO you can get all the data you need to build an efficient application while also saving your time and budget. DataForSEO API is using the REST technology for interchanging data between your application and our service. The data exchange is made through the widely used HTTP protocol, which allows applying our API to almost all programming languages.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dataforseo_client.models.dataforseo_labs_available_filters_task_info import DataforseoLabsAvailableFiltersTaskInfo

class TestDataforseoLabsAvailableFiltersTaskInfo(unittest.TestCase):
    """DataforseoLabsAvailableFiltersTaskInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataforseoLabsAvailableFiltersTaskInfo:
        """Test DataforseoLabsAvailableFiltersTaskInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataforseoLabsAvailableFiltersTaskInfo`
        """
        model = DataforseoLabsAvailableFiltersTaskInfo()
        if include_optional:
            return DataforseoLabsAvailableFiltersTaskInfo(
                id = '',
                status_code = 56,
                status_message = '',
                time = '',
                cost = 1.337,
                result_count = 56,
                path = [
                    ''
                    ],
                data = dataforseo_client.models.data.data(),
                result = [
                    dataforseo_client.models.dataforseo_labs_available_filters_result_info.DataforseoLabsAvailableFiltersResultInfo(
                        related_keywords = dataforseo_client.models.related_keywords_info.RelatedKeywordsInfo(
                            google = dataforseo_client.models.dataforseo_labs_available_filters_google_info.DataforseoLabsAvailableFiltersGoogleInfo(
                                depth = '', 
                                keyword_data/keyword = '', 
                                keyword_data/keyword_info/last_updated_time = '', 
                                keyword_data/keyword_info/competition = '', 
                                keyword_data/keyword_info/competition_level = '', 
                                keyword_data/keyword_info/cpc = '', 
                                keyword_data/keyword_info/search_volume = '', 
                                keyword_data/keyword_info/low_top_of_page_bid = '', 
                                keyword_data/keyword_info/high_top_of_page_bid = '', 
                                keyword_data/keyword_info/categories = '', 
                                keyword_data/keyword_info/search_volume_trend/monthly = '', 
                                keyword_data/keyword_info/search_volume_trend/quarterly = '', 
                                keyword_data/keyword_info/search_volume_trend/yearly = '', 
                                keyword_data/clickstream_keyword_info/search_volume = '', 
                                keyword_data/clickstream_keyword_info/last_updated_time = '', 
                                keyword_data/clickstream_keyword_info/gender_distribution/female = '', 
                                keyword_data/clickstream_keyword_info/gender_distribution/male = '', 
                                keyword_data/clickstream_keyword_info/age_distribution/18_24 = '', 
                                keyword_data/clickstream_keyword_info/age_distribution/25_34 = '', 
                                keyword_data/clickstream_keyword_info/age_distribution/35_44 = '', 
                                keyword_data/clickstream_keyword_info/age_distribution/45_54 = '', 
                                keyword_data/clickstream_keyword_info/age_distribution/55_64 = '', 
                                keyword_data/keyword_properties/core_keyword = '', 
                                keyword_data/keyword_properties/synonym_clustering_algorithm = '', 
                                keyword_data/keyword_properties/keyword_difficulty = '', 
                                keyword_data/keyword_properties/detected_language = '', 
                                keyword_data/keyword_properties/is_another_language = '', 
                                keyword_data/impressions_info/last_updated_time = '', 
                                keyword_data/impressions_info/bid = '', 
                                keyword_data/impressions_info/match_type = '', 
                                keyword_data/impressions_info/ad_position_min = '', 
                                keyword_data/impressions_info/ad_position_max = '', 
                                keyword_data/impressions_info/ad_position_average = '', 
                                keyword_data/impressions_info/cpc_min = '', 
                                keyword_data/impressions_info/cpc_max = '', 
                                keyword_data/impressions_info/cpc_average = '', 
                                keyword_data/impressions_info/daily_impressions_min = '', 
                                keyword_data/impressions_info/daily_impressions_max = '', 
                                keyword_data/impressions_info/daily_impressions_average = '', 
                                keyword_data/impressions_info/daily_clicks_min = '', 
                                keyword_data/impressions_info/daily_clicks_max = '', 
                                keyword_data/impressions_info/daily_clicks_average = '', 
                                keyword_data/impressions_info/daily_cost_min = '', 
                                keyword_data/impressions_info/daily_cost_max = '', 
                                keyword_data/impressions_info/daily_cost_average = '', 
                                keyword_data/serp_info/check_url = '', 
                                keyword_data/serp_info/serp_item_types = '', 
                                keyword_data/serp_info/se_results_count = 56, 
                                keyword_data/serp_info/last_updated_time = '', 
                                keyword_data/serp_info/previous_updated_time = '', 
                                keyword_data/avg_backlinks_info/backlinks = '', 
                                keyword_data/avg_backlinks_info/dofollow = '', 
                                keyword_data/avg_backlinks_info/referring_pages = '', 
                                keyword_data/avg_backlinks_info/referring_domains = '', 
                                keyword_data/avg_backlinks_info/referring_main_domains = '', 
                                keyword_data/avg_backlinks_info/rank = '', 
                                keyword_data/avg_backlinks_info/main_domain_rank = '', 
                                keyword_data/avg_backlinks_info/last_updated_time = '', 
                                keyword_data/search_intent_info/main_intent = '', 
                                keyword_data/search_intent_info/foreign_intent = '', 
                                keyword_data/search_intent_info/last_updated_time = '', 
                                keyword_data/keyword_info_normalized_with_bing/search_volume = '', 
                                keyword_data/keyword_info_normalized_with_bing/last_updated_time = '', 
                                keyword_data/keyword_info_normalized_with_bing/is_normalized = '', 
                                keyword_data/keyword_info_normalized_with_clickstream/search_volume = '', 
                                keyword_data/keyword_info_normalized_with_clickstream/last_updated_time = '', 
                                keyword_data/keyword_info_normalized_with_clickstream/is_normalized = '', ), 
                            bing = dataforseo_client.models.dataforseo_labs_available_filters_bing_info.DataforseoLabsAvailableFiltersBingInfo(
                                depth = '', 
                                keyword_data/keyword = '', 
                                keyword_data/keyword_info/last_updated_time = '', 
                                keyword_data/keyword_info/competition = '', 
                                keyword_data/keyword_info/cpc = '', 
                                keyword_data/keyword_info/search_volume = '', 
                                keyword_data/keyword_properties/core_keyword = '', 
                                keyword_data/keyword_properties/synonym_clustering_algorithm = '', 
                                keyword_data/keyword_properties/keyword_difficulty = '', 
                                keyword_data/keyword_properties/detected_language = '', 
                                keyword_data/keyword_properties/is_another_language = '', 
                                keyword_data/serp_info/check_url = '', 
                                keyword_data/serp_info/se_results_count = 56, 
                                keyword_data/serp_info/last_updated_time = '', 
                                keyword_data/serp_info/previous_updated_time = '', 
                                keyword_data/serp_info/serp_item_types = '', ), 
                            amazon = {
                                'key' : ''
                                }, ), 
                        keyword_suggestions = dataforseo_client.models.s_info.sInfo(), 
                        ranked_keywords = dataforseo_client.models.ranked_keywords_info.RankedKeywordsInfo(), 
                        keyword_ideas = dataforseo_client.models.keyword_info.KeywordInfo(), 
                        serp_competitors = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        relevant_pages = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        subdomains = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        competitors_domain = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        categories_for_domain = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        keywords_for_categories = dataforseo_client.models.es_info.esInfo(), 
                        domain_intersection = dataforseo_client.models.domain_intersection_info.DomainIntersectionInfo(), 
                        page_intersection = dataforseo_client.models.page_intersection_info.PageIntersectionInfo(), 
                        domain_whois_overview = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        top_searches = dataforseo_client.models.es_info.esInfo(), 
                        domain_metrics_by_categories = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        keywords_for_site = dataforseo_client.models.keywords_for_site_info.KeywordsForSiteInfo(), 
                        product_competitors = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        product_keyword_intersections = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        app_intersection = dataforseo_client.models.app_intersection_info.AppIntersectionInfo(
                            apple = dataforseo_client.models.apple_info.AppleInfo(
                                keyword_data/keyword = '', 
                                keyword_data/keyword_info/last_updated_time = '', 
                                keyword_data/keyword_info/search_volume = '', 
                                keyword_data/serp_info/check_url = '', 
                                keyword_data/serp_info/se_results_count = 56, 
                                keyword_data/serp_info/last_updated_time = '', 
                                keyword_data/serp_info/previous_updated_time = '', 
                                intersection_result/__app_id/type = '', 
                                intersection_result/__app_id/rank_group = '', 
                                intersection_result/__app_id/rank_absolute = '', 
                                intersection_result/__app_id/position = '', 
                                intersection_result/__app_id/title = '', 
                                intersection_result/__app_id/url = '', 
                                intersection_result/__app_id/reviews_count = '', 
                                intersection_result/__app_id/is_free = '', ), ), 
                        app_competitors = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        keywords_for_app = {
                            'key' : {
                                'key' : ''
                                }
                            }, 
                        database_rows_count = dataforseo_client.models.database_rows_count_info.DatabaseRowsCountInfo(
                            keyword = '', 
                            keyword_info/last_updated_time = '', 
                            keyword_info/competition = '', 
                            keyword_info/competition_level = '', 
                            keyword_info/cpc = '', 
                            keyword_info/search_volume = '', 
                            keyword_info/categories = '', 
                            keyword_properties/core_keyword = '', 
                            keyword_properties/synonym_clustering_algorithm = '', 
                            impressions_info/bid = '', 
                            impressions_info/match_type = '', 
                            impressions_info/ad_position_min = '', 
                            impressions_info/ad_position_max = '', 
                            impressions_info/ad_position_average = '', 
                            impressions_info/cpc_min = '', 
                            impressions_info/cpc_max = '', 
                            impressions_info/cpc_average = '', 
                            impressions_info/daily_impressions_min = '', 
                            impressions_info/daily_impressions_max = '', 
                            impressions_info/daily_impressions_average = '', 
                            impressions_info/daily_clicks_min = '', 
                            impressions_info/daily_clicks_max = '', 
                            impressions_info/daily_clicks_average = '', 
                            impressions_info/daily_cost_min = '', 
                            impressions_info/daily_cost_max = '', 
                            impressions_info/daily_cost_average = '', 
                            bing_keyword_info/last_updated_time = '', 
                            bing_keyword_info/search_volume = '', 
                            serp_info/check_url = '', 
                            serp_info/se_results_count = 56, 
                            serp_info/last_updated_time = '', 
                            serp_info/serp_item_types = '', 
                            serp_info/keyword_difficulty = '', 
                            keyword_properties/keyword_difficulty = '', 
                            keyword_properties/detected_language = '', 
                            keyword_properties/is_another_language = '', ), )
                    ]
            )
        else:
            return DataforseoLabsAvailableFiltersTaskInfo(
        )
        """

    def testDataforseoLabsAvailableFiltersTaskInfo(self):
        """Test DataforseoLabsAvailableFiltersTaskInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
