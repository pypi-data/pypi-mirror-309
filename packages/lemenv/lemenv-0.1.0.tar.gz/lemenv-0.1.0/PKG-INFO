Metadata-Version: 2.3
Name: lemenv
Version: 0.1.0
Summary: A Citrus-Flavored Virtual Environment Manager
Project-URL: Homepage, https://github.com/jakerains/lemenv
Project-URL: Repository, https://github.com/jakerains/lemenv.git
Project-URL: Issues, https://github.com/jakerains/lemenv/issues
Author-email: Jake Rains <your.email@example.com>
License: MIT License
        
        Copyright (c) 2024 GenAIJake (contact@genaijake.com)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
Keywords: conda,environment manager,venv,virtual environment
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Build Tools
Requires-Python: >=3.6
Requires-Dist: click
Requires-Dist: colorama
Requires-Dist: inquirer
Provides-Extra: dev
Requires-Dist: black; extra == 'dev'
Requires-Dist: build; extra == 'dev'
Requires-Dist: isort; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Description-Content-Type: text/markdown

# 🍋 LemEnv

<p align="center">
  <img src="screenshot.png" alt="LemEnv Menu" width="600"/>
</p>

A Citrus-Flavored Virtual Environment Manager - A friendly CLI tool that makes managing Python virtual environments a breeze!

## Features

- 🎯 Simple, intuitive menu-driven interface
- 🔨 Create virtual environments (supports both venv and conda)
- 📋 List available environments with visual indicators
- 🚀 Activate environments with clear instructions
- 🗑️ Delete environments safely
- 🔄 Recreate environments from scratch
- 📦 Install dependencies from requirements.txt
- ℹ️ View detailed environment information

## Installation

```bash
pip install lemenv
```

## Quick Start

After installation, simply

## Usage

Simply run:

```bash
lemenv interactive
```

### Command Line Interface

```bash
# Create a new virtual environment
lemenv create [name]

# Activate a virtual environment
lemenv activate [name]

# List all virtual environments
lemenv list

# Delete a virtual environment
lemenv delete [name]

# Recreate a virtual environment
lemenv recreate [name]

# Install requirements
lemenv install [name] [requirements_file]

# Show environment info
lemenv info [name]
```

## Examples 📝

1. Create and activate a new environment:
   ```bash
   lemenv create myproject
   lemenv activate myproject
   ```

2. Install requirements:
   ```bash
   lemenv install myproject requirements.txt
   ```

3. Recreate an environment:
   ```bash
   lemenv recreate myproject
   ```

## Contributing 🤝

Contributions are welcome! Please feel free to submit a Pull Request.

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License 📄

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments 🙏

- Thanks to all contributors who have helped shape LemEnv
- Built with Python, Click, and Inquirer

## Support 💬

If you have any questions or run into issues, please open an issue on the GitHub repository. 