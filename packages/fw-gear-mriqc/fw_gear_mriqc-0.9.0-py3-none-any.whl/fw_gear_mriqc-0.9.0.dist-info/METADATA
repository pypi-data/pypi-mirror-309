Metadata-Version: 2.1
Name: fw-gear-mriqc
Version: 0.9.0
Summary: Image quality metrics for quality assessment of MRI
Home-page: https://gitlab.com/flywheel-io/scientific-solutions/gears/mriqc
License: MIT
Keywords: Flywheel,Gears
Author: Flywheel
Author-email: support@flywheel.io
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Requires-Dist: beautifulsoup4 (>=4.12.2,<5.0.0)
Requires-Dist: flywheel-gear-toolkit (>=0.6.10,<0.7.0)
Requires-Dist: flywheel-sdk (>=17.0,<18.0)
Requires-Dist: fw-utils (>=4.3.5,<5.0.0)
Requires-Dist: pyfakefs (>=5.3.0,<6.0.0)
Requires-Dist: pytest-subprocess (>=1.5.0,<2.0.0)
Project-URL: Repository, https://gitlab.com/flywheel-io/scientific-solutions/gears/mriqc
Description-Content-Type: text/markdown

<!-- markdownlint-disable-file MD041 -->
[![Docker Pulls](https://img.shields.io/docker/pulls/flywheel/mriqc.svg)](https://hub.docker.com/r/flywheel/mriqc/)
[![Docker Stars](https://img.shields.io/docker/stars/flywheel/mriqc.svg)](https://hub.docker.com/r/flywheel/mriqc/)

# MRIQC Gear

## Overview

### Summary

*Image quality metrics for quality assessment of MRI. For more information
see [MRIQC's documentation](http://mriqc.readthedocs.io).*

### Cite

*Esteban O, Birman D, Schaer M, Koyejo OO, Poldrack RA, Gorgolewski KJ; MRIQC:
Advancing the Automatic Prediction of Image Quality in MRI from Unseen Sites;
PLOS ONE 12(9):e0184661; doi:10.1371/journal.pone.0184661.*

### License

*License:* *BSD-3-Clause*

### Classification

*Category:* *QA (Utility)*

*Gear Level:*

- [ ] Project
- [ ] Subject
- [ ] Session
- [x] Acquisition
- [ ] Analysis

----

[[*TOC*]]

----

### Inputs

- *nifti*
  - __Type__: *NIfTI file (.nii, .nii.gz)*
  - __Optional__: *False*
  - __Description__: *MRI NIfTI file. Input can be a structural image (T1, T2) or a
  functional NIfTI file.*
  - __Notes__: *Intent and Measurement classification fields must be present in the
  input metadata for 'auto-detect' mode to work.*

### Config

- *debug*
  - __Type__: *boolean*
  - __Description__: *Log debug messages*
  - __Default__: *False*

- *measurement*
  - __Type__: *"enum": ["auto-detect", "functional", "T1", "T2"]*
  - __Description__: *Measurement of the input image. Note: for "auto-detect" mode to work,
  the input niftimust have the Intent and Measurement classification fields present in
  its metadata.*
  - __Default__: *"auto-detect"*

- *verbose_reports*
  - __Type__: *boolean*
  - __Description__: *Produce [verbose report outputs](https://mriqc.readthedocs.io/en/latest/reports/smri.html#verbose-reports).*
  - __Default__: *False*

- *include_rating_widget*
  - __Type__: *boolean*
  - __Description__: *Include the MRIQC built-in rating widget (does not function in flywheel).*
  - __Default__: *False*

- *tag*
  - __Type__: *string*
  - __Description__: *Tag to add to the input file.*
  - __Default__: *mriqc*

- *save_derivatives*
  - __Type__: *boolean*
  - __Description__: *Save the derivative JSON file generated by MRIQC algorithm.
  - __Note__: The metrics produced in this document are saved as custom metadata to
  the input file regardless of whether this JSON is saved.
  - __Default__: *false*

### Outputs

#### Files

- *Report*
  - __Description__: *Zipped html archive. Contains .html report and .svg images.*
  - __Notes__: *Archive is viewable in Flywheel.*
  - __Optional__: *False*

- *Derivative JSON*
  - __Description__: *JSON file containing image quality metrics (IQM).*
  - __Notes__: *Only saved when 'save_derivatives' config option set to True.*
  - __Optional__: *True*

#### Metadata

Image quality metrics (IQM) are saved to the input nifti file as Custom
Information fields, located under the "derived.IQM" keys.

### Pre-requisites

#### Prerequisite Metadata

1. __*Modality*__
    - Location: *Information*
    - Level: *File*
    - Note: *Must be MR - Magnetic Resonance*.
    - Note: *Only required when gear is run in "auto-detect" mode*.

1. __*Intent*__
    - Location: *Information.Modality(MR - Magnetic Resonance).Intent*
    - Level: *File*
    - Note: *Must be Structural or Functional*.
    - Note: *Only required when gear is run in "auto-detect" mode*.

1. __*Measurement*__
    - Location: *Information.Modality(MR - Magnetic Resonance).Measurement*
    - Level: *File*
    - Note: *Only required when gear is run in "auto-detect" mode*.

