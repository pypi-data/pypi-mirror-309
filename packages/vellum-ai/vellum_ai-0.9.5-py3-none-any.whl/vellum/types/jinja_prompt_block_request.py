# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .jinja_prompt_block_properties_request import JinjaPromptBlockPropertiesRequest
from .prompt_block_state import PromptBlockState
from .ephemeral_prompt_cache_config_request import EphemeralPromptCacheConfigRequest
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class JinjaPromptBlockRequest(UniversalBaseModel):
    """
    A block of Jinja template code that is used to generate a prompt
    """

    block_type: typing.Literal["JINJA"] = "JINJA"
    properties: JinjaPromptBlockPropertiesRequest
    id: str
    state: typing.Optional[PromptBlockState] = None
    cache_config: typing.Optional[EphemeralPromptCacheConfigRequest] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
