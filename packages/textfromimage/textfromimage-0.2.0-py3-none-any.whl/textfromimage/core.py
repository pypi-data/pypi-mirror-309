# image2text/core.py

import os
import base64
import requests
from openai import OpenAI  # Ensure this is the correct import based on the OpenAI library version

class TextFromImage:
    def __init__(self, api_key=None, model="gpt-4o"):
        """
        Initialize the TextFromImage with the specified model and API key.

        Parameters:
        - api_key (str, optional): Your OpenAI API key. If not provided, it will be read from the 'OPENAI_API_KEY' environment variable.
        - model (str): The OpenAI model to use (default 'gpt-4o').
        """
        self.api_key = api_key or os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            raise ValueError("API key must be provided via the 'api_key' parameter or the 'OPENAI_API_KEY' environment variable.")

        self.model = model
        self.client = OpenAI(api_key=self.api_key)

    def get_description(self, image_url, prompt="What's in this image?", max_tokens=300):
        """
        Get a description of an image using OpenAI's GPT models.

        Parameters:
        - image_url (str): The URL of the image.
        - prompt (str): The prompt to use for the description.
        - max_tokens (int): The maximum number of tokens to generate.

        Returns:
        - str: The description generated by the model.
        """
        # Download the image
        response = requests.get(image_url)
        if response.status_code != 200:
            raise ValueError(f"Could not retrieve image from URL: {image_url}")

        # Encode the image in base64
        encoded_image = base64.b64encode(response.content).decode('utf-8')

        # Create the OpenAI API request
        try:
            response = self.client.chat.completions.create(
                model=self.model,
                messages=[
                    {
                        "role": "user",
                        "content": [
                            {"type": "text", "text": prompt},
                            {
                                "type": "image_url",
                                "image_url": {"url": f"data:image/png;base64,{encoded_image}"}
                            },
                        ],
                    }
                ],
                max_tokens=max_tokens,
            )
        except Exception as e:
            raise RuntimeError(f"OpenAI API request failed: {e}")

        # Extract and return the description
        description = response.choices[0].message.content
        return description
