Metadata-Version: 2.1
Name: llama-index-readers-boarddocs
Version: 0.3.0
Summary: llama-index readers boarddocs integration
License: MIT
Keywords: board,boarddocs
Author: Your Name
Author-email: you@example.com
Maintainer: dweekly
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: beautifulsoup4 (>=4.12.3,<5.0.0)
Requires-Dist: html2text (>=2020.1.16,<2021.0.0)
Requires-Dist: llama-index-core (>=0.12.0,<0.13.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Description-Content-Type: text/markdown

# BoardDocs Loader

```bash
pip install llama-index-readers-boarddocs
```

This loader retrieves an agenda and associated material from a BoardDocs site.

This loader is not endorsed by, developed by, supported by, or in any way formally affiliated with Diligent Corporation.

## Usage

To use this loader, you'll need to specify which BoardDocs site you want to load,
as well as the committee on the site you want to scrape.

```python
from llama_index.readers.boarddocs import BoardDocsReader

# For a site URL https://go.boarddocs.com/ca/redwood/Board.nsf/Public
# your site should be set to 'ca/redwood'
# You'll also need to specify which committee on the site you want to index,
# in this case A4EP6J588C05 is the Board of Trustees meeting.
loader = BoardDocsReader(site="ca/redwood", committee_id="A4EP6J588C05")

# You can optionally specify to load a specific set of meetings; if you don't
# pass in meeting_ids, the loader will attempt to load *all* meeting content.
# Since we're actually scraping a site, this can take a little while.
documents = loader.load_data(meeting_ids=["CPSNV9612DF1"])
```

This loader is designed to be used as a way to load data into [LlamaIndex](https://github.com/run-llama/llama_index/).

