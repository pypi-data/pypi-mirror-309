variables:
  FF_TIMESTAMPS: true
  BUILD_IMAGE:
    description: Used in rules, if "true" and web triggered it builds the image!
    value: "false"
    options:
    - "false"
    - "true"
  IMAGE_NAME: py-rf-image
  IMAGE_TAG:
    description: >-
      The "tag" added to the image name for the test / lint image.
      Remove this when you trigger by hand an image build and want it to use
      the new built image with Git short sha tag (X icon on the right)!
    value: "latest"
  RUN_DOCS_PUBLISH:
    description: >-
      Used in rules, if "true" and web triggered it generates the docs and
      publishes them!
    value: "false"
    options:
    - "false"
    - "true"

build-py-rf-image:
  stage: build
  image: docker:25
  services:
    - name: docker:25-dind
      alias: docker
  before_script:
    - docker info
  before_script:
    - echo "Login to Gitlab container registry"
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo "Build container image..."
    - ./cicd/build-py-rf-image.sh
    - echo "Export IMAGE_TAG var to next stage!"
    - echo "IMAGE_TAG=${CI_COMMIT_SHORT_SHA}" > image_tag.env
    - echo "Build complete."
  artifacts:
    reports:
      dotenv: image_tag.env
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - .gitlab-ci.yml
        - cicd/build-py-rf-image.sh
        - container/**/*
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - .gitlab-ci.yml
        - cicd/build-py-rf-image.sh
        - container/**/*
    - if: $CI_PIPELINE_SOURCE == "web" && $BUILD_IMAGE == "true"
      when: always

run-pylint:
  stage: test
  image: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${IMAGE_TAG}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - src/**/*.py
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - src/**/*.py
  before_script:
    - echo "Running PyLint."
  script:
    - ./cicd/run_pylint.sh
  artifacts:
    when: always
    expire_in: 2 week
    paths:
      - pylint.out.*

run-shellcheck:
  stage: test
  image: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${IMAGE_TAG}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - cicd/*.sh
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - cicd/*.sh
  before_script:
    - echo "Running ShellCheck."
  script:
    - ./cicd/run_shellcheck.sh
 
pages:
  stage: deploy
  image: "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${IMAGE_TAG}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - src/**/*.py
    - if: $CI_PIPELINE_SOURCE == "web" && $RUN_DOCS_PUBLISH == "true"
      when: always
  before_script:
    - echo "Running Docs generation and publishing..."
  script:
    - ./cicd/run_docs_pages.sh
  artifacts:
    paths:
      - public
