#------------------------------------------------------------------------------
# <auto-generated>
#     This file was auto generated.
#
#     Changes to this file may cause incorrect behavior and will be lost if
#     the code is regenerated.
# </auto-generated>
#------------------------------------------------------------------------------
import typing
from abc import abstractmethod, ABCMeta
from Oasys.AdSec import IDeformation, ILoad, ISection, IWarning
from Oasys.AdSec.DesignCode import IDesignCode
from Oasys.AdSec.IO.Utility import ReflectionUtil
from Oasys.Collections import IList
from System.Collections.Generic import IList


# noinspection PyPep8Naming
class JsonConverter(ReflectionUtil):
    """Class that converts an ISection
    to a JSON string that can be saved
    to an AdSec UI file ('.ads'). It can also convert list of
    ILoad or
    IDeformation along with a
    given section that are to be applied to the section.
    """

    def __init__(self, designCode: IDesignCode) -> None:
        """Creates an instance of JsonConverter with the given design code. It is the design
        code for which a section is to be analysed when saved and opened in AdSec UI.
        """
        pass

    @typing.overload
    def SectionToJson(self, section: ISection) -> str:
        """ Creates a JSON string for the given
         section. The string can be saved to an AdSec UI file ('.ads'). The materials used for
         the section definition must be standard materials from the selected design code.

        :exception ValidationException: When at least one material used for the section or reinforcement definition is not a
        standard material for the selected design code.
        """
        pass

    @typing.overload
    def SectionToJson(self, section: ISection, loads: IList[ILoad]) -> str:
        """Creates a JSON string for the given
        section that is to be analysed for the given loads. The string can be saved to an
        AdSec UI file ('.ads'). The materials used for the section definition must be standard
        materials from the selected design code.

        :exception ValidationException: When at least one material used for the section or reinforcement definition is not a
        standard material for the selected design code.
        """
        pass

    @typing.overload
    def SectionToJson(self, section: ISection, deformations: IList[IDeformation]) -> str:
        """Creates a JSON string for the given
        section that is to be analysed for the given deformations. The string can be saved to
        an AdSec UI file ('.ads'). The materials used for the section definition must be standard
        materials from the selected design code.

        :exception ValidationException: When at least one material used for the section or reinforcement definition is not a
        standard material for the selected design code.
        """
        pass


# noinspection PyPep8Naming
class JsonParser(ReflectionUtil):
    """Class that handles conversion of a JSON
    string representing the .ads file into a list of API sections (ISection).
    It also records any warnings generated during this process into a list of IWarning.
    """

    @staticmethod
    def Deserialize(json: str) -> ParsedResult:
        """ Method that converts the JSON string to a list of ISection.
         If there are any 'Tasks' in the JSON, it will be ignored when converted to API. The same is recorded as a warning.

         If a section contains multiple layers of reinforcement from IArcGroup or ICircleGroup or ILineGroup, Deserialize() method ignores the section and records it as a warning.

        :return: Contains a list of API sections and warnings resulting from the parsing of JSON string.
        :rtype: ParsedResult

        :exception ValidationException: When JSON string contains a non-standard material.
        """
        pass


# noinspection PyPep8Naming
class ParsedResult:
    """Class that holds the results of parsing a JSON string.
    See "JsonParser". It consists of
    a list of ISection and a list of IWarning that gets populated in the process.
    """

    @property
    def Sections(self) -> IList[ISection]:
        """List of ISection created from parsing the JSON string. It defaults to an empty list.
        """
        pass

    @property
    def Warnings(self) -> IList[IWarning]:
        """List of IWarning populated while parsing the JSON string. It defaults to an empty list.
        """
        pass

    def __init__(self) -> None:
        """Creates an instance of ParsedResult with empty lists of ISection and IWarning.
        """
        pass

    def __init__(self, sections: IList[ISection], warnings: IList[IWarning]) -> None:
        """Creates an instance of ParsedResult with lists of ISection and IWarning.

        :param sections: List of ISection created from parsing the JSON string
        :type sections: IList[ISection]
        :param warnings: List of IWarning populated while parsing the JSON string
        :type warnings: IList[IWarning]
        """
        pass
