[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "periomod"
version = "0.1.5"
description = "Package for short-term periodontal modeling"
authors = [
  { name = "Tobias Brock" },
  { name = "Elias Walter" },
]

license = { text = "LICENSE"}
readme = "README.md"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: Other/Proprietary License",
]
requires-python = ">=3.10,<3.12"

# Core dependencies required to run the package
dependencies = [
  "gradio==4.44.1",
  "HEBO==0.3.5",
  "hydra-core==1.3.2",
  "imbalanced-learn==0.12.3",
  "matplotlib==3.9.2",
  "numpy==1.24.4",
  "openpyxl==3.1.5",
  "pandas==2.2.2",
  "scikit-learn==1.5.1",
  "seaborn==0.13.2",
  "shap==0.46.0",
  "xgboost==2.1.1",
]

[project.optional-dependencies]
# Dependencies for documentation
docs = [
  "mkdocs==1.6.1",
  "mkdocs-material==9.5.43",
  "mkdocstrings==0.26.2",
  "mkdocstrings-python==1.12.2"
]

# Dependencies for testing
tests = [
  "pytest==8.3.2",
  "unittest",
  "coverage",
]

# Development dependencies (for linting, pre-commit hooks, and other dev tools)
dev = [
  "ruff==0.6.3",
  "pre-commit",
  "py-cpuinfo==9.0.0",
  "uvicorn==0.23.1",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
)/
'''

[tool.ruff]
line-length = 88
exclude = [
  ".git",
  "__pycache__",
  ".ruff_cache",
  ".pt",
]
lint.select = [
  "E",    # pycodestyle errors
  "F",    # pyflakes errors
  "W",    # pycodestyle warnings
  "D",    # pydocstyle errors
  "I",    # import conventions (isort)
  "B",    # flake8-bugbear errors
  "C4",   # flake8-comprehensions errors
  "NPY",  # NumPy style checks
]
lint.ignore = [
  "E203",  # Whitespace before ':', handled by Black
  "E731",  # Do not assign a lambda expression, use a def
  "E741",  # Do not use variables named 'l', 'O', or 'I'
  "E721",  # Use 'isinstance()' instead of comparing types directly
  "F841",  # Local variable assigned to but never used
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["periomod"]
force-sort-within-sections = true

# [tool.docformatter]
# wrap-summaries = 88
# wrap-descriptions = 88
# pre-summary-newline = true
# style = "google"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.pytest.ini_options]
filterwarnings = [
  "ignore::DeprecationWarning"
]

[tool.flit.sdist]
include = [
  "docs/images/logo.png",
  "docs/images/app_data.gif",
  "docs/images/app_benchmark.gif",
  "docs/images/app_evaluation.gif",
  "docs/images/app_inference.gif",
  "LICENSE",
  "README.md",
]
