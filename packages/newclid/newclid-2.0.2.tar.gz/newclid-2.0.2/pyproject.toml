[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]

[project]
name = "newclid"
authors = [
    {name = "Mathis Federico", email = "mathfederico@gmail.com"}
]
readme = "README.rst"
dynamic = ["version", "dependencies"]
description = "Symbolic solver for geometric problems."
requires-python = ">=3.9"
classifiers=[
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]

[project.optional-dependencies]
dev = ['black', 'ruff', 'pytest', 'pytest-cov', 'pytest-check', 'pytest-mock', 'pre-commit']
doc = ['numpy', 'sphinx-autoapi', 'autoapi', 'sphinx_rtd_theme', 'sphinx-autodoc-typehints']

[tool.setuptools]
license-files = ['LICEN[CS]E*', 'COPYING*', 'NOTICE*', 'AUTHORS*']

[project.scripts]
newclid = "newclid.__main__:main"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools_scm]

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:distutils Version classes are deprecated:DeprecationWarning',
    'ignore:`np.bool8` is a deprecated alias for `np.bool_`:DeprecationWarning',
    'ignore:Training and eval env are not of the same type:UserWarning',
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ['src']

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about typing imports, they aren't run:
    "if TYPE_CHECKING:",

    # Don't complain about optional imports, they don't matter for now:
    "except ImportError:"
]
