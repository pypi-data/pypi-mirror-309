import"./react-C1sqhVEE.js";import{n as i,c as n}from"./index-Dowg_ARF.js";import{j as m}from"./ui-DwUtvhni.js";const d=i.span(({size:e="sm",color:t="white"})=>[{borderRadius:"0.25rem"},{userSelect:"none"},{paddingLeft:"0.5rem",paddingRight:"0.5rem",paddingTop:"0.125rem",paddingBottom:"0.125rem",fontWeight:"600"},t==="black"?{"--tw-text-opacity":"1",color:"rgb(0 0 0 / var(--tw-text-opacity, 1))"}:"",t==="white"?{"--tw-text-opacity":"1",color:"rgb(255 255 255 / var(--tw-text-opacity, 1))"}:"",e==="xs"?{paddingLeft:"0.25rem",paddingRight:"0.25rem",paddingTop:"0.125rem",paddingBottom:"0.125rem",fontSize:"0.75rem",lineHeight:"1rem"}:"",e==="sm"?{paddingLeft:"0.375rem",paddingRight:"0.375rem",paddingTop:"0.125rem",paddingBottom:"0.125rem",fontSize:"0.875rem",lineHeight:"1.25rem"}:"",e==="md"?{fontSize:"1rem",lineHeight:"1.5rem"}:"",e==="lg"?{fontSize:"1.125rem",lineHeight:"1.75rem"}:"",e==="lg"?{"@media (min-width: 768px)":{fontSize:"1.25rem",lineHeight:"1.75rem"}}:"",e==="lg"?{"@media (min-width: 1024px)":{fontSize:"1.5rem",lineHeight:"2rem"}}:"",e==="xl"?{fontSize:"1.5rem",lineHeight:"2rem"}:"",e==="xl"?{"@media (min-width: 768px)":{fontSize:"1.875rem",lineHeight:"2.25rem"}}:"",e==="xl"?{"@media (min-width: 1024px)":{paddingLeft:"0.5rem",paddingRight:"0.5rem",paddingTop:"0.25rem",paddingBottom:"0.25rem",fontSize:"2.25rem",lineHeight:"2.5rem"}}:""]),g=[{label:"A++",threshold:98,className:"bg-teal-400",bgColor:"#2dd4bf"},{label:"A+",threshold:96,className:"bg-emerald-400",bgColor:"#34d399"},{label:"A",threshold:93,className:"bg-green-500",bgColor:"#22c55e"},{label:"B",threshold:83,className:"bg-lime-500",bgColor:"#84cc16"},{label:"C",threshold:69,className:"bg-yellow-500",bgColor:"#eab308"},{label:"D",threshold:49,className:"bg-amber-500",bgColor:"#f59e0b"},{label:"E",threshold:31,className:"bg-orange-500",bgColor:"#f97316"},{label:"F",threshold:17,className:"bg-red-500",bgColor:"#ef4444"},{label:"G",className:"bg-red-700",bgColor:"#b91c1c"}];function s(e){for(const t of g)if(t.threshold===void 0||e>=t.threshold)return t;throw new Error("Invalid score (but that should not happen).")}function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)({}).hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},l.apply(null,arguments)}function c({score:e,className:t=void 0,children:r,...a}){if(e===void 0)return null;const o=s(e);return m(d,l({title:`score: ${e}`,className:n(o.className,t)},a),o.label,r)}export{d as S,c as T,s as g,g as t};
