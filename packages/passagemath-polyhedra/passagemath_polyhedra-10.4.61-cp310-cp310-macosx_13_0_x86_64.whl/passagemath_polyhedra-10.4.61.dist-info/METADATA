Metadata-Version: 2.1
Name: passagemath-polyhedra
Version: 10.4.61
Summary: passagemath: Convex polyhedra in arbitrary dimension, mixed integer linear optimization
Author-email: The Sage Developers <sage-support@googlegroups.com>
Maintainer: Matthias KÃ¶ppe, passagemath contributors
License: GNU General Public License (GPL) v2 or later
Project-URL: release notes, https://github.com/passagemath/passagemath/releases
Project-URL: repo (upstream), https://github.com/sagemath/sage
Project-URL: repo, https://github.com/passagemath/passagemath
Project-URL: documentation, https://doc.sagemath.org
Project-URL: homepage (upstream), https://www.sagemath.org
Project-URL: discourse, https://passagemath.discourse.group
Project-URL: tracker (upstream), https://github.com/sagemath/sage/issues
Project-URL: tracker, https://github.com/passagemath/passagemath/issues
Classifier: Development Status :: 6 - Mature
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: <3.13,>=3.9
Description-Content-Type: text/x-rst
Requires-Dist: passagemath-conf ~=10.4.61.0
Requires-Dist: gmpy2 ~=2.1.b999
Requires-Dist: cysignals >=1.10.2
Requires-Dist: pplpy >=0.8.6
Requires-Dist: memory-allocator
Requires-Dist: passagemath-environment ~=10.4.61.0
Requires-Dist: passagemath-glpk ~=10.4.61.0
Requires-Dist: passagemath-modules ~=10.4.61.0
Provides-Extra: 4ti2
Requires-Dist: passagemath-latte-4ti2 ; extra == '4ti2'
Provides-Extra: numberfield
Requires-Dist: passagemath-polyhedra[flint] ; extra == 'numberfield'
Provides-Extra: qq
Provides-Extra: rdf
Requires-Dist: passagemath-polyhedra[cddlib] ; extra == 'rdf'
Provides-Extra: zz
Provides-Extra: cbc
Requires-Dist: passagemath-polyhedra[cbc_sage] ; extra == 'cbc'
Provides-Extra: cbc_sage
Requires-Dist: sage-numerical-backends-coin >=9.0b12 ; extra == 'cbc_sage'
Provides-Extra: cddlib
Requires-Dist: passagemath-cddlib ; extra == 'cddlib'
Provides-Extra: coin
Requires-Dist: passagemath-polyhedra[cbc_sage] ; extra == 'coin'
Provides-Extra: coin_sage
Requires-Dist: passagemath-polyhedra[cbc_sage] ; extra == 'coin_sage'
Provides-Extra: cplex
Requires-Dist: passagemath-polyhedra[cplex_sage] ; extra == 'cplex'
Provides-Extra: cplex_sage
Requires-Dist: sage-numerical-backends-cplex >=9.0b12 ; extra == 'cplex_sage'
Provides-Extra: cvxopt
Requires-Dist: passagemath-polyhedra[cvxopt_sage] ; extra == 'cvxopt'
Provides-Extra: cvxopt_sage
Requires-Dist: cvxopt >=1.2.5 ; extra == 'cvxopt_sage'
Provides-Extra: cvxpy
Requires-Dist: cvxpy ; extra == 'cvxpy'
Provides-Extra: flint
Requires-Dist: passagemath-flint ; extra == 'flint'
Provides-Extra: fpylll
Requires-Dist: fpylll >=0.5.9 ; extra == 'fpylll'
Provides-Extra: glpk
Requires-Dist: passagemath-polyhedra[glpk_sage] ; extra == 'glpk'
Provides-Extra: glpk_sage
Provides-Extra: gurobi
Requires-Dist: passagemath-polyhedra[gurobi_sage] ; extra == 'gurobi'
Provides-Extra: gurobi_sage
Requires-Dist: sage-numerical-backends-gurobi >=9.0.0 ; extra == 'gurobi_sage'
Provides-Extra: latte
Requires-Dist: passagemath-polyhedra[latte_int] ; extra == 'latte'
Provides-Extra: latte_int
Requires-Dist: passagemath-latte-4ti2 ; extra == 'latte_int'
Provides-Extra: linbox
Requires-Dist: passagemath-linbox ; extra == 'linbox'
Provides-Extra: normaliz
Requires-Dist: pynormaliz ==2.21 ; extra == 'normaliz'
Provides-Extra: palp
Requires-Dist: passagemath-palp ; extra == 'palp'
Provides-Extra: pari
Requires-Dist: passagemath-pari ; extra == 'pari'
Provides-Extra: plot
Requires-Dist: passagemath-plot ; extra == 'plot'
Provides-Extra: polymake
Requires-Dist: jupymake >=0.9 ; extra == 'polymake'
Provides-Extra: ppl
Provides-Extra: scip
Requires-Dist: PySCIPOpt ; extra == 'scip'
Provides-Extra: standard
Requires-Dist: passagemath-polyhedra[flint,fpylll,glpk,graphs,groups,linbox,pari,plot,rdf] ; extra == 'standard'
Provides-Extra: test
Requires-Dist: passagemath-repl ; extra == 'test'
Provides-Extra: topcom
Requires-Dist: passagemath-topcom ; extra == 'topcom'

====================================================================================================================
 passagemath: Convex polyhedra in arbitrary dimension, mixed integer linear optimization
====================================================================================================================

About SageMath
--------------

   "Creating a Viable Open Source Alternative to
    Magma, Maple, Mathematica, and MATLAB"

   Copyright (C) 2005-2024 The Sage Development Team

   https://www.sagemath.org

SageMath fully supports all major Linux distributions, recent versions of
macOS, and Windows (Windows Subsystem for Linux).

See https://doc.sagemath.org/html/en/installation/index.html
for general installation instructions.


About this pip-installable source distribution
----------------------------------------------

This pip-installable source distribution `passagemath-polyhedra` is a distribution of a part of the Sage Library.  It provides a small subset of the modules of the Sage library ("sagelib", `passagemath-standard`), sufficient for computations with convex polyhedra in arbitrary dimension (in exact rational arithmetic), and linear and mixed integer linear optimization (in floating point arithmetic).


What is included
----------------

* `Combinatorial and Discrete Geometry <https://doc.sagemath.org/html/en/reference/discrete_geometry/index.html>`_: Polyhedra, lattice polyhedra, lattice points in polyhedra, triangulations, fans, polyhedral complexes, hyperplane arrrangements

* `Parma Polyhedra Library (PPL) backends for rational polyhedra <https://doc.sagemath.org/html/en/reference/discrete_geometry/sage/geometry/polyhedron/backend_ppl.html>`_, `lattice polygons <https://doc.sagemath.org/html/en/reference/discrete_geometry/sage/geometry/polyhedron/ppl_lattice_polygon.html>`_, `lattice polytopes <https://doc.sagemath.org/html/en/reference/discrete_geometry/sage/geometry/polyhedron/ppl_lattice_polytope.html>`_; via `pplpy <https://doc.sagemath.org/html/en/reference/spkg/pplpy.html#spkg-pplpy>`_

* `Python backend for polyhedra over general ordered fields <https://doc.sagemath.org/html/en/reference/discrete_geometry/sage/geometry/polyhedron/backend_field.html>`_

* `Linear, Mixed Integer Linear, and Semidefinite Optimization frontends <https://doc.sagemath.org/html/en/reference/numerical/index.html#numerical-optimization>`_

* `GNU Linear Programming Kit (GLPK) backend for large-scale linear and mixed integer linear optimization (floating point arithmetic) <https://doc.sagemath.org/html/en/reference/numerical/sage/numerical/backends/glpk_backend.html>`_

* `Interactive Simplex Method <https://doc.sagemath.org/html/en/reference/numerical/sage/numerical/interactive_simplex_method.html>`_

* see https://github.com/passagemath/passagemath/blob/main/pkgs/sagemath-polyhedra/MANIFEST.in


Examples
--------

A quick way to try it out interactively::

    $ pipx run --pip-args="--prefer-binary" --spec "passagemath-polyhedra[test]" ipython

    In [1]: from sage.all__sagemath_polyhedra import *


Available as extras, from other distributions
---------------------------------------------

Additional features:

`pip install "passagemath-polyhedra[graphs]"`
 Face lattices, combinatorial polyhedra, graph-theoretic constructions

`pip install "passagemath-polyhedra[groups]"`
 Constructing symmetric polyhedra, computing automorphisms, lattice point counting modulo group actions

`pip install "passagemath-polyhedra[toric]"`
 `Toric Varieties <https://doc.sagemath.org/html/en/reference/schemes/index.html#toric-varieties>`_

Other backends for polyhedral computations can be installed:

`pip install "passagemath-polyhedra[normaliz]"`
 `Normaliz <https://doc.sagemath.org/html/en/reference/spkg/normaliz.html#spkg-normaliz>`_, via `PyNormaliz <https://doc.sagemath.org/html/en/reference/spkg/pynormaliz.html#spkg-pynormaliz>`_,
 provides very fast computations in particular for polyhedra with data in algebraic number fields.

::

   $ pipx run --pip-args="--prefer-binary" --spec "passagemath-polyhedra[normaliz,test]" ipython

   In [1]: from sage.all__sagemath_polyhedra import *

   In [2]: gap_norm = polytopes.grand_antiprism(backend='normaliz'); gap_norm

   In [3]: gap_norm.f_vector()

`pip install "passagemath-polyhedra[cddlib]"`
 cddlib provides support for computations with polyhedra in floating-point arithmetic.

`passagemath-polyhedra` also provides integration with other packages for additional functionality:

`pip install "passagemath-polyhedra[latte]"` installs `LattE integrale <https://doc.sagemath.org/html/en/reference/spkg/latte_int.html#spkg-latte-int>`_ for lattice point counting and volume computation using generating functions.

::

   $ pipx run --pip-args="--prefer-binary" --spec "passagemath-polyhedra[latte,test]" ipython

   In [1]: from sage.all__sagemath_polyhedra import *

   In [2]: P = polytopes.cube()

   In [3]: P.integral_points_count()
   Out[3]:
   27

   In [4]: (1000000000*P).integral_points_count(verbose=True)
   This is LattE integrale...
   ...
   Total time:...
   Out[4]:
   8000000012000000006000000001

`pip install "passagemath-polyhedra[polymake]"`
 `Polymake <https://doc.sagemath.org/html/en/reference/spkg/polymake.html#spkg-polymake>`_, via `JuPyMake <https://pypi.org/project/JuPyMake/>`_

`lrslib <https://doc.sagemath.org/html/en/reference/spkg/lrslib.html#spkg-lrslib>`_

Optional backends for optimization:

`pip install "passagemath-polyhedra[cbc]"`
 `COIN/OR CBC <https://doc.sagemath.org/html/en/reference/spkg/cbc.html#spkg-cbc>`_ Mixed Integer Linear Optimization solver,
 via `sage_numerical_backends_coin <https://doc.sagemath.org/html/en/reference/spkg/sage_numerical_backends_coin.html#spkg-sage-numerical-backends-coin>`_

`pip install "passagemath-polyhedra[cplex]"`
 CPLEX Mixed Integer Optimization solver (proprietary; requires licensed installation),
 via `sage_numerical_backends_cplex <https://doc.sagemath.org/html/en/reference/spkg/sage_numerical_backends_cplex.html#spkg-sage-numerical-backends-cplex>`_

`pip install "passagemath-polyhedra[cvxpy]"`
 `CVXPy <https://doc.sagemath.org/html/en/reference/spkg/cvxpy.html#spkg-cvxpy>`_ as middle-end for `various backends <https://www.cvxpy.org/install/>`_

`pip install "passagemath-polyhedra[gurobi]"`
 Gurobi Mixed Integer Optimization solver (proprietary; requires licensed installation), via `sage_numerical_backends_gurobi <https://doc.sagemath.org/html/en/reference/spkg/sage_numerical_backends_gurobi.html#spkg-sage-numerical-backends-gurobi>`_

`pip install "passagemath-polyhedra[scip]"`
 `SCIP <https://doc.sagemath.org/html/en/reference/spkg/scip.html#spkg-scip>`_ Mixed Integer Optimization solver,
 via `PySCIPOpt <https://doc.sagemath.org/html/en/reference/spkg/pyscipopt.html#spkg-pyscipopt>`_


Development
-----------

::

    $ git clone --origin passagemath https://github.com/passagemath/passagemath.git
    $ cd passagemath
    passagemath $ ./bootstrap
    passagemath $ python3 -m venv polyhedra-venv
    passagemath $ source polyhedra-venv/bin/activate
    (polyhedra-venv) passagemath $ pip install -v -e pkgs/sagemath-polyhedra
