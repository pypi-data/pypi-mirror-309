import datetime
import pathlib
from typing import Callable, TypeVar, ParamSpec

T = TypeVar("T")
P = ParamSpec("P")

class ExpiredError(Exception): ...

class LicenseDecorator:
    license_path: pathlib.Path
    private_key: str
    def __init__(self, license_path: pathlib.Path, private_key: str) -> None: ...
    def validate(self) -> None: ...
    def __call__(self, func: Callable[P, T]) -> Callable[P, T]: ...

CW_DIR: pathlib.Path
PRIVATE_FILE: pathlib.Path
PUBLIC_FILE: pathlib.Path
LICENSE_FILE: pathlib.Path

class License:
    @staticmethod
    def generate_keys() -> None: ...
    @staticmethod
    def encode(data: bytes) -> str: ...
    @staticmethod
    def decode(data: str) -> bytes: ...
    @classmethod
    def encrypt(cls, data: str) -> None: ...
    @classmethod
    def decrypt(cls, private_key: bytes, data: str) -> datetime.datetime: ...
    @classmethod
    def cli_decrypt(cls) -> None: ...

def cli() -> None: ...
