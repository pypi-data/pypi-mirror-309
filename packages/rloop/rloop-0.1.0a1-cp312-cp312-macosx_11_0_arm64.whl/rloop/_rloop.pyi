from typing import Any
from weakref import WeakSet

__version__: str

class CBHandle:
    def cancel(self): ...
    def cancelled(self) -> bool: ...

class TimerHandle:
    when: int

    def cancel(self): ...
    def cancelled(self) -> bool: ...

class EventLoop:
    _asyncgens: WeakSet
    _asyncgens_shutdown_called: bool
    _base_ctx: Any
    _clock: int
    _closed: bool
    _default_executor: Any
    _executor_shutdown_called: bool
    _exception_handler: Any
    _stopping: bool
    _task_factory: Any
    _thread_id: int

    def _run(self): ...
    def _call_soon(self, callback, args, context) -> CBHandle: ...
    def _call_later(self, delay, callback, args, context) -> TimerHandle: ...
    def _reader_add(self, fd, callback, args, context) -> CBHandle: ...
    def _reader_rem(self, fd) -> bool: ...
    def _writer_add(self, fd, callback, args, context) -> CBHandle: ...
    def _writer_rem(self, fd) -> bool: ...
