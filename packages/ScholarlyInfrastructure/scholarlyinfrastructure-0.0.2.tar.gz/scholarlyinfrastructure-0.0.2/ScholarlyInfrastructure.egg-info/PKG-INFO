Metadata-Version: 2.1
Name: ScholarlyInfrastructure
Version: 0.0.2
Summary: 所谓大学者，非谓有大楼之谓也，有大师之谓也。
Home-page: https://github.com/THU-CVML/ScholarlyInfrastructure
Author: 叶璨铭 (Ye Canming)
Author-email: ycm24@mails.tsinghua.edu.cn
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python thu tsinghua cv ml vision learning
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fastcore
Requires-Dist: decorator
Requires-Dist: pydantic
Requires-Dist: loguru
Requires-Dist: bigmodelvis
Requires-Dist: richuru
Requires-Dist: optuna
Provides-Extra: dev
Requires-Dist: nbdev; extra == "dev"
Requires-Dist: ipykernel; extra == "dev"

# 大师荟萃之楼


<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

> “所谓大学者，非谓有大楼之谓也，有大师之谓也。” ——梅贻琦

> “A first-class university is not top for its grand infrastuctures, but
> by its great scholars.” —— Mei Yiqi

Inspired by the timeless wisdom of Mei Yiqi, Scholarly Infrastructure is
a foundational library designed to support and accelerate research
projects within our laboratory.

## 🌟 Introduction

**Scholarly Infrastructure** aims to provide a robust and modular
foundation for all projects in our research group. It centralizes common
utilities, tools, and workflows, enabling seamless collaboration and
reducing redundant development effort. By building on this
infrastructure, researchers can focus more on innovation and
experimentation rather than re-implementing fundamental components.

## 🔑 **Key Features**

- 📚 **Common Utilities**: Ready-to-use tools for data processing,
  visualization, and analysis.  
- ⚙️ **Modular Design**: Highly reusable modules that can be integrated
  across diverse projects.  
- 🚀 **Performance Optimization**: Optimized algorithms and workflows
  for research tasks.  
- 🔒 **Scalable and Reliable**: Built to handle the increasing
  complexity of modern research.  
- 🛠️ **Customizable**: Easy to extend and tailor to specific project
  needs.

## 📦 **Installation**

Install latest from the GitHub
[repository](https://github.com/THU-CVML/ScholarlyInfrastructure):

``` sh
$ pip install git+https://github.com/THU-CVML/ScholarlyInfrastructure.git
```

or from [conda](https://anaconda.org/2catycm/namable_classify)

``` sh
$ conda install -c yecanming6666 scholarly_infrastructure
```

or from [pypi](https://pypi.org/project/namable_classify/)

``` sh
$ pip install scholarly_infrastructure
```

<!-- [docs]: https://2catycm.github.io/NamableClassify/ -->

## 📖 **Usage**

### Documentation

Documentation currently not available.

<!-- Documentation can be found hosted on this GitHub [repository][repo]'s [pages][docs].  -->
<!-- TODO correct links -->
<!-- [docs]: https://github.com/THU-CVML/ScholarlyInfrastructure -->

### Quick Start

Here’s a quick example to get started:

``` python
1+1
```

    2

<!-- ## 🏗️ **Architecture**
&#10;The library is organized into the following modules:
&#10;1. **Data Utilities**: Functions for data loading, cleaning, and manipulation.  
2. **Visualization Tools**: Easy-to-use tools for plotting and presenting data.  
3. **Model Training Helpers**: Scripts and utilities to streamline model training and evaluation.  
4. **Optimization Frameworks**: Support for hyperparameter tuning and experimentation.  
5. **Research Tools**: Domain-specific tools tailored to our lab's projects.
&#10;--- -->

## 🤝 **Contributing**

Contributions are welcome! Here’s how you can quickly get involved.
Please review our [contribution guidelines](CONTRIBUTING.md) for more
details.

### git guide

1.  Fork the repository and then git clone it to your local machine:
    `git clone https://github.com/your-username/ScholarlyInfrastructure.git`.  
2.  Create a new branch for your feature or bug fix:
    `git checkout -b feature-name`.  
3.  Commit your changes: `git commit -m "Add feature-name"`.  
4.  Push your branch: `git push origin feature-name`.  
5.  Open a pull request and describe your changes.

------------------------------------------------------------------------

### nbdev framework guide

Our project utilizes `nbdev` to manage our codes, tests and
documentation. If you are new to using `nbdev` here are some quich
points to get you started.

#### 1. Install this libary in Development mode

After you have cloned the repository, and before you start working on
it, you need to pip install this library in development mode. This can
be done using the following command:

``` sh
# make sure NamableClassify package is installed in development mode
$ pip install -e .[dev]
```

#### 2. make changes under `notebooks/` directory

use `#| export` for exported codes.

#### 3. check and synchronize before git commit

``` sh
# compile to have changes apply to the python module
$ nbdev_prepare
```

## 📜 **License**

This project is licensed under the [Apache 2.0 License](LICENSE). You
are free to use, modify, and distribute this software under the terms,
provided you comply with the license’s conditions, including giving
credit to the original authors and not using their trademarks.

<!-- TODO contributors authors in a file -->
<!-- ---
&#10;## 🌐 **Contact**
&#10;For questions, feedback, or support, feel free to reach out:
&#10;- **Maintainer**: Your Name  
- **Email**: your_email@example.com  
- **Website**: [Your Lab's Website](https://example.com)
&#10;--- -->

Let **Scholarly Infrastructure** be the foundation that powers your next
groundbreaking discovery. Together, we build not just tools, but a
thriving research ecosystem. ✨
