"use strict";(self["webpackChunkdpgui"]=self["webpackChunkdpgui"]||[]).push([[615],{3491:function(e){e.exports=JSON.parse('{"object":"Argument","name":"init_bulk_jdata","type":["dict"],"optional":false,"alias":[],"doc":"Generate initial data for bulk systems.","repeat":false,"sub_fields":{"stages":{"object":"Argument","name":"stages","type":["list"],"optional":false,"alias":[],"doc":"Stages for `init_bulk`.","repeat":false,"sub_fields":{},"sub_variants":{}},"elements":{"object":"Argument","name":"elements","type":["list"],"optional":false,"alias":[],"doc":"Atom types.","repeat":false,"sub_fields":{},"sub_variants":{}},"potcars":{"object":"Argument","name":"potcars","type":["list"],"optional":true,"alias":[],"doc":"Path of POTCAR.","repeat":false,"sub_fields":{},"sub_variants":{}},"cell_type":{"object":"Argument","name":"cell_type","type":["str"],"optional":true,"alias":[],"doc":"Specifying which typical structure to be generated. **Options** include fcc, hcp, bcc, sc, diamond.","repeat":false,"sub_fields":{},"sub_variants":{}},"super_cell":{"object":"Argument","name":"super_cell","type":["list"],"optional":false,"alias":[],"doc":"Size of supercell.","repeat":false,"sub_fields":{},"sub_variants":{}},"from_poscar":{"object":"Argument","name":"from_poscar","type":["bool"],"optional":true,"alias":[],"doc":"Deciding whether to use a given poscar as the beginning of relaxation. If it\'s true, keys (`cell_type`, `latt`) will be aborted. Otherwise, these two keys are **necessary**.","repeat":false,"sub_fields":{},"sub_variants":{},"default":false},"from_poscar_path":{"object":"Argument","name":"from_poscar_path","type":["str"],"optional":true,"alias":[],"doc":"Path of POSCAR for VASP or STRU for ABACUS. **Necessary** if `from_poscar` is true.","repeat":false,"sub_fields":{},"sub_variants":{}},"relax_incar":{"object":"Argument","name":"relax_incar","type":["str"],"optional":true,"alias":[],"doc":"Path of INCAR for VASP or INPUT for ABACUS for relaxation in VASP. **Necessary** if `stages` include 1.","repeat":false,"sub_fields":{},"sub_variants":{}},"md_incar":{"object":"Argument","name":"md_incar","type":["str"],"optional":true,"alias":[],"doc":"Path of INCAR for VASP or INPUT for ABACUS for MD in VASP. **Necessary** if `stages` include 3.","repeat":false,"sub_fields":{},"sub_variants":{}},"scale":{"object":"Argument","name":"scale","type":["list"],"optional":false,"alias":[],"doc":"Scales for isotropic transforming cells.","repeat":false,"sub_fields":{},"sub_variants":{}},"skip_relax":{"object":"Argument","name":"skip_relax","type":["bool"],"optional":false,"alias":[],"doc":"If it\'s true, you may directly run stage 2 (perturb and scale) using an unrelaxed POSCAR.","repeat":false,"sub_fields":{},"sub_variants":{}},"pert_numb":{"object":"Argument","name":"pert_numb","type":["int"],"optional":false,"alias":[],"doc":"Number of perturbations for each scaled (key `scale`) POSCAR.","repeat":false,"sub_fields":{},"sub_variants":{}},"pert_box":{"object":"Argument","name":"pert_box","type":["float"],"optional":false,"alias":[],"doc":"Anisotropic Perturbation for cells (independent changes of lengths of three box vectors as well as angel among) in decimal formats. 9 elements of the 3x3 perturbation matrix will be randomly sampled from a uniform distribution (default) in the range [-pert_box, pert_box]. Such a perturbation matrix adds the identity matrix gives the actual transformation matrix for this perturbation operation.","repeat":false,"sub_fields":{},"sub_variants":{}},"pert_atom":{"object":"Argument","name":"pert_atom","type":["float"],"optional":false,"alias":[],"doc":"Perturbation of atom coordinates (Angstrom). Random perturbations are performed on three coordinates of each atom by adding values randomly sampled from a uniform distribution in the range [-pert_atom, pert_atom].","repeat":false,"sub_fields":{},"sub_variants":{}},"md_nstep":{"object":"Argument","name":"md_nstep","type":["int"],"optional":false,"alias":[],"doc":"Steps of AIMD in stage 3. If it\'s not equal to settings via `NSW` in `md_incar`, DP-GEN will follow `NSW`.","repeat":false,"sub_fields":{},"sub_variants":{}},"coll_ndata":{"object":"Argument","name":"coll_ndata","type":["int"],"optional":false,"alias":[],"doc":"Maximal number of collected data.","repeat":false,"sub_fields":{},"sub_variants":{}},"type_map":{"object":"Argument","name":"type_map","type":["list"],"optional":true,"alias":[],"doc":"The indices of elements in deepmd formats will be set in this order.","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{"init_fp_style":{"object":"Variant","flag_name":"init_fp_style","optional":true,"default_tag":"VASP","choice_dict":{"VASP":{"object":"Argument","name":"VASP","type":["dict"],"optional":false,"alias":[],"doc":"No more parameters is needed to be added.","repeat":false,"sub_fields":{},"sub_variants":{}},"ABACUS":{"object":"Argument","name":"ABACUS","type":["dict"],"optional":false,"alias":[],"doc":"ABACUS","repeat":false,"sub_fields":{"relax_kpt":{"object":"Argument","name":"relax_kpt","type":["str"],"optional":true,"alias":[],"doc":"Path of `KPT` file for relaxation in stage 1. Only useful if `init_fp_style` is \\"ABACUS\\".","repeat":false,"sub_fields":{},"sub_variants":{}},"md_kpt":{"object":"Argument","name":"md_kpt","type":["str"],"optional":true,"alias":[],"doc":"Path of `KPT` file for MD simulations in stage 3. Only useful if `init_fp_style` is \\"ABACUS\\".","repeat":false,"sub_fields":{},"sub_variants":{}},"atom_masses":{"object":"Argument","name":"atom_masses","type":["list"],"optional":true,"alias":[],"doc":"List of atomic masses of elements. The order should be the same as `Elements`. Only useful if `init_fp_style` is \\"ABACUS\\".","repeat":false,"sub_fields":{},"sub_variants":{}}},"sub_variants":{}}},"choice_alias":{},"doc":"First-principle software. If this key is absent."}}}')}}]);