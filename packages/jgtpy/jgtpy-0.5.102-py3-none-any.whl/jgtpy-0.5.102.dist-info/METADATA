Metadata-Version: 2.1
Name: jgtpy
Version: 0.5.102
Summary: Enhanced JGTPy CDS, IDS, PDSP Services
Home-page: https://github.com/jgwill/jgtpy
Author: GUillaume Isabelle
Author-email: Guillaume Isabelle <jgi@jgwill.com>
Project-URL: Homepage, https://github.com/jgwill/jgtpy
Project-URL: Bug Tracker, https://github.com/jgwill/jgtpy/issues
Keywords: data
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas>=0.25.1
Requires-Dist: python-dotenv>=0.19.2
Requires-Dist: jgtapy>=1.9.21
Requires-Dist: jgtutils>=0.2.218
Requires-Dist: dropbox>=11.36.2
Requires-Dist: tlid>=0.1.15
Requires-Dist: scipy>=1.7.3
Requires-Dist: matplotlib>=3.3.1
Requires-Dist: plotly>=5.18.0
Requires-Dist: mplfinance>=0.12.10b0
Requires-Dist: panel>=1.2.3
Requires-Dist: tomli>=1.2.3
Requires-Dist: jinja2
Requires-Dist: dash
Requires-Dist: panel
Requires-Dist: tdqm
Provides-Extra: dev-docs
Requires-Dist: readme-renderer; extra == "dev-docs"
Requires-Dist: sphinx; extra == "dev-docs"
Requires-Dist: sphinx-rtd-theme>=0.4.0; extra == "dev-docs"
Requires-Dist: html2text>=2020.1.16; extra == "dev-docs"
Requires-Dist: html2markdown>=0.1.7; extra == "dev-docs"
Provides-Extra: dev-lint
Requires-Dist: flake8<3.7.0,>=3.6.0; extra == "dev-lint"
Requires-Dist: isort<4.4.0,>=4.3.4; extra == "dev-lint"
Provides-Extra: dev-test
Requires-Dist: coverage; extra == "dev-test"
Requires-Dist: pytest>=3.10; extra == "dev-test"



# jgtpy (pdsp/ids/cds)

Enhanced JGTPy CDS, IDS, PDS Services


## Installation
```sh
pip install -U jgtpy
```

## Example

```py

    >>> import pandas as pd
    >>> import jgtpy
    >>> df=jgtpy.getPH('EUR/USD','H4')
    >>>
    >>> # retrieve 3000 periods and generate from the DF
    >>> df=jgtpy.getPH('EUR/USD','H4',3000,with_index=False)
    >>> dfi=jgtpy.createFromDF(df)
    >>>
    >>> # Create with Timerange
    >>> start="11.17.2022 00:00:00"
    >>> end="11.25.2022 00:00:00"
    >>> df=jgtpy.createByRange("USD/CAD","m15",start,end)
    >>>
    >>> # offsets date for retreival
    >>> dtfirst_with_offset=jgtetl.svc_offset_dt_by_tf(dtfirst,ctx.timeframe)
    >>> df=createByRange(ctx.instrument,ctx.timeframe,dtfirst_with_offset,dtlast)

```

